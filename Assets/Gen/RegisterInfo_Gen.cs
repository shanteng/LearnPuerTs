using Puerts.TypeMapping;
using Puerts;

namespace PuertsStaticWrap
{
#if ENABLE_IL2CPP
    [UnityEngine.Scripting.Preserve]
#endif
    public static class PuerRegisterInfo_Gen
    {
        
        public static RegisterInfo GetRegisterInfo_UnityEngine_Debug_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Debug_Wrap.Constructor
#endif
                    }},
                    {"DrawLine_static", new MemberRegisterInfo { Name = "DrawLine", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Debug_Wrap.F_DrawLine
#endif
                    }},
                    {"DrawRay_static", new MemberRegisterInfo { Name = "DrawRay", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Debug_Wrap.F_DrawRay
#endif
                    }},
                    {"Break_static", new MemberRegisterInfo { Name = "Break", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Debug_Wrap.F_Break
#endif
                    }},
                    {"DebugBreak_static", new MemberRegisterInfo { Name = "DebugBreak", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Debug_Wrap.F_DebugBreak
#endif
                    }},
                    {"Log_static", new MemberRegisterInfo { Name = "Log", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Debug_Wrap.F_Log
#endif
                    }},
                    {"LogFormat_static", new MemberRegisterInfo { Name = "LogFormat", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Debug_Wrap.F_LogFormat
#endif
                    }},
                    {"LogError_static", new MemberRegisterInfo { Name = "LogError", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Debug_Wrap.F_LogError
#endif
                    }},
                    {"LogErrorFormat_static", new MemberRegisterInfo { Name = "LogErrorFormat", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Debug_Wrap.F_LogErrorFormat
#endif
                    }},
                    {"ClearDeveloperConsole_static", new MemberRegisterInfo { Name = "ClearDeveloperConsole", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Debug_Wrap.F_ClearDeveloperConsole
#endif
                    }},
                    {"LogException_static", new MemberRegisterInfo { Name = "LogException", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Debug_Wrap.F_LogException
#endif
                    }},
                    {"LogWarning_static", new MemberRegisterInfo { Name = "LogWarning", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Debug_Wrap.F_LogWarning
#endif
                    }},
                    {"LogWarningFormat_static", new MemberRegisterInfo { Name = "LogWarningFormat", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Debug_Wrap.F_LogWarningFormat
#endif
                    }},
                    {"Assert_static", new MemberRegisterInfo { Name = "Assert", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Debug_Wrap.F_Assert
#endif
                    }},
                    {"AssertFormat_static", new MemberRegisterInfo { Name = "AssertFormat", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Debug_Wrap.F_AssertFormat
#endif
                    }},
                    {"LogAssertion_static", new MemberRegisterInfo { Name = "LogAssertion", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Debug_Wrap.F_LogAssertion
#endif
                    }},
                    {"LogAssertionFormat_static", new MemberRegisterInfo { Name = "LogAssertionFormat", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Debug_Wrap.F_LogAssertionFormat
#endif
                    }},
                    {"unityLogger_static", new MemberRegisterInfo { Name = "unityLogger", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Debug_Wrap.G_unityLogger
#endif
                    }},
                    {"developerConsoleVisible_static", new MemberRegisterInfo { Name = "developerConsoleVisible", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Debug_Wrap.G_developerConsoleVisible, PropertySetter = UnityEngine_Debug_Wrap.S_developerConsoleVisible
#endif
                    }},
                    {"isDebugBuild_static", new MemberRegisterInfo { Name = "isDebugBuild", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Debug_Wrap.G_isDebugBuild
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Vector3_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Vector3_Wrap.Constructor
#endif
                    }},
                    {"Set", new MemberRegisterInfo { Name = "Set", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.M_Set
#endif
                    }},
                    {"Scale", new MemberRegisterInfo { Name = "Scale", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.M_Scale
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.M_GetHashCode
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.M_Equals
#endif
                    }},
                    {"Normalize", new MemberRegisterInfo { Name = "Normalize", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.M_Normalize
#endif
                    }},
                    {"op_Addition_static", new MemberRegisterInfo { Name = "op_Addition", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.O_op_Addition
#endif
                    }},
                    {"op_Subtraction_static", new MemberRegisterInfo { Name = "op_Subtraction", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.O_op_Subtraction
#endif
                    }},
                    {"op_UnaryNegation_static", new MemberRegisterInfo { Name = "op_UnaryNegation", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.O_op_UnaryNegation
#endif
                    }},
                    {"op_Multiply_static", new MemberRegisterInfo { Name = "op_Multiply", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.O_op_Multiply
#endif
                    }},
                    {"op_Division_static", new MemberRegisterInfo { Name = "op_Division", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.O_op_Division
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.O_op_Inequality
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.M_ToString
#endif
                    }},
                    {"get_Item", new MemberRegisterInfo { Name = "get_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.GetItem
#endif
                    }},
                    {"set_Item", new MemberRegisterInfo { Name = "set_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.SetItem
#endif
                    }},
                    {"normalized", new MemberRegisterInfo { Name = "normalized", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3_Wrap.G_normalized
#endif
                    }},
                    {"magnitude", new MemberRegisterInfo { Name = "magnitude", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3_Wrap.G_magnitude
#endif
                    }},
                    {"sqrMagnitude", new MemberRegisterInfo { Name = "sqrMagnitude", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3_Wrap.G_sqrMagnitude
#endif
                    }},
                    {"x", new MemberRegisterInfo { Name = "x", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3_Wrap.G_x, PropertySetter = UnityEngine_Vector3_Wrap.S_x
#endif
                    }},
                    {"y", new MemberRegisterInfo { Name = "y", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3_Wrap.G_y, PropertySetter = UnityEngine_Vector3_Wrap.S_y
#endif
                    }},
                    {"z", new MemberRegisterInfo { Name = "z", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3_Wrap.G_z, PropertySetter = UnityEngine_Vector3_Wrap.S_z
#endif
                    }},
                    {"Slerp_static", new MemberRegisterInfo { Name = "Slerp", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_Slerp
#endif
                    }},
                    {"SlerpUnclamped_static", new MemberRegisterInfo { Name = "SlerpUnclamped", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_SlerpUnclamped
#endif
                    }},
                    {"OrthoNormalize_static", new MemberRegisterInfo { Name = "OrthoNormalize", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_OrthoNormalize
#endif
                    }},
                    {"RotateTowards_static", new MemberRegisterInfo { Name = "RotateTowards", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_RotateTowards
#endif
                    }},
                    {"Lerp_static", new MemberRegisterInfo { Name = "Lerp", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_Lerp
#endif
                    }},
                    {"LerpUnclamped_static", new MemberRegisterInfo { Name = "LerpUnclamped", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_LerpUnclamped
#endif
                    }},
                    {"MoveTowards_static", new MemberRegisterInfo { Name = "MoveTowards", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_MoveTowards
#endif
                    }},
                    {"SmoothDamp_static", new MemberRegisterInfo { Name = "SmoothDamp", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_SmoothDamp
#endif
                    }},
                    {"Scale_static", new MemberRegisterInfo { Name = "Scale", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_Scale
#endif
                    }},
                    {"Cross_static", new MemberRegisterInfo { Name = "Cross", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_Cross
#endif
                    }},
                    {"Reflect_static", new MemberRegisterInfo { Name = "Reflect", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_Reflect
#endif
                    }},
                    {"Normalize_static", new MemberRegisterInfo { Name = "Normalize", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_Normalize
#endif
                    }},
                    {"Dot_static", new MemberRegisterInfo { Name = "Dot", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_Dot
#endif
                    }},
                    {"Project_static", new MemberRegisterInfo { Name = "Project", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_Project
#endif
                    }},
                    {"ProjectOnPlane_static", new MemberRegisterInfo { Name = "ProjectOnPlane", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_ProjectOnPlane
#endif
                    }},
                    {"Angle_static", new MemberRegisterInfo { Name = "Angle", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_Angle
#endif
                    }},
                    {"SignedAngle_static", new MemberRegisterInfo { Name = "SignedAngle", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_SignedAngle
#endif
                    }},
                    {"Distance_static", new MemberRegisterInfo { Name = "Distance", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_Distance
#endif
                    }},
                    {"ClampMagnitude_static", new MemberRegisterInfo { Name = "ClampMagnitude", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_ClampMagnitude
#endif
                    }},
                    {"Magnitude_static", new MemberRegisterInfo { Name = "Magnitude", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_Magnitude
#endif
                    }},
                    {"SqrMagnitude_static", new MemberRegisterInfo { Name = "SqrMagnitude", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_SqrMagnitude
#endif
                    }},
                    {"Min_static", new MemberRegisterInfo { Name = "Min", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_Min
#endif
                    }},
                    {"Max_static", new MemberRegisterInfo { Name = "Max", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3_Wrap.F_Max
#endif
                    }},
                    {"zero_static", new MemberRegisterInfo { Name = "zero", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3_Wrap.G_zero
#endif
                    }},
                    {"one_static", new MemberRegisterInfo { Name = "one", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3_Wrap.G_one
#endif
                    }},
                    {"forward_static", new MemberRegisterInfo { Name = "forward", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3_Wrap.G_forward
#endif
                    }},
                    {"back_static", new MemberRegisterInfo { Name = "back", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3_Wrap.G_back
#endif
                    }},
                    {"up_static", new MemberRegisterInfo { Name = "up", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3_Wrap.G_up
#endif
                    }},
                    {"down_static", new MemberRegisterInfo { Name = "down", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3_Wrap.G_down
#endif
                    }},
                    {"left_static", new MemberRegisterInfo { Name = "left", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3_Wrap.G_left
#endif
                    }},
                    {"right_static", new MemberRegisterInfo { Name = "right", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3_Wrap.G_right
#endif
                    }},
                    {"positiveInfinity_static", new MemberRegisterInfo { Name = "positiveInfinity", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3_Wrap.G_positiveInfinity
#endif
                    }},
                    {"negativeInfinity_static", new MemberRegisterInfo { Name = "negativeInfinity", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3_Wrap.G_negativeInfinity
#endif
                    }},
                    {"kEpsilon_static", new MemberRegisterInfo { Name = "kEpsilon", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3_Wrap.G_kEpsilon
#endif
                    }},
                    {"kEpsilonNormalSqrt_static", new MemberRegisterInfo { Name = "kEpsilonNormalSqrt", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3_Wrap.G_kEpsilonNormalSqrt
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_System_Collections_Generic_List_1_System_Int32__Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = System_Collections_Generic_List_1_System_Int32__Wrap.Constructor
#endif
                    }},
                    {"Add", new MemberRegisterInfo { Name = "Add", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_Add
#endif
                    }},
                    {"AddRange", new MemberRegisterInfo { Name = "AddRange", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_AddRange
#endif
                    }},
                    {"AsReadOnly", new MemberRegisterInfo { Name = "AsReadOnly", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_AsReadOnly
#endif
                    }},
                    {"BinarySearch", new MemberRegisterInfo { Name = "BinarySearch", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_BinarySearch
#endif
                    }},
                    {"Clear", new MemberRegisterInfo { Name = "Clear", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_Clear
#endif
                    }},
                    {"Contains", new MemberRegisterInfo { Name = "Contains", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_Contains
#endif
                    }},
                    {"CopyTo", new MemberRegisterInfo { Name = "CopyTo", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_CopyTo
#endif
                    }},
                    {"Exists", new MemberRegisterInfo { Name = "Exists", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_Exists
#endif
                    }},
                    {"Find", new MemberRegisterInfo { Name = "Find", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_Find
#endif
                    }},
                    {"FindAll", new MemberRegisterInfo { Name = "FindAll", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_FindAll
#endif
                    }},
                    {"FindIndex", new MemberRegisterInfo { Name = "FindIndex", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_FindIndex
#endif
                    }},
                    {"FindLast", new MemberRegisterInfo { Name = "FindLast", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_FindLast
#endif
                    }},
                    {"FindLastIndex", new MemberRegisterInfo { Name = "FindLastIndex", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_FindLastIndex
#endif
                    }},
                    {"ForEach", new MemberRegisterInfo { Name = "ForEach", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_ForEach
#endif
                    }},
                    {"GetEnumerator", new MemberRegisterInfo { Name = "GetEnumerator", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_GetEnumerator
#endif
                    }},
                    {"GetRange", new MemberRegisterInfo { Name = "GetRange", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_GetRange
#endif
                    }},
                    {"IndexOf", new MemberRegisterInfo { Name = "IndexOf", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_IndexOf
#endif
                    }},
                    {"Insert", new MemberRegisterInfo { Name = "Insert", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_Insert
#endif
                    }},
                    {"InsertRange", new MemberRegisterInfo { Name = "InsertRange", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_InsertRange
#endif
                    }},
                    {"LastIndexOf", new MemberRegisterInfo { Name = "LastIndexOf", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_LastIndexOf
#endif
                    }},
                    {"Remove", new MemberRegisterInfo { Name = "Remove", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_Remove
#endif
                    }},
                    {"RemoveAll", new MemberRegisterInfo { Name = "RemoveAll", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_RemoveAll
#endif
                    }},
                    {"RemoveAt", new MemberRegisterInfo { Name = "RemoveAt", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_RemoveAt
#endif
                    }},
                    {"RemoveRange", new MemberRegisterInfo { Name = "RemoveRange", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_RemoveRange
#endif
                    }},
                    {"Reverse", new MemberRegisterInfo { Name = "Reverse", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_Reverse
#endif
                    }},
                    {"Sort", new MemberRegisterInfo { Name = "Sort", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_Sort
#endif
                    }},
                    {"ToArray", new MemberRegisterInfo { Name = "ToArray", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_ToArray
#endif
                    }},
                    {"TrimExcess", new MemberRegisterInfo { Name = "TrimExcess", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_TrimExcess
#endif
                    }},
                    {"TrueForAll", new MemberRegisterInfo { Name = "TrueForAll", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.M_TrueForAll
#endif
                    }},
                    {"Capacity", new MemberRegisterInfo { Name = "Capacity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Collections_Generic_List_1_System_Int32__Wrap.G_Capacity, PropertySetter = System_Collections_Generic_List_1_System_Int32__Wrap.S_Capacity
#endif
                    }},
                    {"Count", new MemberRegisterInfo { Name = "Count", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Collections_Generic_List_1_System_Int32__Wrap.G_Count
#endif
                    }},
                    {"get_Item", new MemberRegisterInfo { Name = "get_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.GetItem
#endif
                    }},
                    {"set_Item", new MemberRegisterInfo { Name = "set_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_List_1_System_Int32__Wrap.SetItem
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_System_Collections_Generic_Dictionary_2_System_String_System_Collections_Generic_List_1_System_Int32___Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = System_Collections_Generic_Dictionary_2_System_String_System_Collections_Generic_List_1_System_Int32___Wrap.Constructor
#endif
                    }},
                    {"Add", new MemberRegisterInfo { Name = "Add", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_Dictionary_2_System_String_System_Collections_Generic_List_1_System_Int32___Wrap.M_Add
#endif
                    }},
                    {"Clear", new MemberRegisterInfo { Name = "Clear", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_Dictionary_2_System_String_System_Collections_Generic_List_1_System_Int32___Wrap.M_Clear
#endif
                    }},
                    {"ContainsKey", new MemberRegisterInfo { Name = "ContainsKey", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_Dictionary_2_System_String_System_Collections_Generic_List_1_System_Int32___Wrap.M_ContainsKey
#endif
                    }},
                    {"ContainsValue", new MemberRegisterInfo { Name = "ContainsValue", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_Dictionary_2_System_String_System_Collections_Generic_List_1_System_Int32___Wrap.M_ContainsValue
#endif
                    }},
                    {"GetEnumerator", new MemberRegisterInfo { Name = "GetEnumerator", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_Dictionary_2_System_String_System_Collections_Generic_List_1_System_Int32___Wrap.M_GetEnumerator
#endif
                    }},
                    {"GetObjectData", new MemberRegisterInfo { Name = "GetObjectData", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_Dictionary_2_System_String_System_Collections_Generic_List_1_System_Int32___Wrap.M_GetObjectData
#endif
                    }},
                    {"OnDeserialization", new MemberRegisterInfo { Name = "OnDeserialization", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_Dictionary_2_System_String_System_Collections_Generic_List_1_System_Int32___Wrap.M_OnDeserialization
#endif
                    }},
                    {"Remove", new MemberRegisterInfo { Name = "Remove", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_Dictionary_2_System_String_System_Collections_Generic_List_1_System_Int32___Wrap.M_Remove
#endif
                    }},
                    {"TryGetValue", new MemberRegisterInfo { Name = "TryGetValue", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_Dictionary_2_System_String_System_Collections_Generic_List_1_System_Int32___Wrap.M_TryGetValue
#endif
                    }},
                    {"TryAdd", new MemberRegisterInfo { Name = "TryAdd", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"Comparer", new MemberRegisterInfo { Name = "Comparer", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Collections_Generic_Dictionary_2_System_String_System_Collections_Generic_List_1_System_Int32___Wrap.G_Comparer
#endif
                    }},
                    {"Count", new MemberRegisterInfo { Name = "Count", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Collections_Generic_Dictionary_2_System_String_System_Collections_Generic_List_1_System_Int32___Wrap.G_Count
#endif
                    }},
                    {"Keys", new MemberRegisterInfo { Name = "Keys", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Collections_Generic_Dictionary_2_System_String_System_Collections_Generic_List_1_System_Int32___Wrap.G_Keys
#endif
                    }},
                    {"Values", new MemberRegisterInfo { Name = "Values", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Collections_Generic_Dictionary_2_System_String_System_Collections_Generic_List_1_System_Int32___Wrap.G_Values
#endif
                    }},
                    {"get_Item", new MemberRegisterInfo { Name = "get_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_Dictionary_2_System_String_System_Collections_Generic_List_1_System_Int32___Wrap.GetItem
#endif
                    }},
                    {"set_Item", new MemberRegisterInfo { Name = "set_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Collections_Generic_Dictionary_2_System_String_System_Collections_Generic_List_1_System_Int32___Wrap.SetItem
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Time_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Time_Wrap.Constructor
#endif
                    }},
                    {"time_static", new MemberRegisterInfo { Name = "time", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_time
#endif
                    }},
                    {"timeAsDouble_static", new MemberRegisterInfo { Name = "timeAsDouble", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_timeAsDouble
#endif
                    }},
                    {"timeSinceLevelLoad_static", new MemberRegisterInfo { Name = "timeSinceLevelLoad", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_timeSinceLevelLoad
#endif
                    }},
                    {"timeSinceLevelLoadAsDouble_static", new MemberRegisterInfo { Name = "timeSinceLevelLoadAsDouble", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_timeSinceLevelLoadAsDouble
#endif
                    }},
                    {"deltaTime_static", new MemberRegisterInfo { Name = "deltaTime", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_deltaTime
#endif
                    }},
                    {"fixedTime_static", new MemberRegisterInfo { Name = "fixedTime", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_fixedTime
#endif
                    }},
                    {"fixedTimeAsDouble_static", new MemberRegisterInfo { Name = "fixedTimeAsDouble", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_fixedTimeAsDouble
#endif
                    }},
                    {"unscaledTime_static", new MemberRegisterInfo { Name = "unscaledTime", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_unscaledTime
#endif
                    }},
                    {"unscaledTimeAsDouble_static", new MemberRegisterInfo { Name = "unscaledTimeAsDouble", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_unscaledTimeAsDouble
#endif
                    }},
                    {"fixedUnscaledTime_static", new MemberRegisterInfo { Name = "fixedUnscaledTime", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_fixedUnscaledTime
#endif
                    }},
                    {"fixedUnscaledTimeAsDouble_static", new MemberRegisterInfo { Name = "fixedUnscaledTimeAsDouble", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_fixedUnscaledTimeAsDouble
#endif
                    }},
                    {"unscaledDeltaTime_static", new MemberRegisterInfo { Name = "unscaledDeltaTime", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_unscaledDeltaTime
#endif
                    }},
                    {"fixedUnscaledDeltaTime_static", new MemberRegisterInfo { Name = "fixedUnscaledDeltaTime", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_fixedUnscaledDeltaTime
#endif
                    }},
                    {"fixedDeltaTime_static", new MemberRegisterInfo { Name = "fixedDeltaTime", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_fixedDeltaTime, PropertySetter = UnityEngine_Time_Wrap.S_fixedDeltaTime
#endif
                    }},
                    {"maximumDeltaTime_static", new MemberRegisterInfo { Name = "maximumDeltaTime", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_maximumDeltaTime, PropertySetter = UnityEngine_Time_Wrap.S_maximumDeltaTime
#endif
                    }},
                    {"smoothDeltaTime_static", new MemberRegisterInfo { Name = "smoothDeltaTime", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_smoothDeltaTime
#endif
                    }},
                    {"maximumParticleDeltaTime_static", new MemberRegisterInfo { Name = "maximumParticleDeltaTime", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_maximumParticleDeltaTime, PropertySetter = UnityEngine_Time_Wrap.S_maximumParticleDeltaTime
#endif
                    }},
                    {"timeScale_static", new MemberRegisterInfo { Name = "timeScale", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_timeScale, PropertySetter = UnityEngine_Time_Wrap.S_timeScale
#endif
                    }},
                    {"frameCount_static", new MemberRegisterInfo { Name = "frameCount", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_frameCount
#endif
                    }},
                    {"renderedFrameCount_static", new MemberRegisterInfo { Name = "renderedFrameCount", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_renderedFrameCount
#endif
                    }},
                    {"realtimeSinceStartup_static", new MemberRegisterInfo { Name = "realtimeSinceStartup", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_realtimeSinceStartup
#endif
                    }},
                    {"realtimeSinceStartupAsDouble_static", new MemberRegisterInfo { Name = "realtimeSinceStartupAsDouble", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_realtimeSinceStartupAsDouble
#endif
                    }},
                    {"captureDeltaTime_static", new MemberRegisterInfo { Name = "captureDeltaTime", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_captureDeltaTime, PropertySetter = UnityEngine_Time_Wrap.S_captureDeltaTime
#endif
                    }},
                    {"captureFramerate_static", new MemberRegisterInfo { Name = "captureFramerate", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_captureFramerate, PropertySetter = UnityEngine_Time_Wrap.S_captureFramerate
#endif
                    }},
                    {"inFixedTimeStep_static", new MemberRegisterInfo { Name = "inFixedTimeStep", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Time_Wrap.G_inFixedTimeStep
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Transform_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"SetParent", new MemberRegisterInfo { Name = "SetParent", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Transform_Wrap.M_SetParent
#endif
                    }},
                    {"SetPositionAndRotation", new MemberRegisterInfo { Name = "SetPositionAndRotation", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Transform_Wrap.M_SetPositionAndRotation
#endif
                    }},
                    {"Translate", new MemberRegisterInfo { Name = "Translate", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Transform_Wrap.M_Translate
#endif
                    }},
                    {"Rotate", new MemberRegisterInfo { Name = "Rotate", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Transform_Wrap.M_Rotate
#endif
                    }},
                    {"RotateAround", new MemberRegisterInfo { Name = "RotateAround", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Transform_Wrap.M_RotateAround
#endif
                    }},
                    {"LookAt", new MemberRegisterInfo { Name = "LookAt", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Transform_Wrap.M_LookAt
#endif
                    }},
                    {"TransformDirection", new MemberRegisterInfo { Name = "TransformDirection", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Transform_Wrap.M_TransformDirection
#endif
                    }},
                    {"InverseTransformDirection", new MemberRegisterInfo { Name = "InverseTransformDirection", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Transform_Wrap.M_InverseTransformDirection
#endif
                    }},
                    {"TransformVector", new MemberRegisterInfo { Name = "TransformVector", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Transform_Wrap.M_TransformVector
#endif
                    }},
                    {"InverseTransformVector", new MemberRegisterInfo { Name = "InverseTransformVector", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Transform_Wrap.M_InverseTransformVector
#endif
                    }},
                    {"TransformPoint", new MemberRegisterInfo { Name = "TransformPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Transform_Wrap.M_TransformPoint
#endif
                    }},
                    {"InverseTransformPoint", new MemberRegisterInfo { Name = "InverseTransformPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Transform_Wrap.M_InverseTransformPoint
#endif
                    }},
                    {"DetachChildren", new MemberRegisterInfo { Name = "DetachChildren", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Transform_Wrap.M_DetachChildren
#endif
                    }},
                    {"SetAsFirstSibling", new MemberRegisterInfo { Name = "SetAsFirstSibling", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Transform_Wrap.M_SetAsFirstSibling
#endif
                    }},
                    {"SetAsLastSibling", new MemberRegisterInfo { Name = "SetAsLastSibling", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Transform_Wrap.M_SetAsLastSibling
#endif
                    }},
                    {"SetSiblingIndex", new MemberRegisterInfo { Name = "SetSiblingIndex", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Transform_Wrap.M_SetSiblingIndex
#endif
                    }},
                    {"GetSiblingIndex", new MemberRegisterInfo { Name = "GetSiblingIndex", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Transform_Wrap.M_GetSiblingIndex
#endif
                    }},
                    {"Find", new MemberRegisterInfo { Name = "Find", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Transform_Wrap.M_Find
#endif
                    }},
                    {"IsChildOf", new MemberRegisterInfo { Name = "IsChildOf", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Transform_Wrap.M_IsChildOf
#endif
                    }},
                    {"GetEnumerator", new MemberRegisterInfo { Name = "GetEnumerator", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Transform_Wrap.M_GetEnumerator
#endif
                    }},
                    {"GetChild", new MemberRegisterInfo { Name = "GetChild", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Transform_Wrap.M_GetChild
#endif
                    }},
                    {"position", new MemberRegisterInfo { Name = "position", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Transform_Wrap.G_position, PropertySetter = UnityEngine_Transform_Wrap.S_position
#endif
                    }},
                    {"localPosition", new MemberRegisterInfo { Name = "localPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Transform_Wrap.G_localPosition, PropertySetter = UnityEngine_Transform_Wrap.S_localPosition
#endif
                    }},
                    {"eulerAngles", new MemberRegisterInfo { Name = "eulerAngles", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Transform_Wrap.G_eulerAngles, PropertySetter = UnityEngine_Transform_Wrap.S_eulerAngles
#endif
                    }},
                    {"localEulerAngles", new MemberRegisterInfo { Name = "localEulerAngles", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Transform_Wrap.G_localEulerAngles, PropertySetter = UnityEngine_Transform_Wrap.S_localEulerAngles
#endif
                    }},
                    {"right", new MemberRegisterInfo { Name = "right", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Transform_Wrap.G_right, PropertySetter = UnityEngine_Transform_Wrap.S_right
#endif
                    }},
                    {"up", new MemberRegisterInfo { Name = "up", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Transform_Wrap.G_up, PropertySetter = UnityEngine_Transform_Wrap.S_up
#endif
                    }},
                    {"forward", new MemberRegisterInfo { Name = "forward", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Transform_Wrap.G_forward, PropertySetter = UnityEngine_Transform_Wrap.S_forward
#endif
                    }},
                    {"rotation", new MemberRegisterInfo { Name = "rotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Transform_Wrap.G_rotation, PropertySetter = UnityEngine_Transform_Wrap.S_rotation
#endif
                    }},
                    {"localRotation", new MemberRegisterInfo { Name = "localRotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Transform_Wrap.G_localRotation, PropertySetter = UnityEngine_Transform_Wrap.S_localRotation
#endif
                    }},
                    {"localScale", new MemberRegisterInfo { Name = "localScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Transform_Wrap.G_localScale, PropertySetter = UnityEngine_Transform_Wrap.S_localScale
#endif
                    }},
                    {"parent", new MemberRegisterInfo { Name = "parent", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Transform_Wrap.G_parent, PropertySetter = UnityEngine_Transform_Wrap.S_parent
#endif
                    }},
                    {"worldToLocalMatrix", new MemberRegisterInfo { Name = "worldToLocalMatrix", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Transform_Wrap.G_worldToLocalMatrix
#endif
                    }},
                    {"localToWorldMatrix", new MemberRegisterInfo { Name = "localToWorldMatrix", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Transform_Wrap.G_localToWorldMatrix
#endif
                    }},
                    {"root", new MemberRegisterInfo { Name = "root", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Transform_Wrap.G_root
#endif
                    }},
                    {"childCount", new MemberRegisterInfo { Name = "childCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Transform_Wrap.G_childCount
#endif
                    }},
                    {"lossyScale", new MemberRegisterInfo { Name = "lossyScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Transform_Wrap.G_lossyScale
#endif
                    }},
                    {"hasChanged", new MemberRegisterInfo { Name = "hasChanged", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Transform_Wrap.G_hasChanged, PropertySetter = UnityEngine_Transform_Wrap.S_hasChanged
#endif
                    }},
                    {"hierarchyCapacity", new MemberRegisterInfo { Name = "hierarchyCapacity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Transform_Wrap.G_hierarchyCapacity, PropertySetter = UnityEngine_Transform_Wrap.S_hierarchyCapacity
#endif
                    }},
                    {"hierarchyCount", new MemberRegisterInfo { Name = "hierarchyCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Transform_Wrap.G_hierarchyCount
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Component_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Component_Wrap.Constructor
#endif
                    }},
                    {"GetComponent", new MemberRegisterInfo { Name = "GetComponent", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Component_Wrap.M_GetComponent
#endif
                    }},
                    {"TryGetComponent", new MemberRegisterInfo { Name = "TryGetComponent", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Component_Wrap.M_TryGetComponent
#endif
                    }},
                    {"GetComponentInChildren", new MemberRegisterInfo { Name = "GetComponentInChildren", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Component_Wrap.M_GetComponentInChildren
#endif
                    }},
                    {"GetComponentsInChildren", new MemberRegisterInfo { Name = "GetComponentsInChildren", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Component_Wrap.M_GetComponentsInChildren
#endif
                    }},
                    {"GetComponentInParent", new MemberRegisterInfo { Name = "GetComponentInParent", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Component_Wrap.M_GetComponentInParent
#endif
                    }},
                    {"GetComponentsInParent", new MemberRegisterInfo { Name = "GetComponentsInParent", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Component_Wrap.M_GetComponentsInParent
#endif
                    }},
                    {"GetComponents", new MemberRegisterInfo { Name = "GetComponents", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Component_Wrap.M_GetComponents
#endif
                    }},
                    {"CompareTag", new MemberRegisterInfo { Name = "CompareTag", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Component_Wrap.M_CompareTag
#endif
                    }},
                    {"SendMessageUpwards", new MemberRegisterInfo { Name = "SendMessageUpwards", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Component_Wrap.M_SendMessageUpwards
#endif
                    }},
                    {"SendMessage", new MemberRegisterInfo { Name = "SendMessage", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Component_Wrap.M_SendMessage
#endif
                    }},
                    {"BroadcastMessage", new MemberRegisterInfo { Name = "BroadcastMessage", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Component_Wrap.M_BroadcastMessage
#endif
                    }},
                    {"transform", new MemberRegisterInfo { Name = "transform", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Component_Wrap.G_transform
#endif
                    }},
                    {"gameObject", new MemberRegisterInfo { Name = "gameObject", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Component_Wrap.G_gameObject
#endif
                    }},
                    {"tag", new MemberRegisterInfo { Name = "tag", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Component_Wrap.G_tag, PropertySetter = UnityEngine_Component_Wrap.S_tag
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_GameObject_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_GameObject_Wrap.Constructor
#endif
                    }},
                    {"GetComponent", new MemberRegisterInfo { Name = "GetComponent", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GameObject_Wrap.M_GetComponent
#endif
                    }},
                    {"GetComponentInChildren", new MemberRegisterInfo { Name = "GetComponentInChildren", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GameObject_Wrap.M_GetComponentInChildren
#endif
                    }},
                    {"GetComponentInParent", new MemberRegisterInfo { Name = "GetComponentInParent", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GameObject_Wrap.M_GetComponentInParent
#endif
                    }},
                    {"GetComponents", new MemberRegisterInfo { Name = "GetComponents", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GameObject_Wrap.M_GetComponents
#endif
                    }},
                    {"GetComponentsInChildren", new MemberRegisterInfo { Name = "GetComponentsInChildren", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GameObject_Wrap.M_GetComponentsInChildren
#endif
                    }},
                    {"GetComponentsInParent", new MemberRegisterInfo { Name = "GetComponentsInParent", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GameObject_Wrap.M_GetComponentsInParent
#endif
                    }},
                    {"TryGetComponent", new MemberRegisterInfo { Name = "TryGetComponent", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GameObject_Wrap.M_TryGetComponent
#endif
                    }},
                    {"SendMessageUpwards", new MemberRegisterInfo { Name = "SendMessageUpwards", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GameObject_Wrap.M_SendMessageUpwards
#endif
                    }},
                    {"SendMessage", new MemberRegisterInfo { Name = "SendMessage", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GameObject_Wrap.M_SendMessage
#endif
                    }},
                    {"BroadcastMessage", new MemberRegisterInfo { Name = "BroadcastMessage", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GameObject_Wrap.M_BroadcastMessage
#endif
                    }},
                    {"AddComponent", new MemberRegisterInfo { Name = "AddComponent", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GameObject_Wrap.M_AddComponent
#endif
                    }},
                    {"SetActive", new MemberRegisterInfo { Name = "SetActive", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GameObject_Wrap.M_SetActive
#endif
                    }},
                    {"CompareTag", new MemberRegisterInfo { Name = "CompareTag", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GameObject_Wrap.M_CompareTag
#endif
                    }},
                    {"transform", new MemberRegisterInfo { Name = "transform", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GameObject_Wrap.G_transform
#endif
                    }},
                    {"layer", new MemberRegisterInfo { Name = "layer", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GameObject_Wrap.G_layer, PropertySetter = UnityEngine_GameObject_Wrap.S_layer
#endif
                    }},
                    {"activeSelf", new MemberRegisterInfo { Name = "activeSelf", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GameObject_Wrap.G_activeSelf
#endif
                    }},
                    {"activeInHierarchy", new MemberRegisterInfo { Name = "activeInHierarchy", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GameObject_Wrap.G_activeInHierarchy
#endif
                    }},
                    {"isStatic", new MemberRegisterInfo { Name = "isStatic", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GameObject_Wrap.G_isStatic, PropertySetter = UnityEngine_GameObject_Wrap.S_isStatic
#endif
                    }},
                    {"tag", new MemberRegisterInfo { Name = "tag", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GameObject_Wrap.G_tag, PropertySetter = UnityEngine_GameObject_Wrap.S_tag
#endif
                    }},
                    {"scene", new MemberRegisterInfo { Name = "scene", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GameObject_Wrap.G_scene
#endif
                    }},
                    {"sceneCullingMask", new MemberRegisterInfo { Name = "sceneCullingMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GameObject_Wrap.G_sceneCullingMask
#endif
                    }},
                    {"gameObject", new MemberRegisterInfo { Name = "gameObject", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GameObject_Wrap.G_gameObject
#endif
                    }},
                    {"CreatePrimitive_static", new MemberRegisterInfo { Name = "CreatePrimitive", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GameObject_Wrap.F_CreatePrimitive
#endif
                    }},
                    {"FindWithTag_static", new MemberRegisterInfo { Name = "FindWithTag", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GameObject_Wrap.F_FindWithTag
#endif
                    }},
                    {"FindGameObjectWithTag_static", new MemberRegisterInfo { Name = "FindGameObjectWithTag", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GameObject_Wrap.F_FindGameObjectWithTag
#endif
                    }},
                    {"FindGameObjectsWithTag_static", new MemberRegisterInfo { Name = "FindGameObjectsWithTag", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GameObject_Wrap.F_FindGameObjectsWithTag
#endif
                    }},
                    {"Find_static", new MemberRegisterInfo { Name = "Find", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GameObject_Wrap.F_Find
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Object_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Object_Wrap.Constructor
#endif
                    }},
                    {"GetInstanceID", new MemberRegisterInfo { Name = "GetInstanceID", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Object_Wrap.M_GetInstanceID
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Object_Wrap.M_GetHashCode
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Object_Wrap.M_Equals
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Object_Wrap.M_ToString
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Object_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Object_Wrap.O_op_Inequality
#endif
                    }},
                    {"name", new MemberRegisterInfo { Name = "name", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Object_Wrap.G_name, PropertySetter = UnityEngine_Object_Wrap.S_name
#endif
                    }},
                    {"hideFlags", new MemberRegisterInfo { Name = "hideFlags", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Object_Wrap.G_hideFlags, PropertySetter = UnityEngine_Object_Wrap.S_hideFlags
#endif
                    }},
                    {"Instantiate_static", new MemberRegisterInfo { Name = "Instantiate", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Object_Wrap.F_Instantiate
#endif
                    }},
                    {"Destroy_static", new MemberRegisterInfo { Name = "Destroy", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Object_Wrap.F_Destroy
#endif
                    }},
                    {"DestroyImmediate_static", new MemberRegisterInfo { Name = "DestroyImmediate", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Object_Wrap.F_DestroyImmediate
#endif
                    }},
                    {"FindObjectsOfType_static", new MemberRegisterInfo { Name = "FindObjectsOfType", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Object_Wrap.F_FindObjectsOfType
#endif
                    }},
                    {"FindObjectsByType_static", new MemberRegisterInfo { Name = "FindObjectsByType", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Object_Wrap.F_FindObjectsByType
#endif
                    }},
                    {"DontDestroyOnLoad_static", new MemberRegisterInfo { Name = "DontDestroyOnLoad", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Object_Wrap.F_DontDestroyOnLoad
#endif
                    }},
                    {"FindObjectOfType_static", new MemberRegisterInfo { Name = "FindObjectOfType", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Object_Wrap.F_FindObjectOfType
#endif
                    }},
                    {"FindFirstObjectByType_static", new MemberRegisterInfo { Name = "FindFirstObjectByType", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Object_Wrap.F_FindFirstObjectByType
#endif
                    }},
                    {"FindAnyObjectByType_static", new MemberRegisterInfo { Name = "FindAnyObjectByType", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Object_Wrap.F_FindAnyObjectByType
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_System_Delegate_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"DynamicInvoke", new MemberRegisterInfo { Name = "DynamicInvoke", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Delegate_Wrap.M_DynamicInvoke
#endif
                    }},
                    {"Clone", new MemberRegisterInfo { Name = "Clone", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Delegate_Wrap.M_Clone
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Delegate_Wrap.M_Equals
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Delegate_Wrap.M_GetHashCode
#endif
                    }},
                    {"GetObjectData", new MemberRegisterInfo { Name = "GetObjectData", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Delegate_Wrap.M_GetObjectData
#endif
                    }},
                    {"GetInvocationList", new MemberRegisterInfo { Name = "GetInvocationList", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Delegate_Wrap.M_GetInvocationList
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Delegate_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Delegate_Wrap.O_op_Inequality
#endif
                    }},
                    {"Method", new MemberRegisterInfo { Name = "Method", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Delegate_Wrap.G_Method
#endif
                    }},
                    {"Target", new MemberRegisterInfo { Name = "Target", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Delegate_Wrap.G_Target
#endif
                    }},
                    {"CreateDelegate_static", new MemberRegisterInfo { Name = "CreateDelegate", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Delegate_Wrap.F_CreateDelegate
#endif
                    }},
                    {"Combine_static", new MemberRegisterInfo { Name = "Combine", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Delegate_Wrap.F_Combine
#endif
                    }},
                    {"Remove_static", new MemberRegisterInfo { Name = "Remove", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Delegate_Wrap.F_Remove
#endif
                    }},
                    {"RemoveAll_static", new MemberRegisterInfo { Name = "RemoveAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Delegate_Wrap.F_RemoveAll
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_System_Object_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = System_Object_Wrap.Constructor
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Object_Wrap.M_Equals
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Object_Wrap.M_GetHashCode
#endif
                    }},
                    {"GetType", new MemberRegisterInfo { Name = "GetType", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Object_Wrap.M_GetType
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Object_Wrap.M_ToString
#endif
                    }},
                    {"Equals_static", new MemberRegisterInfo { Name = "Equals", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Object_Wrap.F_Equals
#endif
                    }},
                    {"ReferenceEquals_static", new MemberRegisterInfo { Name = "ReferenceEquals", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Object_Wrap.F_ReferenceEquals
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_System_Array_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"CopyTo", new MemberRegisterInfo { Name = "CopyTo", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Array_Wrap.M_CopyTo
#endif
                    }},
                    {"Clone", new MemberRegisterInfo { Name = "Clone", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Array_Wrap.M_Clone
#endif
                    }},
                    {"GetLongLength", new MemberRegisterInfo { Name = "GetLongLength", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Array_Wrap.M_GetLongLength
#endif
                    }},
                    {"GetValue", new MemberRegisterInfo { Name = "GetValue", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Array_Wrap.M_GetValue
#endif
                    }},
                    {"SetValue", new MemberRegisterInfo { Name = "SetValue", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Array_Wrap.M_SetValue
#endif
                    }},
                    {"GetEnumerator", new MemberRegisterInfo { Name = "GetEnumerator", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Array_Wrap.M_GetEnumerator
#endif
                    }},
                    {"GetLength", new MemberRegisterInfo { Name = "GetLength", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Array_Wrap.M_GetLength
#endif
                    }},
                    {"GetLowerBound", new MemberRegisterInfo { Name = "GetLowerBound", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Array_Wrap.M_GetLowerBound
#endif
                    }},
                    {"GetUpperBound", new MemberRegisterInfo { Name = "GetUpperBound", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Array_Wrap.M_GetUpperBound
#endif
                    }},
                    {"Initialize", new MemberRegisterInfo { Name = "Initialize", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Array_Wrap.M_Initialize
#endif
                    }},
                    {"LongLength", new MemberRegisterInfo { Name = "LongLength", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Array_Wrap.G_LongLength
#endif
                    }},
                    {"IsFixedSize", new MemberRegisterInfo { Name = "IsFixedSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Array_Wrap.G_IsFixedSize
#endif
                    }},
                    {"IsReadOnly", new MemberRegisterInfo { Name = "IsReadOnly", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Array_Wrap.G_IsReadOnly
#endif
                    }},
                    {"IsSynchronized", new MemberRegisterInfo { Name = "IsSynchronized", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Array_Wrap.G_IsSynchronized
#endif
                    }},
                    {"SyncRoot", new MemberRegisterInfo { Name = "SyncRoot", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Array_Wrap.G_SyncRoot
#endif
                    }},
                    {"Length", new MemberRegisterInfo { Name = "Length", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Array_Wrap.G_Length
#endif
                    }},
                    {"Rank", new MemberRegisterInfo { Name = "Rank", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Array_Wrap.G_Rank
#endif
                    }},
                    {"CreateInstance_static", new MemberRegisterInfo { Name = "CreateInstance", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Array_Wrap.F_CreateInstance
#endif
                    }},
                    {"BinarySearch_static", new MemberRegisterInfo { Name = "BinarySearch", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Array_Wrap.F_BinarySearch
#endif
                    }},
                    {"Copy_static", new MemberRegisterInfo { Name = "Copy", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Array_Wrap.F_Copy
#endif
                    }},
                    {"IndexOf_static", new MemberRegisterInfo { Name = "IndexOf", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Array_Wrap.F_IndexOf
#endif
                    }},
                    {"LastIndexOf_static", new MemberRegisterInfo { Name = "LastIndexOf", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Array_Wrap.F_LastIndexOf
#endif
                    }},
                    {"Reverse_static", new MemberRegisterInfo { Name = "Reverse", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Array_Wrap.F_Reverse
#endif
                    }},
                    {"Sort_static", new MemberRegisterInfo { Name = "Sort", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Array_Wrap.F_Sort
#endif
                    }},
                    {"Clear_static", new MemberRegisterInfo { Name = "Clear", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Array_Wrap.F_Clear
#endif
                    }},
                    {"ConstrainedCopy_static", new MemberRegisterInfo { Name = "ConstrainedCopy", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Array_Wrap.F_ConstrainedCopy
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_System_Type_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"MakePointerType", new MemberRegisterInfo { Name = "MakePointerType", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_MakePointerType
#endif
                    }},
                    {"MakeByRefType", new MemberRegisterInfo { Name = "MakeByRefType", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_MakeByRefType
#endif
                    }},
                    {"MakeArrayType", new MemberRegisterInfo { Name = "MakeArrayType", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_MakeArrayType
#endif
                    }},
                    {"InvokeMember", new MemberRegisterInfo { Name = "InvokeMember", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_InvokeMember
#endif
                    }},
                    {"GetArrayRank", new MemberRegisterInfo { Name = "GetArrayRank", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetArrayRank
#endif
                    }},
                    {"GetConstructor", new MemberRegisterInfo { Name = "GetConstructor", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetConstructor
#endif
                    }},
                    {"GetConstructors", new MemberRegisterInfo { Name = "GetConstructors", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetConstructors
#endif
                    }},
                    {"GetMethod", new MemberRegisterInfo { Name = "GetMethod", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetMethod
#endif
                    }},
                    {"GetMethods", new MemberRegisterInfo { Name = "GetMethods", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetMethods
#endif
                    }},
                    {"GetField", new MemberRegisterInfo { Name = "GetField", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetField
#endif
                    }},
                    {"GetFields", new MemberRegisterInfo { Name = "GetFields", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetFields
#endif
                    }},
                    {"GetInterface", new MemberRegisterInfo { Name = "GetInterface", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetInterface
#endif
                    }},
                    {"GetInterfaces", new MemberRegisterInfo { Name = "GetInterfaces", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetInterfaces
#endif
                    }},
                    {"FindInterfaces", new MemberRegisterInfo { Name = "FindInterfaces", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_FindInterfaces
#endif
                    }},
                    {"GetEvent", new MemberRegisterInfo { Name = "GetEvent", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetEvent
#endif
                    }},
                    {"GetEvents", new MemberRegisterInfo { Name = "GetEvents", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetEvents
#endif
                    }},
                    {"GetProperty", new MemberRegisterInfo { Name = "GetProperty", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetProperty
#endif
                    }},
                    {"GetProperties", new MemberRegisterInfo { Name = "GetProperties", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetProperties
#endif
                    }},
                    {"GetNestedTypes", new MemberRegisterInfo { Name = "GetNestedTypes", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetNestedTypes
#endif
                    }},
                    {"GetNestedType", new MemberRegisterInfo { Name = "GetNestedType", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetNestedType
#endif
                    }},
                    {"GetMember", new MemberRegisterInfo { Name = "GetMember", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetMember
#endif
                    }},
                    {"GetMembers", new MemberRegisterInfo { Name = "GetMembers", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetMembers
#endif
                    }},
                    {"GetDefaultMembers", new MemberRegisterInfo { Name = "GetDefaultMembers", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetDefaultMembers
#endif
                    }},
                    {"FindMembers", new MemberRegisterInfo { Name = "FindMembers", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_FindMembers
#endif
                    }},
                    {"GetGenericParameterConstraints", new MemberRegisterInfo { Name = "GetGenericParameterConstraints", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetGenericParameterConstraints
#endif
                    }},
                    {"MakeGenericType", new MemberRegisterInfo { Name = "MakeGenericType", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_MakeGenericType
#endif
                    }},
                    {"GetElementType", new MemberRegisterInfo { Name = "GetElementType", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetElementType
#endif
                    }},
                    {"GetGenericArguments", new MemberRegisterInfo { Name = "GetGenericArguments", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetGenericArguments
#endif
                    }},
                    {"GetGenericTypeDefinition", new MemberRegisterInfo { Name = "GetGenericTypeDefinition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetGenericTypeDefinition
#endif
                    }},
                    {"GetEnumNames", new MemberRegisterInfo { Name = "GetEnumNames", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetEnumNames
#endif
                    }},
                    {"GetEnumValues", new MemberRegisterInfo { Name = "GetEnumValues", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetEnumValues
#endif
                    }},
                    {"GetEnumUnderlyingType", new MemberRegisterInfo { Name = "GetEnumUnderlyingType", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetEnumUnderlyingType
#endif
                    }},
                    {"IsEnumDefined", new MemberRegisterInfo { Name = "IsEnumDefined", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_IsEnumDefined
#endif
                    }},
                    {"GetEnumName", new MemberRegisterInfo { Name = "GetEnumName", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetEnumName
#endif
                    }},
                    {"IsSubclassOf", new MemberRegisterInfo { Name = "IsSubclassOf", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_IsSubclassOf
#endif
                    }},
                    {"IsInstanceOfType", new MemberRegisterInfo { Name = "IsInstanceOfType", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_IsInstanceOfType
#endif
                    }},
                    {"IsAssignableFrom", new MemberRegisterInfo { Name = "IsAssignableFrom", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_IsAssignableFrom
#endif
                    }},
                    {"IsEquivalentTo", new MemberRegisterInfo { Name = "IsEquivalentTo", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_IsEquivalentTo
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_ToString
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_Equals
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.O_op_Inequality
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetHashCode
#endif
                    }},
                    {"GetInterfaceMap", new MemberRegisterInfo { Name = "GetInterfaceMap", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetInterfaceMap
#endif
                    }},
                    {"GetType", new MemberRegisterInfo { Name = "GetType", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.M_GetType
#endif
                    }},
                    {"MemberType", new MemberRegisterInfo { Name = "MemberType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_MemberType
#endif
                    }},
                    {"DeclaringType", new MemberRegisterInfo { Name = "DeclaringType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_DeclaringType
#endif
                    }},
                    {"DeclaringMethod", new MemberRegisterInfo { Name = "DeclaringMethod", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_DeclaringMethod
#endif
                    }},
                    {"ReflectedType", new MemberRegisterInfo { Name = "ReflectedType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_ReflectedType
#endif
                    }},
                    {"StructLayoutAttribute", new MemberRegisterInfo { Name = "StructLayoutAttribute", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_StructLayoutAttribute
#endif
                    }},
                    {"GUID", new MemberRegisterInfo { Name = "GUID", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_GUID
#endif
                    }},
                    {"Module", new MemberRegisterInfo { Name = "Module", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_Module
#endif
                    }},
                    {"Assembly", new MemberRegisterInfo { Name = "Assembly", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_Assembly
#endif
                    }},
                    {"TypeHandle", new MemberRegisterInfo { Name = "TypeHandle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_TypeHandle
#endif
                    }},
                    {"FullName", new MemberRegisterInfo { Name = "FullName", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_FullName
#endif
                    }},
                    {"Namespace", new MemberRegisterInfo { Name = "Namespace", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_Namespace
#endif
                    }},
                    {"AssemblyQualifiedName", new MemberRegisterInfo { Name = "AssemblyQualifiedName", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_AssemblyQualifiedName
#endif
                    }},
                    {"BaseType", new MemberRegisterInfo { Name = "BaseType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_BaseType
#endif
                    }},
                    {"TypeInitializer", new MemberRegisterInfo { Name = "TypeInitializer", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_TypeInitializer
#endif
                    }},
                    {"IsNested", new MemberRegisterInfo { Name = "IsNested", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsNested
#endif
                    }},
                    {"Attributes", new MemberRegisterInfo { Name = "Attributes", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_Attributes
#endif
                    }},
                    {"GenericParameterAttributes", new MemberRegisterInfo { Name = "GenericParameterAttributes", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_GenericParameterAttributes
#endif
                    }},
                    {"IsVisible", new MemberRegisterInfo { Name = "IsVisible", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsVisible
#endif
                    }},
                    {"IsNotPublic", new MemberRegisterInfo { Name = "IsNotPublic", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsNotPublic
#endif
                    }},
                    {"IsPublic", new MemberRegisterInfo { Name = "IsPublic", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsPublic
#endif
                    }},
                    {"IsNestedPublic", new MemberRegisterInfo { Name = "IsNestedPublic", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsNestedPublic
#endif
                    }},
                    {"IsNestedPrivate", new MemberRegisterInfo { Name = "IsNestedPrivate", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsNestedPrivate
#endif
                    }},
                    {"IsNestedFamily", new MemberRegisterInfo { Name = "IsNestedFamily", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsNestedFamily
#endif
                    }},
                    {"IsNestedAssembly", new MemberRegisterInfo { Name = "IsNestedAssembly", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsNestedAssembly
#endif
                    }},
                    {"IsNestedFamANDAssem", new MemberRegisterInfo { Name = "IsNestedFamANDAssem", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsNestedFamANDAssem
#endif
                    }},
                    {"IsNestedFamORAssem", new MemberRegisterInfo { Name = "IsNestedFamORAssem", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsNestedFamORAssem
#endif
                    }},
                    {"IsAutoLayout", new MemberRegisterInfo { Name = "IsAutoLayout", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsAutoLayout
#endif
                    }},
                    {"IsLayoutSequential", new MemberRegisterInfo { Name = "IsLayoutSequential", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsLayoutSequential
#endif
                    }},
                    {"IsExplicitLayout", new MemberRegisterInfo { Name = "IsExplicitLayout", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsExplicitLayout
#endif
                    }},
                    {"IsClass", new MemberRegisterInfo { Name = "IsClass", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsClass
#endif
                    }},
                    {"IsInterface", new MemberRegisterInfo { Name = "IsInterface", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsInterface
#endif
                    }},
                    {"IsValueType", new MemberRegisterInfo { Name = "IsValueType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsValueType
#endif
                    }},
                    {"IsAbstract", new MemberRegisterInfo { Name = "IsAbstract", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsAbstract
#endif
                    }},
                    {"IsSealed", new MemberRegisterInfo { Name = "IsSealed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsSealed
#endif
                    }},
                    {"IsEnum", new MemberRegisterInfo { Name = "IsEnum", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsEnum
#endif
                    }},
                    {"IsSpecialName", new MemberRegisterInfo { Name = "IsSpecialName", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsSpecialName
#endif
                    }},
                    {"IsImport", new MemberRegisterInfo { Name = "IsImport", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsImport
#endif
                    }},
                    {"IsSerializable", new MemberRegisterInfo { Name = "IsSerializable", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsSerializable
#endif
                    }},
                    {"IsAnsiClass", new MemberRegisterInfo { Name = "IsAnsiClass", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsAnsiClass
#endif
                    }},
                    {"IsUnicodeClass", new MemberRegisterInfo { Name = "IsUnicodeClass", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsUnicodeClass
#endif
                    }},
                    {"IsAutoClass", new MemberRegisterInfo { Name = "IsAutoClass", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsAutoClass
#endif
                    }},
                    {"IsArray", new MemberRegisterInfo { Name = "IsArray", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsArray
#endif
                    }},
                    {"IsGenericType", new MemberRegisterInfo { Name = "IsGenericType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsGenericType
#endif
                    }},
                    {"IsGenericTypeDefinition", new MemberRegisterInfo { Name = "IsGenericTypeDefinition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsGenericTypeDefinition
#endif
                    }},
                    {"IsConstructedGenericType", new MemberRegisterInfo { Name = "IsConstructedGenericType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsConstructedGenericType
#endif
                    }},
                    {"IsGenericParameter", new MemberRegisterInfo { Name = "IsGenericParameter", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsGenericParameter
#endif
                    }},
                    {"GenericParameterPosition", new MemberRegisterInfo { Name = "GenericParameterPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_GenericParameterPosition
#endif
                    }},
                    {"ContainsGenericParameters", new MemberRegisterInfo { Name = "ContainsGenericParameters", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_ContainsGenericParameters
#endif
                    }},
                    {"IsByRef", new MemberRegisterInfo { Name = "IsByRef", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsByRef
#endif
                    }},
                    {"IsPointer", new MemberRegisterInfo { Name = "IsPointer", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsPointer
#endif
                    }},
                    {"IsPrimitive", new MemberRegisterInfo { Name = "IsPrimitive", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsPrimitive
#endif
                    }},
                    {"IsCOMObject", new MemberRegisterInfo { Name = "IsCOMObject", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsCOMObject
#endif
                    }},
                    {"HasElementType", new MemberRegisterInfo { Name = "HasElementType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_HasElementType
#endif
                    }},
                    {"IsContextful", new MemberRegisterInfo { Name = "IsContextful", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsContextful
#endif
                    }},
                    {"IsMarshalByRef", new MemberRegisterInfo { Name = "IsMarshalByRef", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsMarshalByRef
#endif
                    }},
                    {"GenericTypeArguments", new MemberRegisterInfo { Name = "GenericTypeArguments", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_GenericTypeArguments
#endif
                    }},
                    {"IsSecurityCritical", new MemberRegisterInfo { Name = "IsSecurityCritical", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsSecurityCritical
#endif
                    }},
                    {"IsSecuritySafeCritical", new MemberRegisterInfo { Name = "IsSecuritySafeCritical", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsSecuritySafeCritical
#endif
                    }},
                    {"IsSecurityTransparent", new MemberRegisterInfo { Name = "IsSecurityTransparent", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_IsSecurityTransparent
#endif
                    }},
                    {"UnderlyingSystemType", new MemberRegisterInfo { Name = "UnderlyingSystemType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_UnderlyingSystemType
#endif
                    }},
                    {"IsSZArray", new MemberRegisterInfo { Name = "IsSZArray", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"GetType_static", new MemberRegisterInfo { Name = "GetType", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.F_GetType
#endif
                    }},
                    {"GetTypeFromProgID_static", new MemberRegisterInfo { Name = "GetTypeFromProgID", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.F_GetTypeFromProgID
#endif
                    }},
                    {"GetTypeFromCLSID_static", new MemberRegisterInfo { Name = "GetTypeFromCLSID", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.F_GetTypeFromCLSID
#endif
                    }},
                    {"GetTypeCode_static", new MemberRegisterInfo { Name = "GetTypeCode", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.F_GetTypeCode
#endif
                    }},
                    {"GetTypeHandle_static", new MemberRegisterInfo { Name = "GetTypeHandle", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.F_GetTypeHandle
#endif
                    }},
                    {"GetTypeArray_static", new MemberRegisterInfo { Name = "GetTypeArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.F_GetTypeArray
#endif
                    }},
                    {"ReflectionOnlyGetType_static", new MemberRegisterInfo { Name = "ReflectionOnlyGetType", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.F_ReflectionOnlyGetType
#endif
                    }},
                    {"GetTypeFromHandle_static", new MemberRegisterInfo { Name = "GetTypeFromHandle", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Type_Wrap.F_GetTypeFromHandle
#endif
                    }},
                    {"DefaultBinder_static", new MemberRegisterInfo { Name = "DefaultBinder", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_DefaultBinder
#endif
                    }},
                    {"FilterAttribute_static", new MemberRegisterInfo { Name = "FilterAttribute", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_FilterAttribute
#endif
                    }},
                    {"FilterName_static", new MemberRegisterInfo { Name = "FilterName", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_FilterName
#endif
                    }},
                    {"FilterNameIgnoreCase_static", new MemberRegisterInfo { Name = "FilterNameIgnoreCase", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_FilterNameIgnoreCase
#endif
                    }},
                    {"Missing_static", new MemberRegisterInfo { Name = "Missing", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_Missing
#endif
                    }},
                    {"Delimiter_static", new MemberRegisterInfo { Name = "Delimiter", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_Delimiter
#endif
                    }},
                    {"EmptyTypes_static", new MemberRegisterInfo { Name = "EmptyTypes", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Type_Wrap.G_EmptyTypes
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_Wrap.Constructor
#endif
                    }},
                    {"SetParticles", new MemberRegisterInfo { Name = "SetParticles", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_SetParticles
#endif
                    }},
                    {"GetParticles", new MemberRegisterInfo { Name = "GetParticles", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_GetParticles
#endif
                    }},
                    {"SetCustomParticleData", new MemberRegisterInfo { Name = "SetCustomParticleData", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_SetCustomParticleData
#endif
                    }},
                    {"GetCustomParticleData", new MemberRegisterInfo { Name = "GetCustomParticleData", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_GetCustomParticleData
#endif
                    }},
                    {"GetPlaybackState", new MemberRegisterInfo { Name = "GetPlaybackState", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_GetPlaybackState
#endif
                    }},
                    {"SetPlaybackState", new MemberRegisterInfo { Name = "SetPlaybackState", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_SetPlaybackState
#endif
                    }},
                    {"GetTrails", new MemberRegisterInfo { Name = "GetTrails", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_GetTrails
#endif
                    }},
                    {"SetTrails", new MemberRegisterInfo { Name = "SetTrails", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_SetTrails
#endif
                    }},
                    {"Simulate", new MemberRegisterInfo { Name = "Simulate", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_Simulate
#endif
                    }},
                    {"Play", new MemberRegisterInfo { Name = "Play", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_Play
#endif
                    }},
                    {"Pause", new MemberRegisterInfo { Name = "Pause", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_Pause
#endif
                    }},
                    {"Stop", new MemberRegisterInfo { Name = "Stop", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_Stop
#endif
                    }},
                    {"Clear", new MemberRegisterInfo { Name = "Clear", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_Clear
#endif
                    }},
                    {"IsAlive", new MemberRegisterInfo { Name = "IsAlive", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_IsAlive
#endif
                    }},
                    {"Emit", new MemberRegisterInfo { Name = "Emit", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_Emit
#endif
                    }},
                    {"TriggerSubEmitter", new MemberRegisterInfo { Name = "TriggerSubEmitter", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_TriggerSubEmitter
#endif
                    }},
                    {"AllocateAxisOfRotationAttribute", new MemberRegisterInfo { Name = "AllocateAxisOfRotationAttribute", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_AllocateAxisOfRotationAttribute
#endif
                    }},
                    {"AllocateMeshIndexAttribute", new MemberRegisterInfo { Name = "AllocateMeshIndexAttribute", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_AllocateMeshIndexAttribute
#endif
                    }},
                    {"AllocateCustomDataAttribute", new MemberRegisterInfo { Name = "AllocateCustomDataAttribute", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_AllocateCustomDataAttribute
#endif
                    }},
                    {"GetSafeCollisionEventSize", new MemberRegisterInfo { Name = "GetSafeCollisionEventSize", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_GetSafeCollisionEventSize
#endif
                    }},
                    {"GetCollisionEvents", new MemberRegisterInfo { Name = "GetCollisionEvents", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_GetCollisionEvents
#endif
                    }},
                    {"GetSafeTriggerParticlesSize", new MemberRegisterInfo { Name = "GetSafeTriggerParticlesSize", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_GetSafeTriggerParticlesSize
#endif
                    }},
                    {"GetTriggerParticles", new MemberRegisterInfo { Name = "GetTriggerParticles", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_GetTriggerParticles
#endif
                    }},
                    {"SetTriggerParticles", new MemberRegisterInfo { Name = "SetTriggerParticles", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.M_SetTriggerParticles
#endif
                    }},
                    {"isPlaying", new MemberRegisterInfo { Name = "isPlaying", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_isPlaying
#endif
                    }},
                    {"isEmitting", new MemberRegisterInfo { Name = "isEmitting", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_isEmitting
#endif
                    }},
                    {"isStopped", new MemberRegisterInfo { Name = "isStopped", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_isStopped
#endif
                    }},
                    {"isPaused", new MemberRegisterInfo { Name = "isPaused", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_isPaused
#endif
                    }},
                    {"particleCount", new MemberRegisterInfo { Name = "particleCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_particleCount
#endif
                    }},
                    {"time", new MemberRegisterInfo { Name = "time", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_time, PropertySetter = UnityEngine_ParticleSystem_Wrap.S_time
#endif
                    }},
                    {"randomSeed", new MemberRegisterInfo { Name = "randomSeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_randomSeed, PropertySetter = UnityEngine_ParticleSystem_Wrap.S_randomSeed
#endif
                    }},
                    {"useAutoRandomSeed", new MemberRegisterInfo { Name = "useAutoRandomSeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_useAutoRandomSeed, PropertySetter = UnityEngine_ParticleSystem_Wrap.S_useAutoRandomSeed
#endif
                    }},
                    {"proceduralSimulationSupported", new MemberRegisterInfo { Name = "proceduralSimulationSupported", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_proceduralSimulationSupported
#endif
                    }},
                    {"main", new MemberRegisterInfo { Name = "main", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_main
#endif
                    }},
                    {"emission", new MemberRegisterInfo { Name = "emission", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_emission
#endif
                    }},
                    {"shape", new MemberRegisterInfo { Name = "shape", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_shape
#endif
                    }},
                    {"velocityOverLifetime", new MemberRegisterInfo { Name = "velocityOverLifetime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_velocityOverLifetime
#endif
                    }},
                    {"limitVelocityOverLifetime", new MemberRegisterInfo { Name = "limitVelocityOverLifetime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_limitVelocityOverLifetime
#endif
                    }},
                    {"inheritVelocity", new MemberRegisterInfo { Name = "inheritVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_inheritVelocity
#endif
                    }},
                    {"lifetimeByEmitterSpeed", new MemberRegisterInfo { Name = "lifetimeByEmitterSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_lifetimeByEmitterSpeed
#endif
                    }},
                    {"forceOverLifetime", new MemberRegisterInfo { Name = "forceOverLifetime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_forceOverLifetime
#endif
                    }},
                    {"colorOverLifetime", new MemberRegisterInfo { Name = "colorOverLifetime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_colorOverLifetime
#endif
                    }},
                    {"colorBySpeed", new MemberRegisterInfo { Name = "colorBySpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_colorBySpeed
#endif
                    }},
                    {"sizeOverLifetime", new MemberRegisterInfo { Name = "sizeOverLifetime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_sizeOverLifetime
#endif
                    }},
                    {"sizeBySpeed", new MemberRegisterInfo { Name = "sizeBySpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_sizeBySpeed
#endif
                    }},
                    {"rotationOverLifetime", new MemberRegisterInfo { Name = "rotationOverLifetime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_rotationOverLifetime
#endif
                    }},
                    {"rotationBySpeed", new MemberRegisterInfo { Name = "rotationBySpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_rotationBySpeed
#endif
                    }},
                    {"externalForces", new MemberRegisterInfo { Name = "externalForces", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_externalForces
#endif
                    }},
                    {"noise", new MemberRegisterInfo { Name = "noise", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_noise
#endif
                    }},
                    {"collision", new MemberRegisterInfo { Name = "collision", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_collision
#endif
                    }},
                    {"trigger", new MemberRegisterInfo { Name = "trigger", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_trigger
#endif
                    }},
                    {"subEmitters", new MemberRegisterInfo { Name = "subEmitters", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_subEmitters
#endif
                    }},
                    {"textureSheetAnimation", new MemberRegisterInfo { Name = "textureSheetAnimation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_textureSheetAnimation
#endif
                    }},
                    {"lights", new MemberRegisterInfo { Name = "lights", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_lights
#endif
                    }},
                    {"trails", new MemberRegisterInfo { Name = "trails", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_trails
#endif
                    }},
                    {"customData", new MemberRegisterInfo { Name = "customData", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Wrap.G_customData
#endif
                    }},
                    {"ResetPreMappedBufferMemory_static", new MemberRegisterInfo { Name = "ResetPreMappedBufferMemory", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.F_ResetPreMappedBufferMemory
#endif
                    }},
                    {"SetMaximumPreMappedBufferCounts_static", new MemberRegisterInfo { Name = "SetMaximumPreMappedBufferCounts", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Wrap.F_SetMaximumPreMappedBufferCounts
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Canvas_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Canvas_Wrap.Constructor
#endif
                    }},
                    {"add_preWillRenderCanvases_static", new MemberRegisterInfo { Name = "add_preWillRenderCanvases", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Canvas_Wrap.A_preWillRenderCanvases
#endif
                    }},
                    {"remove_preWillRenderCanvases_static", new MemberRegisterInfo { Name = "remove_preWillRenderCanvases", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Canvas_Wrap.R_preWillRenderCanvases
#endif
                    }},
                    {"add_willRenderCanvases_static", new MemberRegisterInfo { Name = "add_willRenderCanvases", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Canvas_Wrap.A_willRenderCanvases
#endif
                    }},
                    {"remove_willRenderCanvases_static", new MemberRegisterInfo { Name = "remove_willRenderCanvases", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Canvas_Wrap.R_willRenderCanvases
#endif
                    }},
                    {"renderMode", new MemberRegisterInfo { Name = "renderMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Canvas_Wrap.G_renderMode, PropertySetter = UnityEngine_Canvas_Wrap.S_renderMode
#endif
                    }},
                    {"isRootCanvas", new MemberRegisterInfo { Name = "isRootCanvas", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Canvas_Wrap.G_isRootCanvas
#endif
                    }},
                    {"pixelRect", new MemberRegisterInfo { Name = "pixelRect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Canvas_Wrap.G_pixelRect
#endif
                    }},
                    {"scaleFactor", new MemberRegisterInfo { Name = "scaleFactor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Canvas_Wrap.G_scaleFactor, PropertySetter = UnityEngine_Canvas_Wrap.S_scaleFactor
#endif
                    }},
                    {"referencePixelsPerUnit", new MemberRegisterInfo { Name = "referencePixelsPerUnit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Canvas_Wrap.G_referencePixelsPerUnit, PropertySetter = UnityEngine_Canvas_Wrap.S_referencePixelsPerUnit
#endif
                    }},
                    {"overridePixelPerfect", new MemberRegisterInfo { Name = "overridePixelPerfect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Canvas_Wrap.G_overridePixelPerfect, PropertySetter = UnityEngine_Canvas_Wrap.S_overridePixelPerfect
#endif
                    }},
                    {"pixelPerfect", new MemberRegisterInfo { Name = "pixelPerfect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Canvas_Wrap.G_pixelPerfect, PropertySetter = UnityEngine_Canvas_Wrap.S_pixelPerfect
#endif
                    }},
                    {"planeDistance", new MemberRegisterInfo { Name = "planeDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Canvas_Wrap.G_planeDistance, PropertySetter = UnityEngine_Canvas_Wrap.S_planeDistance
#endif
                    }},
                    {"renderOrder", new MemberRegisterInfo { Name = "renderOrder", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Canvas_Wrap.G_renderOrder
#endif
                    }},
                    {"overrideSorting", new MemberRegisterInfo { Name = "overrideSorting", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Canvas_Wrap.G_overrideSorting, PropertySetter = UnityEngine_Canvas_Wrap.S_overrideSorting
#endif
                    }},
                    {"sortingOrder", new MemberRegisterInfo { Name = "sortingOrder", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Canvas_Wrap.G_sortingOrder, PropertySetter = UnityEngine_Canvas_Wrap.S_sortingOrder
#endif
                    }},
                    {"targetDisplay", new MemberRegisterInfo { Name = "targetDisplay", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Canvas_Wrap.G_targetDisplay, PropertySetter = UnityEngine_Canvas_Wrap.S_targetDisplay
#endif
                    }},
                    {"sortingLayerID", new MemberRegisterInfo { Name = "sortingLayerID", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Canvas_Wrap.G_sortingLayerID, PropertySetter = UnityEngine_Canvas_Wrap.S_sortingLayerID
#endif
                    }},
                    {"cachedSortingLayerValue", new MemberRegisterInfo { Name = "cachedSortingLayerValue", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Canvas_Wrap.G_cachedSortingLayerValue
#endif
                    }},
                    {"additionalShaderChannels", new MemberRegisterInfo { Name = "additionalShaderChannels", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Canvas_Wrap.G_additionalShaderChannels, PropertySetter = UnityEngine_Canvas_Wrap.S_additionalShaderChannels
#endif
                    }},
                    {"sortingLayerName", new MemberRegisterInfo { Name = "sortingLayerName", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Canvas_Wrap.G_sortingLayerName, PropertySetter = UnityEngine_Canvas_Wrap.S_sortingLayerName
#endif
                    }},
                    {"rootCanvas", new MemberRegisterInfo { Name = "rootCanvas", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Canvas_Wrap.G_rootCanvas
#endif
                    }},
                    {"renderingDisplaySize", new MemberRegisterInfo { Name = "renderingDisplaySize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Canvas_Wrap.G_renderingDisplaySize
#endif
                    }},
                    {"worldCamera", new MemberRegisterInfo { Name = "worldCamera", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Canvas_Wrap.G_worldCamera, PropertySetter = UnityEngine_Canvas_Wrap.S_worldCamera
#endif
                    }},
                    {"normalizedSortingGridSize", new MemberRegisterInfo { Name = "normalizedSortingGridSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Canvas_Wrap.G_normalizedSortingGridSize, PropertySetter = UnityEngine_Canvas_Wrap.S_normalizedSortingGridSize
#endif
                    }},
                    {"GetDefaultCanvasMaterial_static", new MemberRegisterInfo { Name = "GetDefaultCanvasMaterial", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Canvas_Wrap.F_GetDefaultCanvasMaterial
#endif
                    }},
                    {"GetETC1SupportedCanvasMaterial_static", new MemberRegisterInfo { Name = "GetETC1SupportedCanvasMaterial", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Canvas_Wrap.F_GetETC1SupportedCanvasMaterial
#endif
                    }},
                    {"ForceUpdateCanvases_static", new MemberRegisterInfo { Name = "ForceUpdateCanvases", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Canvas_Wrap.F_ForceUpdateCanvases
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Behaviour_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Behaviour_Wrap.Constructor
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Behaviour_Wrap.G_enabled, PropertySetter = UnityEngine_Behaviour_Wrap.S_enabled
#endif
                    }},
                    {"isActiveAndEnabled", new MemberRegisterInfo { Name = "isActiveAndEnabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Behaviour_Wrap.G_isActiveAndEnabled
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_MonoBehaviour_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_MonoBehaviour_Wrap.Constructor
#endif
                    }},
                    {"IsInvoking", new MemberRegisterInfo { Name = "IsInvoking", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MonoBehaviour_Wrap.M_IsInvoking
#endif
                    }},
                    {"CancelInvoke", new MemberRegisterInfo { Name = "CancelInvoke", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MonoBehaviour_Wrap.M_CancelInvoke
#endif
                    }},
                    {"Invoke", new MemberRegisterInfo { Name = "Invoke", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MonoBehaviour_Wrap.M_Invoke
#endif
                    }},
                    {"InvokeRepeating", new MemberRegisterInfo { Name = "InvokeRepeating", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MonoBehaviour_Wrap.M_InvokeRepeating
#endif
                    }},
                    {"StartCoroutine", new MemberRegisterInfo { Name = "StartCoroutine", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MonoBehaviour_Wrap.M_StartCoroutine
#endif
                    }},
                    {"StopCoroutine", new MemberRegisterInfo { Name = "StopCoroutine", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MonoBehaviour_Wrap.M_StopCoroutine
#endif
                    }},
                    {"StopAllCoroutines", new MemberRegisterInfo { Name = "StopAllCoroutines", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MonoBehaviour_Wrap.M_StopAllCoroutines
#endif
                    }},
                    {"useGUILayout", new MemberRegisterInfo { Name = "useGUILayout", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_MonoBehaviour_Wrap.G_useGUILayout, PropertySetter = UnityEngine_MonoBehaviour_Wrap.S_useGUILayout
#endif
                    }},
                    {"runInEditMode", new MemberRegisterInfo { Name = "runInEditMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"print_static", new MemberRegisterInfo { Name = "print", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MonoBehaviour_Wrap.F_print
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_EventSystems_UIBehaviour_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"IsActive", new MemberRegisterInfo { Name = "IsActive", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_EventSystems_UIBehaviour_Wrap.M_IsActive
#endif
                    }},
                    {"IsDestroyed", new MemberRegisterInfo { Name = "IsDestroyed", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_EventSystems_UIBehaviour_Wrap.M_IsDestroyed
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_Selectable_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"IsInteractable", new MemberRegisterInfo { Name = "IsInteractable", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Selectable_Wrap.M_IsInteractable
#endif
                    }},
                    {"FindSelectable", new MemberRegisterInfo { Name = "FindSelectable", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Selectable_Wrap.M_FindSelectable
#endif
                    }},
                    {"FindSelectableOnLeft", new MemberRegisterInfo { Name = "FindSelectableOnLeft", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Selectable_Wrap.M_FindSelectableOnLeft
#endif
                    }},
                    {"FindSelectableOnRight", new MemberRegisterInfo { Name = "FindSelectableOnRight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Selectable_Wrap.M_FindSelectableOnRight
#endif
                    }},
                    {"FindSelectableOnUp", new MemberRegisterInfo { Name = "FindSelectableOnUp", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Selectable_Wrap.M_FindSelectableOnUp
#endif
                    }},
                    {"FindSelectableOnDown", new MemberRegisterInfo { Name = "FindSelectableOnDown", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Selectable_Wrap.M_FindSelectableOnDown
#endif
                    }},
                    {"OnMove", new MemberRegisterInfo { Name = "OnMove", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Selectable_Wrap.M_OnMove
#endif
                    }},
                    {"OnPointerDown", new MemberRegisterInfo { Name = "OnPointerDown", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Selectable_Wrap.M_OnPointerDown
#endif
                    }},
                    {"OnPointerUp", new MemberRegisterInfo { Name = "OnPointerUp", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Selectable_Wrap.M_OnPointerUp
#endif
                    }},
                    {"OnPointerEnter", new MemberRegisterInfo { Name = "OnPointerEnter", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Selectable_Wrap.M_OnPointerEnter
#endif
                    }},
                    {"OnPointerExit", new MemberRegisterInfo { Name = "OnPointerExit", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Selectable_Wrap.M_OnPointerExit
#endif
                    }},
                    {"OnSelect", new MemberRegisterInfo { Name = "OnSelect", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Selectable_Wrap.M_OnSelect
#endif
                    }},
                    {"OnDeselect", new MemberRegisterInfo { Name = "OnDeselect", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Selectable_Wrap.M_OnDeselect
#endif
                    }},
                    {"Select", new MemberRegisterInfo { Name = "Select", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Selectable_Wrap.M_Select
#endif
                    }},
                    {"navigation", new MemberRegisterInfo { Name = "navigation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Selectable_Wrap.G_navigation, PropertySetter = UnityEngine_UI_Selectable_Wrap.S_navigation
#endif
                    }},
                    {"transition", new MemberRegisterInfo { Name = "transition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Selectable_Wrap.G_transition, PropertySetter = UnityEngine_UI_Selectable_Wrap.S_transition
#endif
                    }},
                    {"colors", new MemberRegisterInfo { Name = "colors", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Selectable_Wrap.G_colors, PropertySetter = UnityEngine_UI_Selectable_Wrap.S_colors
#endif
                    }},
                    {"spriteState", new MemberRegisterInfo { Name = "spriteState", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Selectable_Wrap.G_spriteState, PropertySetter = UnityEngine_UI_Selectable_Wrap.S_spriteState
#endif
                    }},
                    {"animationTriggers", new MemberRegisterInfo { Name = "animationTriggers", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Selectable_Wrap.G_animationTriggers, PropertySetter = UnityEngine_UI_Selectable_Wrap.S_animationTriggers
#endif
                    }},
                    {"targetGraphic", new MemberRegisterInfo { Name = "targetGraphic", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Selectable_Wrap.G_targetGraphic, PropertySetter = UnityEngine_UI_Selectable_Wrap.S_targetGraphic
#endif
                    }},
                    {"interactable", new MemberRegisterInfo { Name = "interactable", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Selectable_Wrap.G_interactable, PropertySetter = UnityEngine_UI_Selectable_Wrap.S_interactable
#endif
                    }},
                    {"image", new MemberRegisterInfo { Name = "image", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Selectable_Wrap.G_image, PropertySetter = UnityEngine_UI_Selectable_Wrap.S_image
#endif
                    }},
                    {"animator", new MemberRegisterInfo { Name = "animator", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Selectable_Wrap.G_animator
#endif
                    }},
                    {"AllSelectablesNoAlloc_static", new MemberRegisterInfo { Name = "AllSelectablesNoAlloc", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Selectable_Wrap.F_AllSelectablesNoAlloc
#endif
                    }},
                    {"allSelectablesArray_static", new MemberRegisterInfo { Name = "allSelectablesArray", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Selectable_Wrap.G_allSelectablesArray
#endif
                    }},
                    {"allSelectableCount_static", new MemberRegisterInfo { Name = "allSelectableCount", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Selectable_Wrap.G_allSelectableCount
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_Button_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"OnPointerClick", new MemberRegisterInfo { Name = "OnPointerClick", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Button_Wrap.M_OnPointerClick
#endif
                    }},
                    {"OnSubmit", new MemberRegisterInfo { Name = "OnSubmit", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Button_Wrap.M_OnSubmit
#endif
                    }},
                    {"onClick", new MemberRegisterInfo { Name = "onClick", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Button_Wrap.G_onClick, PropertySetter = UnityEngine_UI_Button_Wrap.S_onClick
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_Button_ButtonClickedEvent_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UI_Button_ButtonClickedEvent_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Events_UnityEvent_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Events_UnityEvent_Wrap.Constructor
#endif
                    }},
                    {"AddListener", new MemberRegisterInfo { Name = "AddListener", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Events_UnityEvent_Wrap.M_AddListener
#endif
                    }},
                    {"RemoveListener", new MemberRegisterInfo { Name = "RemoveListener", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Events_UnityEvent_Wrap.M_RemoveListener
#endif
                    }},
                    {"Invoke", new MemberRegisterInfo { Name = "Invoke", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Events_UnityEvent_Wrap.M_Invoke
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_InputField_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"SetTextWithoutNotify", new MemberRegisterInfo { Name = "SetTextWithoutNotify", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_InputField_Wrap.M_SetTextWithoutNotify
#endif
                    }},
                    {"MoveTextEnd", new MemberRegisterInfo { Name = "MoveTextEnd", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_InputField_Wrap.M_MoveTextEnd
#endif
                    }},
                    {"MoveTextStart", new MemberRegisterInfo { Name = "MoveTextStart", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_InputField_Wrap.M_MoveTextStart
#endif
                    }},
                    {"OnBeginDrag", new MemberRegisterInfo { Name = "OnBeginDrag", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_InputField_Wrap.M_OnBeginDrag
#endif
                    }},
                    {"OnDrag", new MemberRegisterInfo { Name = "OnDrag", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_InputField_Wrap.M_OnDrag
#endif
                    }},
                    {"OnEndDrag", new MemberRegisterInfo { Name = "OnEndDrag", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_InputField_Wrap.M_OnEndDrag
#endif
                    }},
                    {"OnPointerDown", new MemberRegisterInfo { Name = "OnPointerDown", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_InputField_Wrap.M_OnPointerDown
#endif
                    }},
                    {"ProcessEvent", new MemberRegisterInfo { Name = "ProcessEvent", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_InputField_Wrap.M_ProcessEvent
#endif
                    }},
                    {"OnUpdateSelected", new MemberRegisterInfo { Name = "OnUpdateSelected", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_InputField_Wrap.M_OnUpdateSelected
#endif
                    }},
                    {"ForceLabelUpdate", new MemberRegisterInfo { Name = "ForceLabelUpdate", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_InputField_Wrap.M_ForceLabelUpdate
#endif
                    }},
                    {"Rebuild", new MemberRegisterInfo { Name = "Rebuild", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_InputField_Wrap.M_Rebuild
#endif
                    }},
                    {"LayoutComplete", new MemberRegisterInfo { Name = "LayoutComplete", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_InputField_Wrap.M_LayoutComplete
#endif
                    }},
                    {"GraphicUpdateComplete", new MemberRegisterInfo { Name = "GraphicUpdateComplete", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_InputField_Wrap.M_GraphicUpdateComplete
#endif
                    }},
                    {"ActivateInputField", new MemberRegisterInfo { Name = "ActivateInputField", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_InputField_Wrap.M_ActivateInputField
#endif
                    }},
                    {"OnSelect", new MemberRegisterInfo { Name = "OnSelect", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_InputField_Wrap.M_OnSelect
#endif
                    }},
                    {"OnPointerClick", new MemberRegisterInfo { Name = "OnPointerClick", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_InputField_Wrap.M_OnPointerClick
#endif
                    }},
                    {"DeactivateInputField", new MemberRegisterInfo { Name = "DeactivateInputField", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_InputField_Wrap.M_DeactivateInputField
#endif
                    }},
                    {"OnDeselect", new MemberRegisterInfo { Name = "OnDeselect", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_InputField_Wrap.M_OnDeselect
#endif
                    }},
                    {"OnSubmit", new MemberRegisterInfo { Name = "OnSubmit", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_InputField_Wrap.M_OnSubmit
#endif
                    }},
                    {"CalculateLayoutInputHorizontal", new MemberRegisterInfo { Name = "CalculateLayoutInputHorizontal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_InputField_Wrap.M_CalculateLayoutInputHorizontal
#endif
                    }},
                    {"CalculateLayoutInputVertical", new MemberRegisterInfo { Name = "CalculateLayoutInputVertical", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_InputField_Wrap.M_CalculateLayoutInputVertical
#endif
                    }},
                    {"shouldHideMobileInput", new MemberRegisterInfo { Name = "shouldHideMobileInput", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_shouldHideMobileInput, PropertySetter = UnityEngine_UI_InputField_Wrap.S_shouldHideMobileInput
#endif
                    }},
                    {"shouldActivateOnSelect", new MemberRegisterInfo { Name = "shouldActivateOnSelect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_shouldActivateOnSelect, PropertySetter = UnityEngine_UI_InputField_Wrap.S_shouldActivateOnSelect
#endif
                    }},
                    {"text", new MemberRegisterInfo { Name = "text", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_text, PropertySetter = UnityEngine_UI_InputField_Wrap.S_text
#endif
                    }},
                    {"isFocused", new MemberRegisterInfo { Name = "isFocused", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_isFocused
#endif
                    }},
                    {"caretBlinkRate", new MemberRegisterInfo { Name = "caretBlinkRate", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_caretBlinkRate, PropertySetter = UnityEngine_UI_InputField_Wrap.S_caretBlinkRate
#endif
                    }},
                    {"caretWidth", new MemberRegisterInfo { Name = "caretWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_caretWidth, PropertySetter = UnityEngine_UI_InputField_Wrap.S_caretWidth
#endif
                    }},
                    {"textComponent", new MemberRegisterInfo { Name = "textComponent", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_textComponent, PropertySetter = UnityEngine_UI_InputField_Wrap.S_textComponent
#endif
                    }},
                    {"placeholder", new MemberRegisterInfo { Name = "placeholder", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_placeholder, PropertySetter = UnityEngine_UI_InputField_Wrap.S_placeholder
#endif
                    }},
                    {"caretColor", new MemberRegisterInfo { Name = "caretColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_caretColor, PropertySetter = UnityEngine_UI_InputField_Wrap.S_caretColor
#endif
                    }},
                    {"customCaretColor", new MemberRegisterInfo { Name = "customCaretColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_customCaretColor, PropertySetter = UnityEngine_UI_InputField_Wrap.S_customCaretColor
#endif
                    }},
                    {"selectionColor", new MemberRegisterInfo { Name = "selectionColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_selectionColor, PropertySetter = UnityEngine_UI_InputField_Wrap.S_selectionColor
#endif
                    }},
                    {"onEndEdit", new MemberRegisterInfo { Name = "onEndEdit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_onEndEdit, PropertySetter = UnityEngine_UI_InputField_Wrap.S_onEndEdit
#endif
                    }},
                    {"onValueChanged", new MemberRegisterInfo { Name = "onValueChanged", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_onValueChanged, PropertySetter = UnityEngine_UI_InputField_Wrap.S_onValueChanged
#endif
                    }},
                    {"onValidateInput", new MemberRegisterInfo { Name = "onValidateInput", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_onValidateInput, PropertySetter = UnityEngine_UI_InputField_Wrap.S_onValidateInput
#endif
                    }},
                    {"characterLimit", new MemberRegisterInfo { Name = "characterLimit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_characterLimit, PropertySetter = UnityEngine_UI_InputField_Wrap.S_characterLimit
#endif
                    }},
                    {"contentType", new MemberRegisterInfo { Name = "contentType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_contentType, PropertySetter = UnityEngine_UI_InputField_Wrap.S_contentType
#endif
                    }},
                    {"lineType", new MemberRegisterInfo { Name = "lineType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_lineType, PropertySetter = UnityEngine_UI_InputField_Wrap.S_lineType
#endif
                    }},
                    {"inputType", new MemberRegisterInfo { Name = "inputType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_inputType, PropertySetter = UnityEngine_UI_InputField_Wrap.S_inputType
#endif
                    }},
                    {"touchScreenKeyboard", new MemberRegisterInfo { Name = "touchScreenKeyboard", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_touchScreenKeyboard
#endif
                    }},
                    {"keyboardType", new MemberRegisterInfo { Name = "keyboardType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_keyboardType, PropertySetter = UnityEngine_UI_InputField_Wrap.S_keyboardType
#endif
                    }},
                    {"characterValidation", new MemberRegisterInfo { Name = "characterValidation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_characterValidation, PropertySetter = UnityEngine_UI_InputField_Wrap.S_characterValidation
#endif
                    }},
                    {"readOnly", new MemberRegisterInfo { Name = "readOnly", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_readOnly, PropertySetter = UnityEngine_UI_InputField_Wrap.S_readOnly
#endif
                    }},
                    {"multiLine", new MemberRegisterInfo { Name = "multiLine", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_multiLine
#endif
                    }},
                    {"asteriskChar", new MemberRegisterInfo { Name = "asteriskChar", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_asteriskChar, PropertySetter = UnityEngine_UI_InputField_Wrap.S_asteriskChar
#endif
                    }},
                    {"wasCanceled", new MemberRegisterInfo { Name = "wasCanceled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_wasCanceled
#endif
                    }},
                    {"caretPosition", new MemberRegisterInfo { Name = "caretPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_caretPosition, PropertySetter = UnityEngine_UI_InputField_Wrap.S_caretPosition
#endif
                    }},
                    {"selectionAnchorPosition", new MemberRegisterInfo { Name = "selectionAnchorPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_selectionAnchorPosition, PropertySetter = UnityEngine_UI_InputField_Wrap.S_selectionAnchorPosition
#endif
                    }},
                    {"selectionFocusPosition", new MemberRegisterInfo { Name = "selectionFocusPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_selectionFocusPosition, PropertySetter = UnityEngine_UI_InputField_Wrap.S_selectionFocusPosition
#endif
                    }},
                    {"minWidth", new MemberRegisterInfo { Name = "minWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_minWidth
#endif
                    }},
                    {"preferredWidth", new MemberRegisterInfo { Name = "preferredWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_preferredWidth
#endif
                    }},
                    {"flexibleWidth", new MemberRegisterInfo { Name = "flexibleWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_flexibleWidth
#endif
                    }},
                    {"minHeight", new MemberRegisterInfo { Name = "minHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_minHeight
#endif
                    }},
                    {"preferredHeight", new MemberRegisterInfo { Name = "preferredHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_preferredHeight
#endif
                    }},
                    {"flexibleHeight", new MemberRegisterInfo { Name = "flexibleHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_flexibleHeight
#endif
                    }},
                    {"layoutPriority", new MemberRegisterInfo { Name = "layoutPriority", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_InputField_Wrap.G_layoutPriority
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_Toggle_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"Rebuild", new MemberRegisterInfo { Name = "Rebuild", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Toggle_Wrap.M_Rebuild
#endif
                    }},
                    {"LayoutComplete", new MemberRegisterInfo { Name = "LayoutComplete", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Toggle_Wrap.M_LayoutComplete
#endif
                    }},
                    {"GraphicUpdateComplete", new MemberRegisterInfo { Name = "GraphicUpdateComplete", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Toggle_Wrap.M_GraphicUpdateComplete
#endif
                    }},
                    {"SetIsOnWithoutNotify", new MemberRegisterInfo { Name = "SetIsOnWithoutNotify", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Toggle_Wrap.M_SetIsOnWithoutNotify
#endif
                    }},
                    {"OnPointerClick", new MemberRegisterInfo { Name = "OnPointerClick", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Toggle_Wrap.M_OnPointerClick
#endif
                    }},
                    {"OnSubmit", new MemberRegisterInfo { Name = "OnSubmit", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Toggle_Wrap.M_OnSubmit
#endif
                    }},
                    {"group", new MemberRegisterInfo { Name = "group", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Toggle_Wrap.G_group, PropertySetter = UnityEngine_UI_Toggle_Wrap.S_group
#endif
                    }},
                    {"isOn", new MemberRegisterInfo { Name = "isOn", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Toggle_Wrap.G_isOn, PropertySetter = UnityEngine_UI_Toggle_Wrap.S_isOn
#endif
                    }},
                    {"toggleTransition", new MemberRegisterInfo { Name = "toggleTransition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Toggle_Wrap.G_toggleTransition, PropertySetter = UnityEngine_UI_Toggle_Wrap.S_toggleTransition
#endif
                    }},
                    {"graphic", new MemberRegisterInfo { Name = "graphic", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Toggle_Wrap.G_graphic, PropertySetter = UnityEngine_UI_Toggle_Wrap.S_graphic
#endif
                    }},
                    {"onValueChanged", new MemberRegisterInfo { Name = "onValueChanged", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Toggle_Wrap.G_onValueChanged, PropertySetter = UnityEngine_UI_Toggle_Wrap.S_onValueChanged
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_Toggle_ToggleEvent_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UI_Toggle_ToggleEvent_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Events_UnityEvent_1_System_Boolean__Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Events_UnityEvent_1_System_Boolean__Wrap.Constructor
#endif
                    }},
                    {"AddListener", new MemberRegisterInfo { Name = "AddListener", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Events_UnityEvent_1_System_Boolean__Wrap.M_AddListener
#endif
                    }},
                    {"RemoveListener", new MemberRegisterInfo { Name = "RemoveListener", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Events_UnityEvent_1_System_Boolean__Wrap.M_RemoveListener
#endif
                    }},
                    {"Invoke", new MemberRegisterInfo { Name = "Invoke", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Events_UnityEvent_1_System_Boolean__Wrap.M_Invoke
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_TsSamples_Example1_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = TsSamples_Example1_Wrap.Constructor
#endif
                    }},
                    {"moduleName", new MemberRegisterInfo { Name = "moduleName", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = TsSamples_Example1_Wrap.G_moduleName, PropertySetter = TsSamples_Example1_Wrap.S_moduleName
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_TsSamples_Example2TestClass_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = TsSamples_Example2TestClass_Wrap.Constructor
#endif
                    }},
                    {"LogStr", new MemberRegisterInfo { Name = "LogStr", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = TsSamples_Example2TestClass_Wrap.M_LogStr
#endif
                    }},
                    {"str", new MemberRegisterInfo { Name = "str", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = TsSamples_Example2TestClass_Wrap.G_str, PropertySetter = TsSamples_Example2TestClass_Wrap.S_str
#endif
                    }},
                    {"TestAdd_static", new MemberRegisterInfo { Name = "TestAdd", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = TsSamples_Example2TestClass_Wrap.F_TestAdd
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_System_Threading_Tasks_ConcurrentExclusiveSchedulerPair_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = System_Threading_Tasks_ConcurrentExclusiveSchedulerPair_Wrap.Constructor
#endif
                    }},
                    {"Complete", new MemberRegisterInfo { Name = "Complete", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_ConcurrentExclusiveSchedulerPair_Wrap.M_Complete
#endif
                    }},
                    {"Completion", new MemberRegisterInfo { Name = "Completion", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_ConcurrentExclusiveSchedulerPair_Wrap.G_Completion
#endif
                    }},
                    {"ConcurrentScheduler", new MemberRegisterInfo { Name = "ConcurrentScheduler", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_ConcurrentExclusiveSchedulerPair_Wrap.G_ConcurrentScheduler
#endif
                    }},
                    {"ExclusiveScheduler", new MemberRegisterInfo { Name = "ExclusiveScheduler", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_ConcurrentExclusiveSchedulerPair_Wrap.G_ExclusiveScheduler
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_System_Threading_Tasks_ParallelOptions_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = System_Threading_Tasks_ParallelOptions_Wrap.Constructor
#endif
                    }},
                    {"TaskScheduler", new MemberRegisterInfo { Name = "TaskScheduler", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_ParallelOptions_Wrap.G_TaskScheduler, PropertySetter = System_Threading_Tasks_ParallelOptions_Wrap.S_TaskScheduler
#endif
                    }},
                    {"MaxDegreeOfParallelism", new MemberRegisterInfo { Name = "MaxDegreeOfParallelism", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_ParallelOptions_Wrap.G_MaxDegreeOfParallelism, PropertySetter = System_Threading_Tasks_ParallelOptions_Wrap.S_MaxDegreeOfParallelism
#endif
                    }},
                    {"CancellationToken", new MemberRegisterInfo { Name = "CancellationToken", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_ParallelOptions_Wrap.G_CancellationToken, PropertySetter = System_Threading_Tasks_ParallelOptions_Wrap.S_CancellationToken
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_System_Threading_Tasks_Parallel_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"Invoke_static", new MemberRegisterInfo { Name = "Invoke", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_Parallel_Wrap.F_Invoke
#endif
                    }},
                    {"For_static", new MemberRegisterInfo { Name = "For", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_Parallel_Wrap.F_For
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_System_Threading_Tasks_ParallelLoopState_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"Stop", new MemberRegisterInfo { Name = "Stop", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_ParallelLoopState_Wrap.M_Stop
#endif
                    }},
                    {"Break", new MemberRegisterInfo { Name = "Break", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_ParallelLoopState_Wrap.M_Break
#endif
                    }},
                    {"ShouldExitCurrentIteration", new MemberRegisterInfo { Name = "ShouldExitCurrentIteration", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_ParallelLoopState_Wrap.G_ShouldExitCurrentIteration
#endif
                    }},
                    {"IsStopped", new MemberRegisterInfo { Name = "IsStopped", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_ParallelLoopState_Wrap.G_IsStopped
#endif
                    }},
                    {"IsExceptional", new MemberRegisterInfo { Name = "IsExceptional", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_ParallelLoopState_Wrap.G_IsExceptional
#endif
                    }},
                    {"LowestBreakIteration", new MemberRegisterInfo { Name = "LowestBreakIteration", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_ParallelLoopState_Wrap.G_LowestBreakIteration
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_System_Threading_Tasks_ParallelLoopResult_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = System_Threading_Tasks_ParallelLoopResult_Wrap.Constructor
#endif
                    }},
                    {"IsCompleted", new MemberRegisterInfo { Name = "IsCompleted", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_ParallelLoopResult_Wrap.G_IsCompleted
#endif
                    }},
                    {"LowestBreakIteration", new MemberRegisterInfo { Name = "LowestBreakIteration", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_ParallelLoopResult_Wrap.G_LowestBreakIteration
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_System_Threading_Tasks_Task_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = System_Threading_Tasks_Task_Wrap.Constructor
#endif
                    }},
                    {"Start", new MemberRegisterInfo { Name = "Start", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_Task_Wrap.M_Start
#endif
                    }},
                    {"RunSynchronously", new MemberRegisterInfo { Name = "RunSynchronously", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_Task_Wrap.M_RunSynchronously
#endif
                    }},
                    {"Dispose", new MemberRegisterInfo { Name = "Dispose", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_Task_Wrap.M_Dispose
#endif
                    }},
                    {"GetAwaiter", new MemberRegisterInfo { Name = "GetAwaiter", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_Task_Wrap.M_GetAwaiter
#endif
                    }},
                    {"ConfigureAwait", new MemberRegisterInfo { Name = "ConfigureAwait", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_Task_Wrap.M_ConfigureAwait
#endif
                    }},
                    {"Wait", new MemberRegisterInfo { Name = "Wait", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_Task_Wrap.M_Wait
#endif
                    }},
                    {"ContinueWith", new MemberRegisterInfo { Name = "ContinueWith", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_Task_Wrap.M_ContinueWith
#endif
                    }},
                    {"Id", new MemberRegisterInfo { Name = "Id", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_Task_Wrap.G_Id
#endif
                    }},
                    {"Exception", new MemberRegisterInfo { Name = "Exception", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_Task_Wrap.G_Exception
#endif
                    }},
                    {"Status", new MemberRegisterInfo { Name = "Status", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_Task_Wrap.G_Status
#endif
                    }},
                    {"IsCanceled", new MemberRegisterInfo { Name = "IsCanceled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_Task_Wrap.G_IsCanceled
#endif
                    }},
                    {"IsCompleted", new MemberRegisterInfo { Name = "IsCompleted", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_Task_Wrap.G_IsCompleted
#endif
                    }},
                    {"IsCompletedSuccessfully", new MemberRegisterInfo { Name = "IsCompletedSuccessfully", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"CreationOptions", new MemberRegisterInfo { Name = "CreationOptions", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_Task_Wrap.G_CreationOptions
#endif
                    }},
                    {"AsyncState", new MemberRegisterInfo { Name = "AsyncState", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_Task_Wrap.G_AsyncState
#endif
                    }},
                    {"IsFaulted", new MemberRegisterInfo { Name = "IsFaulted", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_Task_Wrap.G_IsFaulted
#endif
                    }},
                    {"Yield_static", new MemberRegisterInfo { Name = "Yield", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_Task_Wrap.F_Yield
#endif
                    }},
                    {"WaitAll_static", new MemberRegisterInfo { Name = "WaitAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_Task_Wrap.F_WaitAll
#endif
                    }},
                    {"WaitAny_static", new MemberRegisterInfo { Name = "WaitAny", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_Task_Wrap.F_WaitAny
#endif
                    }},
                    {"FromException_static", new MemberRegisterInfo { Name = "FromException", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_Task_Wrap.F_FromException
#endif
                    }},
                    {"FromCanceled_static", new MemberRegisterInfo { Name = "FromCanceled", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_Task_Wrap.F_FromCanceled
#endif
                    }},
                    {"Run_static", new MemberRegisterInfo { Name = "Run", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_Task_Wrap.F_Run
#endif
                    }},
                    {"Delay_static", new MemberRegisterInfo { Name = "Delay", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_Task_Wrap.F_Delay
#endif
                    }},
                    {"WhenAll_static", new MemberRegisterInfo { Name = "WhenAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_Task_Wrap.F_WhenAll
#endif
                    }},
                    {"WhenAny_static", new MemberRegisterInfo { Name = "WhenAny", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_Task_Wrap.F_WhenAny
#endif
                    }},
                    {"CurrentId_static", new MemberRegisterInfo { Name = "CurrentId", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_Task_Wrap.G_CurrentId
#endif
                    }},
                    {"Factory_static", new MemberRegisterInfo { Name = "Factory", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_Task_Wrap.G_Factory
#endif
                    }},
                    {"CompletedTask_static", new MemberRegisterInfo { Name = "CompletedTask", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_Task_Wrap.G_CompletedTask
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_System_Threading_Tasks_TaskCanceledException_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = System_Threading_Tasks_TaskCanceledException_Wrap.Constructor
#endif
                    }},
                    {"Task", new MemberRegisterInfo { Name = "Task", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_TaskCanceledException_Wrap.G_Task
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_System_Threading_Tasks_TaskFactory_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = System_Threading_Tasks_TaskFactory_Wrap.Constructor
#endif
                    }},
                    {"StartNew", new MemberRegisterInfo { Name = "StartNew", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_TaskFactory_Wrap.M_StartNew
#endif
                    }},
                    {"FromAsync", new MemberRegisterInfo { Name = "FromAsync", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_TaskFactory_Wrap.M_FromAsync
#endif
                    }},
                    {"ContinueWhenAll", new MemberRegisterInfo { Name = "ContinueWhenAll", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_TaskFactory_Wrap.M_ContinueWhenAll
#endif
                    }},
                    {"ContinueWhenAny", new MemberRegisterInfo { Name = "ContinueWhenAny", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_TaskFactory_Wrap.M_ContinueWhenAny
#endif
                    }},
                    {"CancellationToken", new MemberRegisterInfo { Name = "CancellationToken", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_TaskFactory_Wrap.G_CancellationToken
#endif
                    }},
                    {"Scheduler", new MemberRegisterInfo { Name = "Scheduler", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_TaskFactory_Wrap.G_Scheduler
#endif
                    }},
                    {"CreationOptions", new MemberRegisterInfo { Name = "CreationOptions", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_TaskFactory_Wrap.G_CreationOptions
#endif
                    }},
                    {"ContinuationOptions", new MemberRegisterInfo { Name = "ContinuationOptions", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_TaskFactory_Wrap.G_ContinuationOptions
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_System_Threading_Tasks_TaskScheduler_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"add_UnobservedTaskException_static", new MemberRegisterInfo { Name = "add_UnobservedTaskException", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_TaskScheduler_Wrap.A_UnobservedTaskException
#endif
                    }},
                    {"remove_UnobservedTaskException_static", new MemberRegisterInfo { Name = "remove_UnobservedTaskException", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_TaskScheduler_Wrap.R_UnobservedTaskException
#endif
                    }},
                    {"MaximumConcurrencyLevel", new MemberRegisterInfo { Name = "MaximumConcurrencyLevel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_TaskScheduler_Wrap.G_MaximumConcurrencyLevel
#endif
                    }},
                    {"Id", new MemberRegisterInfo { Name = "Id", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_TaskScheduler_Wrap.G_Id
#endif
                    }},
                    {"FromCurrentSynchronizationContext_static", new MemberRegisterInfo { Name = "FromCurrentSynchronizationContext", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_TaskScheduler_Wrap.F_FromCurrentSynchronizationContext
#endif
                    }},
                    {"Default_static", new MemberRegisterInfo { Name = "Default", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_TaskScheduler_Wrap.G_Default
#endif
                    }},
                    {"Current_static", new MemberRegisterInfo { Name = "Current", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_TaskScheduler_Wrap.G_Current
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_System_Threading_Tasks_UnobservedTaskExceptionEventArgs_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = System_Threading_Tasks_UnobservedTaskExceptionEventArgs_Wrap.Constructor
#endif
                    }},
                    {"SetObserved", new MemberRegisterInfo { Name = "SetObserved", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_UnobservedTaskExceptionEventArgs_Wrap.M_SetObserved
#endif
                    }},
                    {"Observed", new MemberRegisterInfo { Name = "Observed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_UnobservedTaskExceptionEventArgs_Wrap.G_Observed
#endif
                    }},
                    {"Exception", new MemberRegisterInfo { Name = "Exception", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = System_Threading_Tasks_UnobservedTaskExceptionEventArgs_Wrap.G_Exception
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_System_Threading_Tasks_TaskSchedulerException_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = System_Threading_Tasks_TaskSchedulerException_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AndroidJavaException_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"StackTrace", new MemberRegisterInfo { Name = "StackTrace", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AndroidJavaException_Wrap.G_StackTrace
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AndroidJavaObject_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AndroidJavaObject_Wrap.Constructor
#endif
                    }},
                    {"Dispose", new MemberRegisterInfo { Name = "Dispose", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJavaObject_Wrap.M_Dispose
#endif
                    }},
                    {"Call", new MemberRegisterInfo { Name = "Call", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJavaObject_Wrap.M_Call
#endif
                    }},
                    {"CallStatic", new MemberRegisterInfo { Name = "CallStatic", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJavaObject_Wrap.M_CallStatic
#endif
                    }},
                    {"GetRawObject", new MemberRegisterInfo { Name = "GetRawObject", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJavaObject_Wrap.M_GetRawObject
#endif
                    }},
                    {"GetRawClass", new MemberRegisterInfo { Name = "GetRawClass", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJavaObject_Wrap.M_GetRawClass
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AndroidJavaClass_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AndroidJavaClass_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_jvalue_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_jvalue_Wrap.Constructor
#endif
                    }},
                    {"z", new MemberRegisterInfo { Name = "z", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_jvalue_Wrap.G_z, PropertySetter = UnityEngine_jvalue_Wrap.S_z
#endif
                    }},
                    {"b", new MemberRegisterInfo { Name = "b", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_jvalue_Wrap.G_b, PropertySetter = UnityEngine_jvalue_Wrap.S_b
#endif
                    }},
                    {"c", new MemberRegisterInfo { Name = "c", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_jvalue_Wrap.G_c, PropertySetter = UnityEngine_jvalue_Wrap.S_c
#endif
                    }},
                    {"s", new MemberRegisterInfo { Name = "s", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_jvalue_Wrap.G_s, PropertySetter = UnityEngine_jvalue_Wrap.S_s
#endif
                    }},
                    {"i", new MemberRegisterInfo { Name = "i", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_jvalue_Wrap.G_i, PropertySetter = UnityEngine_jvalue_Wrap.S_i
#endif
                    }},
                    {"j", new MemberRegisterInfo { Name = "j", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_jvalue_Wrap.G_j, PropertySetter = UnityEngine_jvalue_Wrap.S_j
#endif
                    }},
                    {"f", new MemberRegisterInfo { Name = "f", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_jvalue_Wrap.G_f, PropertySetter = UnityEngine_jvalue_Wrap.S_f
#endif
                    }},
                    {"d", new MemberRegisterInfo { Name = "d", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_jvalue_Wrap.G_d, PropertySetter = UnityEngine_jvalue_Wrap.S_d
#endif
                    }},
                    {"l", new MemberRegisterInfo { Name = "l", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_jvalue_Wrap.G_l, PropertySetter = UnityEngine_jvalue_Wrap.S_l
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AndroidJNIHelper_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"GetConstructorID_static", new MemberRegisterInfo { Name = "GetConstructorID", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNIHelper_Wrap.F_GetConstructorID
#endif
                    }},
                    {"GetMethodID_static", new MemberRegisterInfo { Name = "GetMethodID", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNIHelper_Wrap.F_GetMethodID
#endif
                    }},
                    {"GetFieldID_static", new MemberRegisterInfo { Name = "GetFieldID", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNIHelper_Wrap.F_GetFieldID
#endif
                    }},
                    {"CreateJavaRunnable_static", new MemberRegisterInfo { Name = "CreateJavaRunnable", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNIHelper_Wrap.F_CreateJavaRunnable
#endif
                    }},
                    {"CreateJavaProxy_static", new MemberRegisterInfo { Name = "CreateJavaProxy", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNIHelper_Wrap.F_CreateJavaProxy
#endif
                    }},
                    {"ConvertToJNIArray_static", new MemberRegisterInfo { Name = "ConvertToJNIArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNIHelper_Wrap.F_ConvertToJNIArray
#endif
                    }},
                    {"CreateJNIArgArray_static", new MemberRegisterInfo { Name = "CreateJNIArgArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNIHelper_Wrap.F_CreateJNIArgArray
#endif
                    }},
                    {"DeleteJNIArgArray_static", new MemberRegisterInfo { Name = "DeleteJNIArgArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNIHelper_Wrap.F_DeleteJNIArgArray
#endif
                    }},
                    {"GetSignature_static", new MemberRegisterInfo { Name = "GetSignature", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNIHelper_Wrap.F_GetSignature
#endif
                    }},
                    {"debug_static", new MemberRegisterInfo { Name = "debug", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AndroidJNIHelper_Wrap.G_debug, PropertySetter = UnityEngine_AndroidJNIHelper_Wrap.S_debug
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AndroidJNI_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"AttachCurrentThread_static", new MemberRegisterInfo { Name = "AttachCurrentThread", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_AttachCurrentThread
#endif
                    }},
                    {"DetachCurrentThread_static", new MemberRegisterInfo { Name = "DetachCurrentThread", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_DetachCurrentThread
#endif
                    }},
                    {"GetVersion_static", new MemberRegisterInfo { Name = "GetVersion", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetVersion
#endif
                    }},
                    {"FindClass_static", new MemberRegisterInfo { Name = "FindClass", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_FindClass
#endif
                    }},
                    {"FromReflectedMethod_static", new MemberRegisterInfo { Name = "FromReflectedMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_FromReflectedMethod
#endif
                    }},
                    {"FromReflectedField_static", new MemberRegisterInfo { Name = "FromReflectedField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_FromReflectedField
#endif
                    }},
                    {"ToReflectedMethod_static", new MemberRegisterInfo { Name = "ToReflectedMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_ToReflectedMethod
#endif
                    }},
                    {"ToReflectedField_static", new MemberRegisterInfo { Name = "ToReflectedField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_ToReflectedField
#endif
                    }},
                    {"GetSuperclass_static", new MemberRegisterInfo { Name = "GetSuperclass", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetSuperclass
#endif
                    }},
                    {"IsAssignableFrom_static", new MemberRegisterInfo { Name = "IsAssignableFrom", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_IsAssignableFrom
#endif
                    }},
                    {"Throw_static", new MemberRegisterInfo { Name = "Throw", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_Throw
#endif
                    }},
                    {"ThrowNew_static", new MemberRegisterInfo { Name = "ThrowNew", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_ThrowNew
#endif
                    }},
                    {"ExceptionOccurred_static", new MemberRegisterInfo { Name = "ExceptionOccurred", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_ExceptionOccurred
#endif
                    }},
                    {"ExceptionDescribe_static", new MemberRegisterInfo { Name = "ExceptionDescribe", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_ExceptionDescribe
#endif
                    }},
                    {"ExceptionClear_static", new MemberRegisterInfo { Name = "ExceptionClear", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_ExceptionClear
#endif
                    }},
                    {"FatalError_static", new MemberRegisterInfo { Name = "FatalError", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_FatalError
#endif
                    }},
                    {"PushLocalFrame_static", new MemberRegisterInfo { Name = "PushLocalFrame", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_PushLocalFrame
#endif
                    }},
                    {"PopLocalFrame_static", new MemberRegisterInfo { Name = "PopLocalFrame", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_PopLocalFrame
#endif
                    }},
                    {"NewGlobalRef_static", new MemberRegisterInfo { Name = "NewGlobalRef", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_NewGlobalRef
#endif
                    }},
                    {"DeleteGlobalRef_static", new MemberRegisterInfo { Name = "DeleteGlobalRef", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_DeleteGlobalRef
#endif
                    }},
                    {"NewWeakGlobalRef_static", new MemberRegisterInfo { Name = "NewWeakGlobalRef", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_NewWeakGlobalRef
#endif
                    }},
                    {"DeleteWeakGlobalRef_static", new MemberRegisterInfo { Name = "DeleteWeakGlobalRef", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_DeleteWeakGlobalRef
#endif
                    }},
                    {"NewLocalRef_static", new MemberRegisterInfo { Name = "NewLocalRef", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_NewLocalRef
#endif
                    }},
                    {"DeleteLocalRef_static", new MemberRegisterInfo { Name = "DeleteLocalRef", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_DeleteLocalRef
#endif
                    }},
                    {"IsSameObject_static", new MemberRegisterInfo { Name = "IsSameObject", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_IsSameObject
#endif
                    }},
                    {"EnsureLocalCapacity_static", new MemberRegisterInfo { Name = "EnsureLocalCapacity", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_EnsureLocalCapacity
#endif
                    }},
                    {"AllocObject_static", new MemberRegisterInfo { Name = "AllocObject", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_AllocObject
#endif
                    }},
                    {"NewObject_static", new MemberRegisterInfo { Name = "NewObject", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_NewObject
#endif
                    }},
                    {"GetObjectClass_static", new MemberRegisterInfo { Name = "GetObjectClass", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetObjectClass
#endif
                    }},
                    {"IsInstanceOf_static", new MemberRegisterInfo { Name = "IsInstanceOf", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_IsInstanceOf
#endif
                    }},
                    {"GetMethodID_static", new MemberRegisterInfo { Name = "GetMethodID", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetMethodID
#endif
                    }},
                    {"GetFieldID_static", new MemberRegisterInfo { Name = "GetFieldID", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetFieldID
#endif
                    }},
                    {"GetStaticMethodID_static", new MemberRegisterInfo { Name = "GetStaticMethodID", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetStaticMethodID
#endif
                    }},
                    {"GetStaticFieldID_static", new MemberRegisterInfo { Name = "GetStaticFieldID", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetStaticFieldID
#endif
                    }},
                    {"NewString_static", new MemberRegisterInfo { Name = "NewString", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_NewString
#endif
                    }},
                    {"NewStringUTF_static", new MemberRegisterInfo { Name = "NewStringUTF", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_NewStringUTF
#endif
                    }},
                    {"GetStringChars_static", new MemberRegisterInfo { Name = "GetStringChars", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetStringChars
#endif
                    }},
                    {"GetStringLength_static", new MemberRegisterInfo { Name = "GetStringLength", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetStringLength
#endif
                    }},
                    {"GetStringUTFLength_static", new MemberRegisterInfo { Name = "GetStringUTFLength", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetStringUTFLength
#endif
                    }},
                    {"GetStringUTFChars_static", new MemberRegisterInfo { Name = "GetStringUTFChars", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetStringUTFChars
#endif
                    }},
                    {"CallStringMethod_static", new MemberRegisterInfo { Name = "CallStringMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallStringMethod
#endif
                    }},
                    {"CallObjectMethod_static", new MemberRegisterInfo { Name = "CallObjectMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallObjectMethod
#endif
                    }},
                    {"CallIntMethod_static", new MemberRegisterInfo { Name = "CallIntMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallIntMethod
#endif
                    }},
                    {"CallBooleanMethod_static", new MemberRegisterInfo { Name = "CallBooleanMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallBooleanMethod
#endif
                    }},
                    {"CallShortMethod_static", new MemberRegisterInfo { Name = "CallShortMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallShortMethod
#endif
                    }},
                    {"CallSByteMethod_static", new MemberRegisterInfo { Name = "CallSByteMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallSByteMethod
#endif
                    }},
                    {"CallCharMethod_static", new MemberRegisterInfo { Name = "CallCharMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallCharMethod
#endif
                    }},
                    {"CallFloatMethod_static", new MemberRegisterInfo { Name = "CallFloatMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallFloatMethod
#endif
                    }},
                    {"CallDoubleMethod_static", new MemberRegisterInfo { Name = "CallDoubleMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallDoubleMethod
#endif
                    }},
                    {"CallLongMethod_static", new MemberRegisterInfo { Name = "CallLongMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallLongMethod
#endif
                    }},
                    {"CallVoidMethod_static", new MemberRegisterInfo { Name = "CallVoidMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallVoidMethod
#endif
                    }},
                    {"GetStringField_static", new MemberRegisterInfo { Name = "GetStringField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetStringField
#endif
                    }},
                    {"GetObjectField_static", new MemberRegisterInfo { Name = "GetObjectField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetObjectField
#endif
                    }},
                    {"GetBooleanField_static", new MemberRegisterInfo { Name = "GetBooleanField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetBooleanField
#endif
                    }},
                    {"GetSByteField_static", new MemberRegisterInfo { Name = "GetSByteField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetSByteField
#endif
                    }},
                    {"GetCharField_static", new MemberRegisterInfo { Name = "GetCharField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetCharField
#endif
                    }},
                    {"GetShortField_static", new MemberRegisterInfo { Name = "GetShortField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetShortField
#endif
                    }},
                    {"GetIntField_static", new MemberRegisterInfo { Name = "GetIntField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetIntField
#endif
                    }},
                    {"GetLongField_static", new MemberRegisterInfo { Name = "GetLongField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetLongField
#endif
                    }},
                    {"GetFloatField_static", new MemberRegisterInfo { Name = "GetFloatField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetFloatField
#endif
                    }},
                    {"GetDoubleField_static", new MemberRegisterInfo { Name = "GetDoubleField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetDoubleField
#endif
                    }},
                    {"SetStringField_static", new MemberRegisterInfo { Name = "SetStringField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetStringField
#endif
                    }},
                    {"SetObjectField_static", new MemberRegisterInfo { Name = "SetObjectField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetObjectField
#endif
                    }},
                    {"SetBooleanField_static", new MemberRegisterInfo { Name = "SetBooleanField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetBooleanField
#endif
                    }},
                    {"SetSByteField_static", new MemberRegisterInfo { Name = "SetSByteField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetSByteField
#endif
                    }},
                    {"SetCharField_static", new MemberRegisterInfo { Name = "SetCharField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetCharField
#endif
                    }},
                    {"SetShortField_static", new MemberRegisterInfo { Name = "SetShortField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetShortField
#endif
                    }},
                    {"SetIntField_static", new MemberRegisterInfo { Name = "SetIntField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetIntField
#endif
                    }},
                    {"SetLongField_static", new MemberRegisterInfo { Name = "SetLongField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetLongField
#endif
                    }},
                    {"SetFloatField_static", new MemberRegisterInfo { Name = "SetFloatField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetFloatField
#endif
                    }},
                    {"SetDoubleField_static", new MemberRegisterInfo { Name = "SetDoubleField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetDoubleField
#endif
                    }},
                    {"CallStaticStringMethod_static", new MemberRegisterInfo { Name = "CallStaticStringMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallStaticStringMethod
#endif
                    }},
                    {"CallStaticObjectMethod_static", new MemberRegisterInfo { Name = "CallStaticObjectMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallStaticObjectMethod
#endif
                    }},
                    {"CallStaticIntMethod_static", new MemberRegisterInfo { Name = "CallStaticIntMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallStaticIntMethod
#endif
                    }},
                    {"CallStaticBooleanMethod_static", new MemberRegisterInfo { Name = "CallStaticBooleanMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallStaticBooleanMethod
#endif
                    }},
                    {"CallStaticShortMethod_static", new MemberRegisterInfo { Name = "CallStaticShortMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallStaticShortMethod
#endif
                    }},
                    {"CallStaticSByteMethod_static", new MemberRegisterInfo { Name = "CallStaticSByteMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallStaticSByteMethod
#endif
                    }},
                    {"CallStaticCharMethod_static", new MemberRegisterInfo { Name = "CallStaticCharMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallStaticCharMethod
#endif
                    }},
                    {"CallStaticFloatMethod_static", new MemberRegisterInfo { Name = "CallStaticFloatMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallStaticFloatMethod
#endif
                    }},
                    {"CallStaticDoubleMethod_static", new MemberRegisterInfo { Name = "CallStaticDoubleMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallStaticDoubleMethod
#endif
                    }},
                    {"CallStaticLongMethod_static", new MemberRegisterInfo { Name = "CallStaticLongMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallStaticLongMethod
#endif
                    }},
                    {"CallStaticVoidMethod_static", new MemberRegisterInfo { Name = "CallStaticVoidMethod", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_CallStaticVoidMethod
#endif
                    }},
                    {"GetStaticStringField_static", new MemberRegisterInfo { Name = "GetStaticStringField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetStaticStringField
#endif
                    }},
                    {"GetStaticObjectField_static", new MemberRegisterInfo { Name = "GetStaticObjectField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetStaticObjectField
#endif
                    }},
                    {"GetStaticBooleanField_static", new MemberRegisterInfo { Name = "GetStaticBooleanField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetStaticBooleanField
#endif
                    }},
                    {"GetStaticSByteField_static", new MemberRegisterInfo { Name = "GetStaticSByteField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetStaticSByteField
#endif
                    }},
                    {"GetStaticCharField_static", new MemberRegisterInfo { Name = "GetStaticCharField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetStaticCharField
#endif
                    }},
                    {"GetStaticShortField_static", new MemberRegisterInfo { Name = "GetStaticShortField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetStaticShortField
#endif
                    }},
                    {"GetStaticIntField_static", new MemberRegisterInfo { Name = "GetStaticIntField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetStaticIntField
#endif
                    }},
                    {"GetStaticLongField_static", new MemberRegisterInfo { Name = "GetStaticLongField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetStaticLongField
#endif
                    }},
                    {"GetStaticFloatField_static", new MemberRegisterInfo { Name = "GetStaticFloatField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetStaticFloatField
#endif
                    }},
                    {"GetStaticDoubleField_static", new MemberRegisterInfo { Name = "GetStaticDoubleField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetStaticDoubleField
#endif
                    }},
                    {"SetStaticStringField_static", new MemberRegisterInfo { Name = "SetStaticStringField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetStaticStringField
#endif
                    }},
                    {"SetStaticObjectField_static", new MemberRegisterInfo { Name = "SetStaticObjectField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetStaticObjectField
#endif
                    }},
                    {"SetStaticBooleanField_static", new MemberRegisterInfo { Name = "SetStaticBooleanField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetStaticBooleanField
#endif
                    }},
                    {"SetStaticSByteField_static", new MemberRegisterInfo { Name = "SetStaticSByteField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetStaticSByteField
#endif
                    }},
                    {"SetStaticCharField_static", new MemberRegisterInfo { Name = "SetStaticCharField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetStaticCharField
#endif
                    }},
                    {"SetStaticShortField_static", new MemberRegisterInfo { Name = "SetStaticShortField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetStaticShortField
#endif
                    }},
                    {"SetStaticIntField_static", new MemberRegisterInfo { Name = "SetStaticIntField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetStaticIntField
#endif
                    }},
                    {"SetStaticLongField_static", new MemberRegisterInfo { Name = "SetStaticLongField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetStaticLongField
#endif
                    }},
                    {"SetStaticFloatField_static", new MemberRegisterInfo { Name = "SetStaticFloatField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetStaticFloatField
#endif
                    }},
                    {"SetStaticDoubleField_static", new MemberRegisterInfo { Name = "SetStaticDoubleField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetStaticDoubleField
#endif
                    }},
                    {"ToBooleanArray_static", new MemberRegisterInfo { Name = "ToBooleanArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_ToBooleanArray
#endif
                    }},
                    {"ToSByteArray_static", new MemberRegisterInfo { Name = "ToSByteArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_ToSByteArray
#endif
                    }},
                    {"ToCharArray_static", new MemberRegisterInfo { Name = "ToCharArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_ToCharArray
#endif
                    }},
                    {"ToShortArray_static", new MemberRegisterInfo { Name = "ToShortArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_ToShortArray
#endif
                    }},
                    {"ToIntArray_static", new MemberRegisterInfo { Name = "ToIntArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_ToIntArray
#endif
                    }},
                    {"ToLongArray_static", new MemberRegisterInfo { Name = "ToLongArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_ToLongArray
#endif
                    }},
                    {"ToFloatArray_static", new MemberRegisterInfo { Name = "ToFloatArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_ToFloatArray
#endif
                    }},
                    {"ToDoubleArray_static", new MemberRegisterInfo { Name = "ToDoubleArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_ToDoubleArray
#endif
                    }},
                    {"ToObjectArray_static", new MemberRegisterInfo { Name = "ToObjectArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_ToObjectArray
#endif
                    }},
                    {"FromBooleanArray_static", new MemberRegisterInfo { Name = "FromBooleanArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_FromBooleanArray
#endif
                    }},
                    {"FromSByteArray_static", new MemberRegisterInfo { Name = "FromSByteArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_FromSByteArray
#endif
                    }},
                    {"FromCharArray_static", new MemberRegisterInfo { Name = "FromCharArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_FromCharArray
#endif
                    }},
                    {"FromShortArray_static", new MemberRegisterInfo { Name = "FromShortArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_FromShortArray
#endif
                    }},
                    {"FromIntArray_static", new MemberRegisterInfo { Name = "FromIntArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_FromIntArray
#endif
                    }},
                    {"FromLongArray_static", new MemberRegisterInfo { Name = "FromLongArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_FromLongArray
#endif
                    }},
                    {"FromFloatArray_static", new MemberRegisterInfo { Name = "FromFloatArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_FromFloatArray
#endif
                    }},
                    {"FromDoubleArray_static", new MemberRegisterInfo { Name = "FromDoubleArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_FromDoubleArray
#endif
                    }},
                    {"FromObjectArray_static", new MemberRegisterInfo { Name = "FromObjectArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_FromObjectArray
#endif
                    }},
                    {"GetArrayLength_static", new MemberRegisterInfo { Name = "GetArrayLength", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetArrayLength
#endif
                    }},
                    {"NewBooleanArray_static", new MemberRegisterInfo { Name = "NewBooleanArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_NewBooleanArray
#endif
                    }},
                    {"NewSByteArray_static", new MemberRegisterInfo { Name = "NewSByteArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_NewSByteArray
#endif
                    }},
                    {"NewCharArray_static", new MemberRegisterInfo { Name = "NewCharArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_NewCharArray
#endif
                    }},
                    {"NewShortArray_static", new MemberRegisterInfo { Name = "NewShortArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_NewShortArray
#endif
                    }},
                    {"NewIntArray_static", new MemberRegisterInfo { Name = "NewIntArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_NewIntArray
#endif
                    }},
                    {"NewLongArray_static", new MemberRegisterInfo { Name = "NewLongArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_NewLongArray
#endif
                    }},
                    {"NewFloatArray_static", new MemberRegisterInfo { Name = "NewFloatArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_NewFloatArray
#endif
                    }},
                    {"NewDoubleArray_static", new MemberRegisterInfo { Name = "NewDoubleArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_NewDoubleArray
#endif
                    }},
                    {"NewObjectArray_static", new MemberRegisterInfo { Name = "NewObjectArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_NewObjectArray
#endif
                    }},
                    {"GetBooleanArrayElement_static", new MemberRegisterInfo { Name = "GetBooleanArrayElement", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetBooleanArrayElement
#endif
                    }},
                    {"GetSByteArrayElement_static", new MemberRegisterInfo { Name = "GetSByteArrayElement", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetSByteArrayElement
#endif
                    }},
                    {"GetCharArrayElement_static", new MemberRegisterInfo { Name = "GetCharArrayElement", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetCharArrayElement
#endif
                    }},
                    {"GetShortArrayElement_static", new MemberRegisterInfo { Name = "GetShortArrayElement", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetShortArrayElement
#endif
                    }},
                    {"GetIntArrayElement_static", new MemberRegisterInfo { Name = "GetIntArrayElement", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetIntArrayElement
#endif
                    }},
                    {"GetLongArrayElement_static", new MemberRegisterInfo { Name = "GetLongArrayElement", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetLongArrayElement
#endif
                    }},
                    {"GetFloatArrayElement_static", new MemberRegisterInfo { Name = "GetFloatArrayElement", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetFloatArrayElement
#endif
                    }},
                    {"GetDoubleArrayElement_static", new MemberRegisterInfo { Name = "GetDoubleArrayElement", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetDoubleArrayElement
#endif
                    }},
                    {"GetObjectArrayElement_static", new MemberRegisterInfo { Name = "GetObjectArrayElement", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_GetObjectArrayElement
#endif
                    }},
                    {"SetBooleanArrayElement_static", new MemberRegisterInfo { Name = "SetBooleanArrayElement", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetBooleanArrayElement
#endif
                    }},
                    {"SetSByteArrayElement_static", new MemberRegisterInfo { Name = "SetSByteArrayElement", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetSByteArrayElement
#endif
                    }},
                    {"SetCharArrayElement_static", new MemberRegisterInfo { Name = "SetCharArrayElement", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetCharArrayElement
#endif
                    }},
                    {"SetShortArrayElement_static", new MemberRegisterInfo { Name = "SetShortArrayElement", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetShortArrayElement
#endif
                    }},
                    {"SetIntArrayElement_static", new MemberRegisterInfo { Name = "SetIntArrayElement", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetIntArrayElement
#endif
                    }},
                    {"SetLongArrayElement_static", new MemberRegisterInfo { Name = "SetLongArrayElement", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetLongArrayElement
#endif
                    }},
                    {"SetFloatArrayElement_static", new MemberRegisterInfo { Name = "SetFloatArrayElement", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetFloatArrayElement
#endif
                    }},
                    {"SetDoubleArrayElement_static", new MemberRegisterInfo { Name = "SetDoubleArrayElement", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetDoubleArrayElement
#endif
                    }},
                    {"SetObjectArrayElement_static", new MemberRegisterInfo { Name = "SetObjectArrayElement", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AndroidJNI_Wrap.F_SetObjectArrayElement
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Animator_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Animator_Wrap.Constructor
#endif
                    }},
                    {"GetFloat", new MemberRegisterInfo { Name = "GetFloat", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetFloat
#endif
                    }},
                    {"SetFloat", new MemberRegisterInfo { Name = "SetFloat", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_SetFloat
#endif
                    }},
                    {"GetBool", new MemberRegisterInfo { Name = "GetBool", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetBool
#endif
                    }},
                    {"SetBool", new MemberRegisterInfo { Name = "SetBool", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_SetBool
#endif
                    }},
                    {"GetInteger", new MemberRegisterInfo { Name = "GetInteger", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetInteger
#endif
                    }},
                    {"SetInteger", new MemberRegisterInfo { Name = "SetInteger", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_SetInteger
#endif
                    }},
                    {"SetTrigger", new MemberRegisterInfo { Name = "SetTrigger", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_SetTrigger
#endif
                    }},
                    {"ResetTrigger", new MemberRegisterInfo { Name = "ResetTrigger", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_ResetTrigger
#endif
                    }},
                    {"IsParameterControlledByCurve", new MemberRegisterInfo { Name = "IsParameterControlledByCurve", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_IsParameterControlledByCurve
#endif
                    }},
                    {"GetIKPosition", new MemberRegisterInfo { Name = "GetIKPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetIKPosition
#endif
                    }},
                    {"SetIKPosition", new MemberRegisterInfo { Name = "SetIKPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_SetIKPosition
#endif
                    }},
                    {"GetIKRotation", new MemberRegisterInfo { Name = "GetIKRotation", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetIKRotation
#endif
                    }},
                    {"SetIKRotation", new MemberRegisterInfo { Name = "SetIKRotation", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_SetIKRotation
#endif
                    }},
                    {"GetIKPositionWeight", new MemberRegisterInfo { Name = "GetIKPositionWeight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetIKPositionWeight
#endif
                    }},
                    {"SetIKPositionWeight", new MemberRegisterInfo { Name = "SetIKPositionWeight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_SetIKPositionWeight
#endif
                    }},
                    {"GetIKRotationWeight", new MemberRegisterInfo { Name = "GetIKRotationWeight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetIKRotationWeight
#endif
                    }},
                    {"SetIKRotationWeight", new MemberRegisterInfo { Name = "SetIKRotationWeight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_SetIKRotationWeight
#endif
                    }},
                    {"GetIKHintPosition", new MemberRegisterInfo { Name = "GetIKHintPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetIKHintPosition
#endif
                    }},
                    {"SetIKHintPosition", new MemberRegisterInfo { Name = "SetIKHintPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_SetIKHintPosition
#endif
                    }},
                    {"GetIKHintPositionWeight", new MemberRegisterInfo { Name = "GetIKHintPositionWeight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetIKHintPositionWeight
#endif
                    }},
                    {"SetIKHintPositionWeight", new MemberRegisterInfo { Name = "SetIKHintPositionWeight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_SetIKHintPositionWeight
#endif
                    }},
                    {"SetLookAtPosition", new MemberRegisterInfo { Name = "SetLookAtPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_SetLookAtPosition
#endif
                    }},
                    {"SetLookAtWeight", new MemberRegisterInfo { Name = "SetLookAtWeight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_SetLookAtWeight
#endif
                    }},
                    {"SetBoneLocalRotation", new MemberRegisterInfo { Name = "SetBoneLocalRotation", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_SetBoneLocalRotation
#endif
                    }},
                    {"GetBehaviours", new MemberRegisterInfo { Name = "GetBehaviours", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetBehaviours
#endif
                    }},
                    {"GetLayerName", new MemberRegisterInfo { Name = "GetLayerName", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetLayerName
#endif
                    }},
                    {"GetLayerIndex", new MemberRegisterInfo { Name = "GetLayerIndex", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetLayerIndex
#endif
                    }},
                    {"GetLayerWeight", new MemberRegisterInfo { Name = "GetLayerWeight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetLayerWeight
#endif
                    }},
                    {"SetLayerWeight", new MemberRegisterInfo { Name = "SetLayerWeight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_SetLayerWeight
#endif
                    }},
                    {"GetCurrentAnimatorStateInfo", new MemberRegisterInfo { Name = "GetCurrentAnimatorStateInfo", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetCurrentAnimatorStateInfo
#endif
                    }},
                    {"GetNextAnimatorStateInfo", new MemberRegisterInfo { Name = "GetNextAnimatorStateInfo", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetNextAnimatorStateInfo
#endif
                    }},
                    {"GetAnimatorTransitionInfo", new MemberRegisterInfo { Name = "GetAnimatorTransitionInfo", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetAnimatorTransitionInfo
#endif
                    }},
                    {"GetCurrentAnimatorClipInfoCount", new MemberRegisterInfo { Name = "GetCurrentAnimatorClipInfoCount", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetCurrentAnimatorClipInfoCount
#endif
                    }},
                    {"GetNextAnimatorClipInfoCount", new MemberRegisterInfo { Name = "GetNextAnimatorClipInfoCount", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetNextAnimatorClipInfoCount
#endif
                    }},
                    {"GetCurrentAnimatorClipInfo", new MemberRegisterInfo { Name = "GetCurrentAnimatorClipInfo", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetCurrentAnimatorClipInfo
#endif
                    }},
                    {"GetNextAnimatorClipInfo", new MemberRegisterInfo { Name = "GetNextAnimatorClipInfo", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetNextAnimatorClipInfo
#endif
                    }},
                    {"IsInTransition", new MemberRegisterInfo { Name = "IsInTransition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_IsInTransition
#endif
                    }},
                    {"GetParameter", new MemberRegisterInfo { Name = "GetParameter", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetParameter
#endif
                    }},
                    {"MatchTarget", new MemberRegisterInfo { Name = "MatchTarget", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_MatchTarget
#endif
                    }},
                    {"InterruptMatchTarget", new MemberRegisterInfo { Name = "InterruptMatchTarget", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_InterruptMatchTarget
#endif
                    }},
                    {"CrossFadeInFixedTime", new MemberRegisterInfo { Name = "CrossFadeInFixedTime", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_CrossFadeInFixedTime
#endif
                    }},
                    {"WriteDefaultValues", new MemberRegisterInfo { Name = "WriteDefaultValues", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_WriteDefaultValues
#endif
                    }},
                    {"CrossFade", new MemberRegisterInfo { Name = "CrossFade", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_CrossFade
#endif
                    }},
                    {"PlayInFixedTime", new MemberRegisterInfo { Name = "PlayInFixedTime", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_PlayInFixedTime
#endif
                    }},
                    {"Play", new MemberRegisterInfo { Name = "Play", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_Play
#endif
                    }},
                    {"SetTarget", new MemberRegisterInfo { Name = "SetTarget", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_SetTarget
#endif
                    }},
                    {"GetBoneTransform", new MemberRegisterInfo { Name = "GetBoneTransform", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_GetBoneTransform
#endif
                    }},
                    {"StartPlayback", new MemberRegisterInfo { Name = "StartPlayback", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_StartPlayback
#endif
                    }},
                    {"StopPlayback", new MemberRegisterInfo { Name = "StopPlayback", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_StopPlayback
#endif
                    }},
                    {"StartRecording", new MemberRegisterInfo { Name = "StartRecording", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_StartRecording
#endif
                    }},
                    {"StopRecording", new MemberRegisterInfo { Name = "StopRecording", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_StopRecording
#endif
                    }},
                    {"HasState", new MemberRegisterInfo { Name = "HasState", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_HasState
#endif
                    }},
                    {"Update", new MemberRegisterInfo { Name = "Update", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_Update
#endif
                    }},
                    {"Rebind", new MemberRegisterInfo { Name = "Rebind", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_Rebind
#endif
                    }},
                    {"ApplyBuiltinRootMotion", new MemberRegisterInfo { Name = "ApplyBuiltinRootMotion", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.M_ApplyBuiltinRootMotion
#endif
                    }},
                    {"isOptimizable", new MemberRegisterInfo { Name = "isOptimizable", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_isOptimizable
#endif
                    }},
                    {"isHuman", new MemberRegisterInfo { Name = "isHuman", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_isHuman
#endif
                    }},
                    {"hasRootMotion", new MemberRegisterInfo { Name = "hasRootMotion", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_hasRootMotion
#endif
                    }},
                    {"humanScale", new MemberRegisterInfo { Name = "humanScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_humanScale
#endif
                    }},
                    {"isInitialized", new MemberRegisterInfo { Name = "isInitialized", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_isInitialized
#endif
                    }},
                    {"deltaPosition", new MemberRegisterInfo { Name = "deltaPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_deltaPosition
#endif
                    }},
                    {"deltaRotation", new MemberRegisterInfo { Name = "deltaRotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_deltaRotation
#endif
                    }},
                    {"velocity", new MemberRegisterInfo { Name = "velocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_velocity
#endif
                    }},
                    {"angularVelocity", new MemberRegisterInfo { Name = "angularVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_angularVelocity
#endif
                    }},
                    {"rootPosition", new MemberRegisterInfo { Name = "rootPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_rootPosition, PropertySetter = UnityEngine_Animator_Wrap.S_rootPosition
#endif
                    }},
                    {"rootRotation", new MemberRegisterInfo { Name = "rootRotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_rootRotation, PropertySetter = UnityEngine_Animator_Wrap.S_rootRotation
#endif
                    }},
                    {"applyRootMotion", new MemberRegisterInfo { Name = "applyRootMotion", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_applyRootMotion, PropertySetter = UnityEngine_Animator_Wrap.S_applyRootMotion
#endif
                    }},
                    {"updateMode", new MemberRegisterInfo { Name = "updateMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_updateMode, PropertySetter = UnityEngine_Animator_Wrap.S_updateMode
#endif
                    }},
                    {"hasTransformHierarchy", new MemberRegisterInfo { Name = "hasTransformHierarchy", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_hasTransformHierarchy
#endif
                    }},
                    {"gravityWeight", new MemberRegisterInfo { Name = "gravityWeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_gravityWeight
#endif
                    }},
                    {"bodyPosition", new MemberRegisterInfo { Name = "bodyPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_bodyPosition, PropertySetter = UnityEngine_Animator_Wrap.S_bodyPosition
#endif
                    }},
                    {"bodyRotation", new MemberRegisterInfo { Name = "bodyRotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_bodyRotation, PropertySetter = UnityEngine_Animator_Wrap.S_bodyRotation
#endif
                    }},
                    {"stabilizeFeet", new MemberRegisterInfo { Name = "stabilizeFeet", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_stabilizeFeet, PropertySetter = UnityEngine_Animator_Wrap.S_stabilizeFeet
#endif
                    }},
                    {"layerCount", new MemberRegisterInfo { Name = "layerCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_layerCount
#endif
                    }},
                    {"parameters", new MemberRegisterInfo { Name = "parameters", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_parameters
#endif
                    }},
                    {"parameterCount", new MemberRegisterInfo { Name = "parameterCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_parameterCount
#endif
                    }},
                    {"feetPivotActive", new MemberRegisterInfo { Name = "feetPivotActive", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_feetPivotActive, PropertySetter = UnityEngine_Animator_Wrap.S_feetPivotActive
#endif
                    }},
                    {"pivotWeight", new MemberRegisterInfo { Name = "pivotWeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_pivotWeight
#endif
                    }},
                    {"pivotPosition", new MemberRegisterInfo { Name = "pivotPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_pivotPosition
#endif
                    }},
                    {"isMatchingTarget", new MemberRegisterInfo { Name = "isMatchingTarget", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_isMatchingTarget
#endif
                    }},
                    {"speed", new MemberRegisterInfo { Name = "speed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_speed, PropertySetter = UnityEngine_Animator_Wrap.S_speed
#endif
                    }},
                    {"targetPosition", new MemberRegisterInfo { Name = "targetPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_targetPosition
#endif
                    }},
                    {"targetRotation", new MemberRegisterInfo { Name = "targetRotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_targetRotation
#endif
                    }},
                    {"cullingMode", new MemberRegisterInfo { Name = "cullingMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_cullingMode, PropertySetter = UnityEngine_Animator_Wrap.S_cullingMode
#endif
                    }},
                    {"playbackTime", new MemberRegisterInfo { Name = "playbackTime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_playbackTime, PropertySetter = UnityEngine_Animator_Wrap.S_playbackTime
#endif
                    }},
                    {"recorderStartTime", new MemberRegisterInfo { Name = "recorderStartTime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_recorderStartTime, PropertySetter = UnityEngine_Animator_Wrap.S_recorderStartTime
#endif
                    }},
                    {"recorderStopTime", new MemberRegisterInfo { Name = "recorderStopTime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_recorderStopTime, PropertySetter = UnityEngine_Animator_Wrap.S_recorderStopTime
#endif
                    }},
                    {"recorderMode", new MemberRegisterInfo { Name = "recorderMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_recorderMode
#endif
                    }},
                    {"runtimeAnimatorController", new MemberRegisterInfo { Name = "runtimeAnimatorController", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_runtimeAnimatorController, PropertySetter = UnityEngine_Animator_Wrap.S_runtimeAnimatorController
#endif
                    }},
                    {"hasBoundPlayables", new MemberRegisterInfo { Name = "hasBoundPlayables", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_hasBoundPlayables
#endif
                    }},
                    {"avatar", new MemberRegisterInfo { Name = "avatar", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_avatar, PropertySetter = UnityEngine_Animator_Wrap.S_avatar
#endif
                    }},
                    {"playableGraph", new MemberRegisterInfo { Name = "playableGraph", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_playableGraph
#endif
                    }},
                    {"layersAffectMassCenter", new MemberRegisterInfo { Name = "layersAffectMassCenter", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_layersAffectMassCenter, PropertySetter = UnityEngine_Animator_Wrap.S_layersAffectMassCenter
#endif
                    }},
                    {"leftFeetBottomHeight", new MemberRegisterInfo { Name = "leftFeetBottomHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_leftFeetBottomHeight
#endif
                    }},
                    {"rightFeetBottomHeight", new MemberRegisterInfo { Name = "rightFeetBottomHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_rightFeetBottomHeight
#endif
                    }},
                    {"logWarnings", new MemberRegisterInfo { Name = "logWarnings", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_logWarnings, PropertySetter = UnityEngine_Animator_Wrap.S_logWarnings
#endif
                    }},
                    {"fireEvents", new MemberRegisterInfo { Name = "fireEvents", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_fireEvents, PropertySetter = UnityEngine_Animator_Wrap.S_fireEvents
#endif
                    }},
                    {"keepAnimatorStateOnDisable", new MemberRegisterInfo { Name = "keepAnimatorStateOnDisable", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_keepAnimatorStateOnDisable, PropertySetter = UnityEngine_Animator_Wrap.S_keepAnimatorStateOnDisable
#endif
                    }},
                    {"writeDefaultValuesOnDisable", new MemberRegisterInfo { Name = "writeDefaultValuesOnDisable", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animator_Wrap.G_writeDefaultValuesOnDisable, PropertySetter = UnityEngine_Animator_Wrap.S_writeDefaultValuesOnDisable
#endif
                    }},
                    {"StringToHash_static", new MemberRegisterInfo { Name = "StringToHash", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animator_Wrap.F_StringToHash
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_IAnimationClipSource_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"GetAnimationClips", new MemberRegisterInfo { Name = "GetAnimationClips", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_IAnimationClipSource_Wrap.M_GetAnimationClips
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SharedBetweenAnimatorsAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SharedBetweenAnimatorsAttribute_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_StateMachineBehaviour_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"OnStateEnter", new MemberRegisterInfo { Name = "OnStateEnter", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_StateMachineBehaviour_Wrap.M_OnStateEnter
#endif
                    }},
                    {"OnStateUpdate", new MemberRegisterInfo { Name = "OnStateUpdate", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_StateMachineBehaviour_Wrap.M_OnStateUpdate
#endif
                    }},
                    {"OnStateExit", new MemberRegisterInfo { Name = "OnStateExit", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_StateMachineBehaviour_Wrap.M_OnStateExit
#endif
                    }},
                    {"OnStateMove", new MemberRegisterInfo { Name = "OnStateMove", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_StateMachineBehaviour_Wrap.M_OnStateMove
#endif
                    }},
                    {"OnStateIK", new MemberRegisterInfo { Name = "OnStateIK", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_StateMachineBehaviour_Wrap.M_OnStateIK
#endif
                    }},
                    {"OnStateMachineEnter", new MemberRegisterInfo { Name = "OnStateMachineEnter", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_StateMachineBehaviour_Wrap.M_OnStateMachineEnter
#endif
                    }},
                    {"OnStateMachineExit", new MemberRegisterInfo { Name = "OnStateMachineExit", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_StateMachineBehaviour_Wrap.M_OnStateMachineExit
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Animation_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Animation_Wrap.Constructor
#endif
                    }},
                    {"Stop", new MemberRegisterInfo { Name = "Stop", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animation_Wrap.M_Stop
#endif
                    }},
                    {"Rewind", new MemberRegisterInfo { Name = "Rewind", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animation_Wrap.M_Rewind
#endif
                    }},
                    {"Sample", new MemberRegisterInfo { Name = "Sample", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animation_Wrap.M_Sample
#endif
                    }},
                    {"IsPlaying", new MemberRegisterInfo { Name = "IsPlaying", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animation_Wrap.M_IsPlaying
#endif
                    }},
                    {"Play", new MemberRegisterInfo { Name = "Play", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animation_Wrap.M_Play
#endif
                    }},
                    {"CrossFade", new MemberRegisterInfo { Name = "CrossFade", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animation_Wrap.M_CrossFade
#endif
                    }},
                    {"Blend", new MemberRegisterInfo { Name = "Blend", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animation_Wrap.M_Blend
#endif
                    }},
                    {"CrossFadeQueued", new MemberRegisterInfo { Name = "CrossFadeQueued", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animation_Wrap.M_CrossFadeQueued
#endif
                    }},
                    {"PlayQueued", new MemberRegisterInfo { Name = "PlayQueued", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animation_Wrap.M_PlayQueued
#endif
                    }},
                    {"AddClip", new MemberRegisterInfo { Name = "AddClip", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animation_Wrap.M_AddClip
#endif
                    }},
                    {"RemoveClip", new MemberRegisterInfo { Name = "RemoveClip", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animation_Wrap.M_RemoveClip
#endif
                    }},
                    {"GetClipCount", new MemberRegisterInfo { Name = "GetClipCount", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animation_Wrap.M_GetClipCount
#endif
                    }},
                    {"SyncLayer", new MemberRegisterInfo { Name = "SyncLayer", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animation_Wrap.M_SyncLayer
#endif
                    }},
                    {"GetEnumerator", new MemberRegisterInfo { Name = "GetEnumerator", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animation_Wrap.M_GetEnumerator
#endif
                    }},
                    {"GetClip", new MemberRegisterInfo { Name = "GetClip", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animation_Wrap.M_GetClip
#endif
                    }},
                    {"clip", new MemberRegisterInfo { Name = "clip", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animation_Wrap.G_clip, PropertySetter = UnityEngine_Animation_Wrap.S_clip
#endif
                    }},
                    {"playAutomatically", new MemberRegisterInfo { Name = "playAutomatically", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animation_Wrap.G_playAutomatically, PropertySetter = UnityEngine_Animation_Wrap.S_playAutomatically
#endif
                    }},
                    {"wrapMode", new MemberRegisterInfo { Name = "wrapMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animation_Wrap.G_wrapMode, PropertySetter = UnityEngine_Animation_Wrap.S_wrapMode
#endif
                    }},
                    {"isPlaying", new MemberRegisterInfo { Name = "isPlaying", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animation_Wrap.G_isPlaying
#endif
                    }},
                    {"get_Item", new MemberRegisterInfo { Name = "get_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Animation_Wrap.GetItem
#endif
                    }},
                    {"animatePhysics", new MemberRegisterInfo { Name = "animatePhysics", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animation_Wrap.G_animatePhysics, PropertySetter = UnityEngine_Animation_Wrap.S_animatePhysics
#endif
                    }},
                    {"cullingType", new MemberRegisterInfo { Name = "cullingType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animation_Wrap.G_cullingType, PropertySetter = UnityEngine_Animation_Wrap.S_cullingType
#endif
                    }},
                    {"localBounds", new MemberRegisterInfo { Name = "localBounds", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Animation_Wrap.G_localBounds, PropertySetter = UnityEngine_Animation_Wrap.S_localBounds
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AnimationState_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AnimationState_Wrap.Constructor
#endif
                    }},
                    {"AddMixingTransform", new MemberRegisterInfo { Name = "AddMixingTransform", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimationState_Wrap.M_AddMixingTransform
#endif
                    }},
                    {"RemoveMixingTransform", new MemberRegisterInfo { Name = "RemoveMixingTransform", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimationState_Wrap.M_RemoveMixingTransform
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationState_Wrap.G_enabled, PropertySetter = UnityEngine_AnimationState_Wrap.S_enabled
#endif
                    }},
                    {"weight", new MemberRegisterInfo { Name = "weight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationState_Wrap.G_weight, PropertySetter = UnityEngine_AnimationState_Wrap.S_weight
#endif
                    }},
                    {"wrapMode", new MemberRegisterInfo { Name = "wrapMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationState_Wrap.G_wrapMode, PropertySetter = UnityEngine_AnimationState_Wrap.S_wrapMode
#endif
                    }},
                    {"time", new MemberRegisterInfo { Name = "time", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationState_Wrap.G_time, PropertySetter = UnityEngine_AnimationState_Wrap.S_time
#endif
                    }},
                    {"normalizedTime", new MemberRegisterInfo { Name = "normalizedTime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationState_Wrap.G_normalizedTime, PropertySetter = UnityEngine_AnimationState_Wrap.S_normalizedTime
#endif
                    }},
                    {"speed", new MemberRegisterInfo { Name = "speed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationState_Wrap.G_speed, PropertySetter = UnityEngine_AnimationState_Wrap.S_speed
#endif
                    }},
                    {"normalizedSpeed", new MemberRegisterInfo { Name = "normalizedSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationState_Wrap.G_normalizedSpeed, PropertySetter = UnityEngine_AnimationState_Wrap.S_normalizedSpeed
#endif
                    }},
                    {"length", new MemberRegisterInfo { Name = "length", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationState_Wrap.G_length
#endif
                    }},
                    {"layer", new MemberRegisterInfo { Name = "layer", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationState_Wrap.G_layer, PropertySetter = UnityEngine_AnimationState_Wrap.S_layer
#endif
                    }},
                    {"clip", new MemberRegisterInfo { Name = "clip", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationState_Wrap.G_clip
#endif
                    }},
                    {"name", new MemberRegisterInfo { Name = "name", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationState_Wrap.G_name, PropertySetter = UnityEngine_AnimationState_Wrap.S_name
#endif
                    }},
                    {"blendMode", new MemberRegisterInfo { Name = "blendMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationState_Wrap.G_blendMode, PropertySetter = UnityEngine_AnimationState_Wrap.S_blendMode
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AnimationEvent_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AnimationEvent_Wrap.Constructor
#endif
                    }},
                    {"stringParameter", new MemberRegisterInfo { Name = "stringParameter", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationEvent_Wrap.G_stringParameter, PropertySetter = UnityEngine_AnimationEvent_Wrap.S_stringParameter
#endif
                    }},
                    {"floatParameter", new MemberRegisterInfo { Name = "floatParameter", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationEvent_Wrap.G_floatParameter, PropertySetter = UnityEngine_AnimationEvent_Wrap.S_floatParameter
#endif
                    }},
                    {"intParameter", new MemberRegisterInfo { Name = "intParameter", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationEvent_Wrap.G_intParameter, PropertySetter = UnityEngine_AnimationEvent_Wrap.S_intParameter
#endif
                    }},
                    {"objectReferenceParameter", new MemberRegisterInfo { Name = "objectReferenceParameter", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationEvent_Wrap.G_objectReferenceParameter, PropertySetter = UnityEngine_AnimationEvent_Wrap.S_objectReferenceParameter
#endif
                    }},
                    {"functionName", new MemberRegisterInfo { Name = "functionName", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationEvent_Wrap.G_functionName, PropertySetter = UnityEngine_AnimationEvent_Wrap.S_functionName
#endif
                    }},
                    {"time", new MemberRegisterInfo { Name = "time", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationEvent_Wrap.G_time, PropertySetter = UnityEngine_AnimationEvent_Wrap.S_time
#endif
                    }},
                    {"messageOptions", new MemberRegisterInfo { Name = "messageOptions", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationEvent_Wrap.G_messageOptions, PropertySetter = UnityEngine_AnimationEvent_Wrap.S_messageOptions
#endif
                    }},
                    {"isFiredByLegacy", new MemberRegisterInfo { Name = "isFiredByLegacy", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationEvent_Wrap.G_isFiredByLegacy
#endif
                    }},
                    {"isFiredByAnimator", new MemberRegisterInfo { Name = "isFiredByAnimator", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationEvent_Wrap.G_isFiredByAnimator
#endif
                    }},
                    {"animationState", new MemberRegisterInfo { Name = "animationState", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationEvent_Wrap.G_animationState
#endif
                    }},
                    {"animatorStateInfo", new MemberRegisterInfo { Name = "animatorStateInfo", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationEvent_Wrap.G_animatorStateInfo
#endif
                    }},
                    {"animatorClipInfo", new MemberRegisterInfo { Name = "animatorClipInfo", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationEvent_Wrap.G_animatorClipInfo
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AnimationClip_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AnimationClip_Wrap.Constructor
#endif
                    }},
                    {"SampleAnimation", new MemberRegisterInfo { Name = "SampleAnimation", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimationClip_Wrap.M_SampleAnimation
#endif
                    }},
                    {"SetCurve", new MemberRegisterInfo { Name = "SetCurve", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimationClip_Wrap.M_SetCurve
#endif
                    }},
                    {"EnsureQuaternionContinuity", new MemberRegisterInfo { Name = "EnsureQuaternionContinuity", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimationClip_Wrap.M_EnsureQuaternionContinuity
#endif
                    }},
                    {"ClearCurves", new MemberRegisterInfo { Name = "ClearCurves", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimationClip_Wrap.M_ClearCurves
#endif
                    }},
                    {"AddEvent", new MemberRegisterInfo { Name = "AddEvent", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimationClip_Wrap.M_AddEvent
#endif
                    }},
                    {"length", new MemberRegisterInfo { Name = "length", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationClip_Wrap.G_length
#endif
                    }},
                    {"frameRate", new MemberRegisterInfo { Name = "frameRate", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationClip_Wrap.G_frameRate, PropertySetter = UnityEngine_AnimationClip_Wrap.S_frameRate
#endif
                    }},
                    {"wrapMode", new MemberRegisterInfo { Name = "wrapMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationClip_Wrap.G_wrapMode, PropertySetter = UnityEngine_AnimationClip_Wrap.S_wrapMode
#endif
                    }},
                    {"localBounds", new MemberRegisterInfo { Name = "localBounds", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationClip_Wrap.G_localBounds, PropertySetter = UnityEngine_AnimationClip_Wrap.S_localBounds
#endif
                    }},
                    {"legacy", new MemberRegisterInfo { Name = "legacy", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationClip_Wrap.G_legacy, PropertySetter = UnityEngine_AnimationClip_Wrap.S_legacy
#endif
                    }},
                    {"humanMotion", new MemberRegisterInfo { Name = "humanMotion", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationClip_Wrap.G_humanMotion
#endif
                    }},
                    {"empty", new MemberRegisterInfo { Name = "empty", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationClip_Wrap.G_empty
#endif
                    }},
                    {"hasGenericRootTransform", new MemberRegisterInfo { Name = "hasGenericRootTransform", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationClip_Wrap.G_hasGenericRootTransform
#endif
                    }},
                    {"hasMotionFloatCurves", new MemberRegisterInfo { Name = "hasMotionFloatCurves", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationClip_Wrap.G_hasMotionFloatCurves
#endif
                    }},
                    {"hasMotionCurves", new MemberRegisterInfo { Name = "hasMotionCurves", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationClip_Wrap.G_hasMotionCurves
#endif
                    }},
                    {"hasRootCurves", new MemberRegisterInfo { Name = "hasRootCurves", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationClip_Wrap.G_hasRootCurves
#endif
                    }},
                    {"events", new MemberRegisterInfo { Name = "events", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationClip_Wrap.G_events, PropertySetter = UnityEngine_AnimationClip_Wrap.S_events
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AnimatorClipInfo_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AnimatorClipInfo_Wrap.Constructor
#endif
                    }},
                    {"clip", new MemberRegisterInfo { Name = "clip", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorClipInfo_Wrap.G_clip
#endif
                    }},
                    {"weight", new MemberRegisterInfo { Name = "weight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorClipInfo_Wrap.G_weight
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AnimatorStateInfo_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AnimatorStateInfo_Wrap.Constructor
#endif
                    }},
                    {"IsName", new MemberRegisterInfo { Name = "IsName", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimatorStateInfo_Wrap.M_IsName
#endif
                    }},
                    {"IsTag", new MemberRegisterInfo { Name = "IsTag", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimatorStateInfo_Wrap.M_IsTag
#endif
                    }},
                    {"fullPathHash", new MemberRegisterInfo { Name = "fullPathHash", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorStateInfo_Wrap.G_fullPathHash
#endif
                    }},
                    {"shortNameHash", new MemberRegisterInfo { Name = "shortNameHash", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorStateInfo_Wrap.G_shortNameHash
#endif
                    }},
                    {"normalizedTime", new MemberRegisterInfo { Name = "normalizedTime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorStateInfo_Wrap.G_normalizedTime
#endif
                    }},
                    {"length", new MemberRegisterInfo { Name = "length", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorStateInfo_Wrap.G_length
#endif
                    }},
                    {"speed", new MemberRegisterInfo { Name = "speed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorStateInfo_Wrap.G_speed
#endif
                    }},
                    {"speedMultiplier", new MemberRegisterInfo { Name = "speedMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorStateInfo_Wrap.G_speedMultiplier
#endif
                    }},
                    {"tagHash", new MemberRegisterInfo { Name = "tagHash", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorStateInfo_Wrap.G_tagHash
#endif
                    }},
                    {"loop", new MemberRegisterInfo { Name = "loop", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorStateInfo_Wrap.G_loop
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AnimatorTransitionInfo_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AnimatorTransitionInfo_Wrap.Constructor
#endif
                    }},
                    {"IsName", new MemberRegisterInfo { Name = "IsName", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimatorTransitionInfo_Wrap.M_IsName
#endif
                    }},
                    {"IsUserName", new MemberRegisterInfo { Name = "IsUserName", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimatorTransitionInfo_Wrap.M_IsUserName
#endif
                    }},
                    {"fullPathHash", new MemberRegisterInfo { Name = "fullPathHash", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorTransitionInfo_Wrap.G_fullPathHash
#endif
                    }},
                    {"nameHash", new MemberRegisterInfo { Name = "nameHash", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorTransitionInfo_Wrap.G_nameHash
#endif
                    }},
                    {"userNameHash", new MemberRegisterInfo { Name = "userNameHash", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorTransitionInfo_Wrap.G_userNameHash
#endif
                    }},
                    {"durationUnit", new MemberRegisterInfo { Name = "durationUnit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorTransitionInfo_Wrap.G_durationUnit
#endif
                    }},
                    {"duration", new MemberRegisterInfo { Name = "duration", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorTransitionInfo_Wrap.G_duration
#endif
                    }},
                    {"normalizedTime", new MemberRegisterInfo { Name = "normalizedTime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorTransitionInfo_Wrap.G_normalizedTime
#endif
                    }},
                    {"anyState", new MemberRegisterInfo { Name = "anyState", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorTransitionInfo_Wrap.G_anyState
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_MatchTargetWeightMask_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_MatchTargetWeightMask_Wrap.Constructor
#endif
                    }},
                    {"positionXYZWeight", new MemberRegisterInfo { Name = "positionXYZWeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_MatchTargetWeightMask_Wrap.G_positionXYZWeight, PropertySetter = UnityEngine_MatchTargetWeightMask_Wrap.S_positionXYZWeight
#endif
                    }},
                    {"rotationWeight", new MemberRegisterInfo { Name = "rotationWeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_MatchTargetWeightMask_Wrap.G_rotationWeight, PropertySetter = UnityEngine_MatchTargetWeightMask_Wrap.S_rotationWeight
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AnimatorControllerParameter_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AnimatorControllerParameter_Wrap.Constructor
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimatorControllerParameter_Wrap.M_Equals
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimatorControllerParameter_Wrap.M_GetHashCode
#endif
                    }},
                    {"name", new MemberRegisterInfo { Name = "name", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"nameHash", new MemberRegisterInfo { Name = "nameHash", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorControllerParameter_Wrap.G_nameHash
#endif
                    }},
                    {"type", new MemberRegisterInfo { Name = "type", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorControllerParameter_Wrap.G_type, PropertySetter = UnityEngine_AnimatorControllerParameter_Wrap.S_type
#endif
                    }},
                    {"defaultFloat", new MemberRegisterInfo { Name = "defaultFloat", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorControllerParameter_Wrap.G_defaultFloat, PropertySetter = UnityEngine_AnimatorControllerParameter_Wrap.S_defaultFloat
#endif
                    }},
                    {"defaultInt", new MemberRegisterInfo { Name = "defaultInt", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorControllerParameter_Wrap.G_defaultInt, PropertySetter = UnityEngine_AnimatorControllerParameter_Wrap.S_defaultInt
#endif
                    }},
                    {"defaultBool", new MemberRegisterInfo { Name = "defaultBool", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorControllerParameter_Wrap.G_defaultBool, PropertySetter = UnityEngine_AnimatorControllerParameter_Wrap.S_defaultBool
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AnimatorOverrideController_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AnimatorOverrideController_Wrap.Constructor
#endif
                    }},
                    {"GetOverrides", new MemberRegisterInfo { Name = "GetOverrides", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimatorOverrideController_Wrap.M_GetOverrides
#endif
                    }},
                    {"ApplyOverrides", new MemberRegisterInfo { Name = "ApplyOverrides", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimatorOverrideController_Wrap.M_ApplyOverrides
#endif
                    }},
                    {"runtimeAnimatorController", new MemberRegisterInfo { Name = "runtimeAnimatorController", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorOverrideController_Wrap.G_runtimeAnimatorController, PropertySetter = UnityEngine_AnimatorOverrideController_Wrap.S_runtimeAnimatorController
#endif
                    }},
                    {"get_Item", new MemberRegisterInfo { Name = "get_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimatorOverrideController_Wrap.GetItem
#endif
                    }},
                    {"set_Item", new MemberRegisterInfo { Name = "set_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimatorOverrideController_Wrap.SetItem
#endif
                    }},
                    {"overridesCount", new MemberRegisterInfo { Name = "overridesCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimatorOverrideController_Wrap.G_overridesCount
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AnimatorUtility_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AnimatorUtility_Wrap.Constructor
#endif
                    }},
                    {"OptimizeTransformHierarchy_static", new MemberRegisterInfo { Name = "OptimizeTransformHierarchy", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimatorUtility_Wrap.F_OptimizeTransformHierarchy
#endif
                    }},
                    {"DeoptimizeTransformHierarchy_static", new MemberRegisterInfo { Name = "DeoptimizeTransformHierarchy", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimatorUtility_Wrap.F_DeoptimizeTransformHierarchy
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Avatar_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"isValid", new MemberRegisterInfo { Name = "isValid", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Avatar_Wrap.G_isValid
#endif
                    }},
                    {"isHuman", new MemberRegisterInfo { Name = "isHuman", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Avatar_Wrap.G_isHuman
#endif
                    }},
                    {"humanDescription", new MemberRegisterInfo { Name = "humanDescription", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Avatar_Wrap.G_humanDescription
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SkeletonBone_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SkeletonBone_Wrap.Constructor
#endif
                    }},
                    {"name", new MemberRegisterInfo { Name = "name", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SkeletonBone_Wrap.G_name, PropertySetter = UnityEngine_SkeletonBone_Wrap.S_name
#endif
                    }},
                    {"position", new MemberRegisterInfo { Name = "position", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SkeletonBone_Wrap.G_position, PropertySetter = UnityEngine_SkeletonBone_Wrap.S_position
#endif
                    }},
                    {"rotation", new MemberRegisterInfo { Name = "rotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SkeletonBone_Wrap.G_rotation, PropertySetter = UnityEngine_SkeletonBone_Wrap.S_rotation
#endif
                    }},
                    {"scale", new MemberRegisterInfo { Name = "scale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SkeletonBone_Wrap.G_scale, PropertySetter = UnityEngine_SkeletonBone_Wrap.S_scale
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_HumanLimit_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_HumanLimit_Wrap.Constructor
#endif
                    }},
                    {"useDefaultValues", new MemberRegisterInfo { Name = "useDefaultValues", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanLimit_Wrap.G_useDefaultValues, PropertySetter = UnityEngine_HumanLimit_Wrap.S_useDefaultValues
#endif
                    }},
                    {"min", new MemberRegisterInfo { Name = "min", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanLimit_Wrap.G_min, PropertySetter = UnityEngine_HumanLimit_Wrap.S_min
#endif
                    }},
                    {"max", new MemberRegisterInfo { Name = "max", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanLimit_Wrap.G_max, PropertySetter = UnityEngine_HumanLimit_Wrap.S_max
#endif
                    }},
                    {"center", new MemberRegisterInfo { Name = "center", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanLimit_Wrap.G_center, PropertySetter = UnityEngine_HumanLimit_Wrap.S_center
#endif
                    }},
                    {"axisLength", new MemberRegisterInfo { Name = "axisLength", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanLimit_Wrap.G_axisLength, PropertySetter = UnityEngine_HumanLimit_Wrap.S_axisLength
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_HumanBone_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_HumanBone_Wrap.Constructor
#endif
                    }},
                    {"boneName", new MemberRegisterInfo { Name = "boneName", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanBone_Wrap.G_boneName, PropertySetter = UnityEngine_HumanBone_Wrap.S_boneName
#endif
                    }},
                    {"humanName", new MemberRegisterInfo { Name = "humanName", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanBone_Wrap.G_humanName, PropertySetter = UnityEngine_HumanBone_Wrap.S_humanName
#endif
                    }},
                    {"limit", new MemberRegisterInfo { Name = "limit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanBone_Wrap.G_limit, PropertySetter = UnityEngine_HumanBone_Wrap.S_limit
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_HumanDescription_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_HumanDescription_Wrap.Constructor
#endif
                    }},
                    {"upperArmTwist", new MemberRegisterInfo { Name = "upperArmTwist", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanDescription_Wrap.G_upperArmTwist, PropertySetter = UnityEngine_HumanDescription_Wrap.S_upperArmTwist
#endif
                    }},
                    {"lowerArmTwist", new MemberRegisterInfo { Name = "lowerArmTwist", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanDescription_Wrap.G_lowerArmTwist, PropertySetter = UnityEngine_HumanDescription_Wrap.S_lowerArmTwist
#endif
                    }},
                    {"upperLegTwist", new MemberRegisterInfo { Name = "upperLegTwist", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanDescription_Wrap.G_upperLegTwist, PropertySetter = UnityEngine_HumanDescription_Wrap.S_upperLegTwist
#endif
                    }},
                    {"lowerLegTwist", new MemberRegisterInfo { Name = "lowerLegTwist", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanDescription_Wrap.G_lowerLegTwist, PropertySetter = UnityEngine_HumanDescription_Wrap.S_lowerLegTwist
#endif
                    }},
                    {"armStretch", new MemberRegisterInfo { Name = "armStretch", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanDescription_Wrap.G_armStretch, PropertySetter = UnityEngine_HumanDescription_Wrap.S_armStretch
#endif
                    }},
                    {"legStretch", new MemberRegisterInfo { Name = "legStretch", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanDescription_Wrap.G_legStretch, PropertySetter = UnityEngine_HumanDescription_Wrap.S_legStretch
#endif
                    }},
                    {"feetSpacing", new MemberRegisterInfo { Name = "feetSpacing", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanDescription_Wrap.G_feetSpacing, PropertySetter = UnityEngine_HumanDescription_Wrap.S_feetSpacing
#endif
                    }},
                    {"hasTranslationDoF", new MemberRegisterInfo { Name = "hasTranslationDoF", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanDescription_Wrap.G_hasTranslationDoF, PropertySetter = UnityEngine_HumanDescription_Wrap.S_hasTranslationDoF
#endif
                    }},
                    {"human", new MemberRegisterInfo { Name = "human", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanDescription_Wrap.G_human, PropertySetter = UnityEngine_HumanDescription_Wrap.S_human
#endif
                    }},
                    {"skeleton", new MemberRegisterInfo { Name = "skeleton", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanDescription_Wrap.G_skeleton, PropertySetter = UnityEngine_HumanDescription_Wrap.S_skeleton
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AvatarBuilder_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AvatarBuilder_Wrap.Constructor
#endif
                    }},
                    {"BuildHumanAvatar_static", new MemberRegisterInfo { Name = "BuildHumanAvatar", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AvatarBuilder_Wrap.F_BuildHumanAvatar
#endif
                    }},
                    {"BuildGenericAvatar_static", new MemberRegisterInfo { Name = "BuildGenericAvatar", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AvatarBuilder_Wrap.F_BuildGenericAvatar
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AvatarMask_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AvatarMask_Wrap.Constructor
#endif
                    }},
                    {"GetHumanoidBodyPartActive", new MemberRegisterInfo { Name = "GetHumanoidBodyPartActive", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AvatarMask_Wrap.M_GetHumanoidBodyPartActive
#endif
                    }},
                    {"SetHumanoidBodyPartActive", new MemberRegisterInfo { Name = "SetHumanoidBodyPartActive", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AvatarMask_Wrap.M_SetHumanoidBodyPartActive
#endif
                    }},
                    {"AddTransformPath", new MemberRegisterInfo { Name = "AddTransformPath", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AvatarMask_Wrap.M_AddTransformPath
#endif
                    }},
                    {"RemoveTransformPath", new MemberRegisterInfo { Name = "RemoveTransformPath", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AvatarMask_Wrap.M_RemoveTransformPath
#endif
                    }},
                    {"GetTransformPath", new MemberRegisterInfo { Name = "GetTransformPath", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AvatarMask_Wrap.M_GetTransformPath
#endif
                    }},
                    {"SetTransformPath", new MemberRegisterInfo { Name = "SetTransformPath", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AvatarMask_Wrap.M_SetTransformPath
#endif
                    }},
                    {"GetTransformActive", new MemberRegisterInfo { Name = "GetTransformActive", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AvatarMask_Wrap.M_GetTransformActive
#endif
                    }},
                    {"SetTransformActive", new MemberRegisterInfo { Name = "SetTransformActive", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AvatarMask_Wrap.M_SetTransformActive
#endif
                    }},
                    {"transformCount", new MemberRegisterInfo { Name = "transformCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AvatarMask_Wrap.G_transformCount, PropertySetter = UnityEngine_AvatarMask_Wrap.S_transformCount
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_HumanPose_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_HumanPose_Wrap.Constructor
#endif
                    }},
                    {"bodyPosition", new MemberRegisterInfo { Name = "bodyPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanPose_Wrap.G_bodyPosition, PropertySetter = UnityEngine_HumanPose_Wrap.S_bodyPosition
#endif
                    }},
                    {"bodyRotation", new MemberRegisterInfo { Name = "bodyRotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanPose_Wrap.G_bodyRotation, PropertySetter = UnityEngine_HumanPose_Wrap.S_bodyRotation
#endif
                    }},
                    {"muscles", new MemberRegisterInfo { Name = "muscles", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanPose_Wrap.G_muscles, PropertySetter = UnityEngine_HumanPose_Wrap.S_muscles
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_HumanPoseHandler_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_HumanPoseHandler_Wrap.Constructor
#endif
                    }},
                    {"Dispose", new MemberRegisterInfo { Name = "Dispose", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_HumanPoseHandler_Wrap.M_Dispose
#endif
                    }},
                    {"GetHumanPose", new MemberRegisterInfo { Name = "GetHumanPose", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_HumanPoseHandler_Wrap.M_GetHumanPose
#endif
                    }},
                    {"SetHumanPose", new MemberRegisterInfo { Name = "SetHumanPose", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_HumanPoseHandler_Wrap.M_SetHumanPose
#endif
                    }},
                    {"GetInternalHumanPose", new MemberRegisterInfo { Name = "GetInternalHumanPose", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_HumanPoseHandler_Wrap.M_GetInternalHumanPose
#endif
                    }},
                    {"SetInternalHumanPose", new MemberRegisterInfo { Name = "SetInternalHumanPose", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_HumanPoseHandler_Wrap.M_SetInternalHumanPose
#endif
                    }},
                    {"GetInternalAvatarPose", new MemberRegisterInfo { Name = "GetInternalAvatarPose", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_HumanPoseHandler_Wrap.M_GetInternalAvatarPose
#endif
                    }},
                    {"SetInternalAvatarPose", new MemberRegisterInfo { Name = "SetInternalAvatarPose", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_HumanPoseHandler_Wrap.M_SetInternalAvatarPose
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_HumanTrait_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_HumanTrait_Wrap.Constructor
#endif
                    }},
                    {"MuscleFromBone_static", new MemberRegisterInfo { Name = "MuscleFromBone", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_HumanTrait_Wrap.F_MuscleFromBone
#endif
                    }},
                    {"BoneFromMuscle_static", new MemberRegisterInfo { Name = "BoneFromMuscle", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_HumanTrait_Wrap.F_BoneFromMuscle
#endif
                    }},
                    {"RequiredBone_static", new MemberRegisterInfo { Name = "RequiredBone", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_HumanTrait_Wrap.F_RequiredBone
#endif
                    }},
                    {"GetMuscleDefaultMin_static", new MemberRegisterInfo { Name = "GetMuscleDefaultMin", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_HumanTrait_Wrap.F_GetMuscleDefaultMin
#endif
                    }},
                    {"GetMuscleDefaultMax_static", new MemberRegisterInfo { Name = "GetMuscleDefaultMax", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_HumanTrait_Wrap.F_GetMuscleDefaultMax
#endif
                    }},
                    {"GetBoneDefaultHierarchyMass_static", new MemberRegisterInfo { Name = "GetBoneDefaultHierarchyMass", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_HumanTrait_Wrap.F_GetBoneDefaultHierarchyMass
#endif
                    }},
                    {"GetParentBone_static", new MemberRegisterInfo { Name = "GetParentBone", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_HumanTrait_Wrap.F_GetParentBone
#endif
                    }},
                    {"MuscleCount_static", new MemberRegisterInfo { Name = "MuscleCount", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanTrait_Wrap.G_MuscleCount
#endif
                    }},
                    {"MuscleName_static", new MemberRegisterInfo { Name = "MuscleName", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanTrait_Wrap.G_MuscleName
#endif
                    }},
                    {"BoneCount_static", new MemberRegisterInfo { Name = "BoneCount", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanTrait_Wrap.G_BoneCount
#endif
                    }},
                    {"BoneName_static", new MemberRegisterInfo { Name = "BoneName", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanTrait_Wrap.G_BoneName
#endif
                    }},
                    {"RequiredBoneCount_static", new MemberRegisterInfo { Name = "RequiredBoneCount", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HumanTrait_Wrap.G_RequiredBoneCount
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Motion_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"averageDuration", new MemberRegisterInfo { Name = "averageDuration", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Motion_Wrap.G_averageDuration
#endif
                    }},
                    {"averageAngularSpeed", new MemberRegisterInfo { Name = "averageAngularSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Motion_Wrap.G_averageAngularSpeed
#endif
                    }},
                    {"averageSpeed", new MemberRegisterInfo { Name = "averageSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Motion_Wrap.G_averageSpeed
#endif
                    }},
                    {"apparentSpeed", new MemberRegisterInfo { Name = "apparentSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Motion_Wrap.G_apparentSpeed
#endif
                    }},
                    {"isLooping", new MemberRegisterInfo { Name = "isLooping", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Motion_Wrap.G_isLooping
#endif
                    }},
                    {"legacy", new MemberRegisterInfo { Name = "legacy", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Motion_Wrap.G_legacy
#endif
                    }},
                    {"isHumanMotion", new MemberRegisterInfo { Name = "isHumanMotion", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Motion_Wrap.G_isHumanMotion
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RuntimeAnimatorController_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"animationClips", new MemberRegisterInfo { Name = "animationClips", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RuntimeAnimatorController_Wrap.G_animationClips
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AssetBundle_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"Contains", new MemberRegisterInfo { Name = "Contains", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundle_Wrap.M_Contains
#endif
                    }},
                    {"LoadAsset", new MemberRegisterInfo { Name = "LoadAsset", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundle_Wrap.M_LoadAsset
#endif
                    }},
                    {"LoadAssetAsync", new MemberRegisterInfo { Name = "LoadAssetAsync", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundle_Wrap.M_LoadAssetAsync
#endif
                    }},
                    {"LoadAssetWithSubAssets", new MemberRegisterInfo { Name = "LoadAssetWithSubAssets", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundle_Wrap.M_LoadAssetWithSubAssets
#endif
                    }},
                    {"LoadAssetWithSubAssetsAsync", new MemberRegisterInfo { Name = "LoadAssetWithSubAssetsAsync", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundle_Wrap.M_LoadAssetWithSubAssetsAsync
#endif
                    }},
                    {"LoadAllAssets", new MemberRegisterInfo { Name = "LoadAllAssets", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundle_Wrap.M_LoadAllAssets
#endif
                    }},
                    {"LoadAllAssetsAsync", new MemberRegisterInfo { Name = "LoadAllAssetsAsync", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundle_Wrap.M_LoadAllAssetsAsync
#endif
                    }},
                    {"Unload", new MemberRegisterInfo { Name = "Unload", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundle_Wrap.M_Unload
#endif
                    }},
                    {"GetAllAssetNames", new MemberRegisterInfo { Name = "GetAllAssetNames", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundle_Wrap.M_GetAllAssetNames
#endif
                    }},
                    {"GetAllScenePaths", new MemberRegisterInfo { Name = "GetAllScenePaths", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundle_Wrap.M_GetAllScenePaths
#endif
                    }},
                    {"isStreamedSceneAssetBundle", new MemberRegisterInfo { Name = "isStreamedSceneAssetBundle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AssetBundle_Wrap.G_isStreamedSceneAssetBundle
#endif
                    }},
                    {"UnloadAllAssetBundles_static", new MemberRegisterInfo { Name = "UnloadAllAssetBundles", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundle_Wrap.F_UnloadAllAssetBundles
#endif
                    }},
                    {"GetAllLoadedAssetBundles_static", new MemberRegisterInfo { Name = "GetAllLoadedAssetBundles", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundle_Wrap.F_GetAllLoadedAssetBundles
#endif
                    }},
                    {"LoadFromFileAsync_static", new MemberRegisterInfo { Name = "LoadFromFileAsync", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundle_Wrap.F_LoadFromFileAsync
#endif
                    }},
                    {"LoadFromFile_static", new MemberRegisterInfo { Name = "LoadFromFile", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundle_Wrap.F_LoadFromFile
#endif
                    }},
                    {"LoadFromMemoryAsync_static", new MemberRegisterInfo { Name = "LoadFromMemoryAsync", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundle_Wrap.F_LoadFromMemoryAsync
#endif
                    }},
                    {"LoadFromMemory_static", new MemberRegisterInfo { Name = "LoadFromMemory", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundle_Wrap.F_LoadFromMemory
#endif
                    }},
                    {"LoadFromStreamAsync_static", new MemberRegisterInfo { Name = "LoadFromStreamAsync", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundle_Wrap.F_LoadFromStreamAsync
#endif
                    }},
                    {"LoadFromStream_static", new MemberRegisterInfo { Name = "LoadFromStream", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundle_Wrap.F_LoadFromStream
#endif
                    }},
                    {"SetAssetBundleDecryptKey_static", new MemberRegisterInfo { Name = "SetAssetBundleDecryptKey", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundle_Wrap.F_SetAssetBundleDecryptKey
#endif
                    }},
                    {"RecompressAssetBundleAsync_static", new MemberRegisterInfo { Name = "RecompressAssetBundleAsync", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundle_Wrap.F_RecompressAssetBundleAsync
#endif
                    }},
                    {"memoryBudgetKB_static", new MemberRegisterInfo { Name = "memoryBudgetKB", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AssetBundle_Wrap.G_memoryBudgetKB, PropertySetter = UnityEngine_AssetBundle_Wrap.S_memoryBudgetKB
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AssetBundleCreateRequest_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AssetBundleCreateRequest_Wrap.Constructor
#endif
                    }},
                    {"assetBundle", new MemberRegisterInfo { Name = "assetBundle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AssetBundleCreateRequest_Wrap.G_assetBundle
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AssetBundleManifest_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"GetAllAssetBundles", new MemberRegisterInfo { Name = "GetAllAssetBundles", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundleManifest_Wrap.M_GetAllAssetBundles
#endif
                    }},
                    {"GetAllAssetBundlesWithVariant", new MemberRegisterInfo { Name = "GetAllAssetBundlesWithVariant", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundleManifest_Wrap.M_GetAllAssetBundlesWithVariant
#endif
                    }},
                    {"GetAssetBundleHash", new MemberRegisterInfo { Name = "GetAssetBundleHash", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundleManifest_Wrap.M_GetAssetBundleHash
#endif
                    }},
                    {"GetDirectDependencies", new MemberRegisterInfo { Name = "GetDirectDependencies", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundleManifest_Wrap.M_GetDirectDependencies
#endif
                    }},
                    {"GetAllDependencies", new MemberRegisterInfo { Name = "GetAllDependencies", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AssetBundleManifest_Wrap.M_GetAllDependencies
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AssetBundleRecompressOperation_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AssetBundleRecompressOperation_Wrap.Constructor
#endif
                    }},
                    {"humanReadableResult", new MemberRegisterInfo { Name = "humanReadableResult", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AssetBundleRecompressOperation_Wrap.G_humanReadableResult
#endif
                    }},
                    {"inputPath", new MemberRegisterInfo { Name = "inputPath", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AssetBundleRecompressOperation_Wrap.G_inputPath
#endif
                    }},
                    {"outputPath", new MemberRegisterInfo { Name = "outputPath", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AssetBundleRecompressOperation_Wrap.G_outputPath
#endif
                    }},
                    {"result", new MemberRegisterInfo { Name = "result", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AssetBundleRecompressOperation_Wrap.G_result
#endif
                    }},
                    {"success", new MemberRegisterInfo { Name = "success", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AssetBundleRecompressOperation_Wrap.G_success
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AssetBundleRequest_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AssetBundleRequest_Wrap.Constructor
#endif
                    }},
                    {"asset", new MemberRegisterInfo { Name = "asset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AssetBundleRequest_Wrap.G_asset
#endif
                    }},
                    {"allAssets", new MemberRegisterInfo { Name = "allAssets", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AssetBundleRequest_Wrap.G_allAssets
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_BuildCompression_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_BuildCompression_Wrap.Constructor
#endif
                    }},
                    {"compression", new MemberRegisterInfo { Name = "compression", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BuildCompression_Wrap.G_compression
#endif
                    }},
                    {"level", new MemberRegisterInfo { Name = "level", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BuildCompression_Wrap.G_level
#endif
                    }},
                    {"blockSize", new MemberRegisterInfo { Name = "blockSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BuildCompression_Wrap.G_blockSize
#endif
                    }},
                    {"enableProtect", new MemberRegisterInfo { Name = "enableProtect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BuildCompression_Wrap.G_enableProtect
#endif
                    }},
                    {"Uncompressed_static", new MemberRegisterInfo { Name = "Uncompressed", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BuildCompression_Wrap.G_Uncompressed
#endif
                    }},
                    {"LZ4_static", new MemberRegisterInfo { Name = "LZ4", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BuildCompression_Wrap.G_LZ4
#endif
                    }},
                    {"LZMA_static", new MemberRegisterInfo { Name = "LZMA", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BuildCompression_Wrap.G_LZMA
#endif
                    }},
                    {"UncompressedRuntime_static", new MemberRegisterInfo { Name = "UncompressedRuntime", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BuildCompression_Wrap.G_UncompressedRuntime
#endif
                    }},
                    {"LZ4Runtime_static", new MemberRegisterInfo { Name = "LZ4Runtime", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BuildCompression_Wrap.G_LZ4Runtime
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AudioSettings_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AudioSettings_Wrap.Constructor
#endif
                    }},
                    {"add_OnAudioConfigurationChanged_static", new MemberRegisterInfo { Name = "add_OnAudioConfigurationChanged", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSettings_Wrap.A_OnAudioConfigurationChanged
#endif
                    }},
                    {"remove_OnAudioConfigurationChanged_static", new MemberRegisterInfo { Name = "remove_OnAudioConfigurationChanged", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSettings_Wrap.R_OnAudioConfigurationChanged
#endif
                    }},
                    {"GetDSPBufferSize_static", new MemberRegisterInfo { Name = "GetDSPBufferSize", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSettings_Wrap.F_GetDSPBufferSize
#endif
                    }},
                    {"GetSpatializerPluginNames_static", new MemberRegisterInfo { Name = "GetSpatializerPluginNames", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"GetSpatializerPluginName_static", new MemberRegisterInfo { Name = "GetSpatializerPluginName", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSettings_Wrap.F_GetSpatializerPluginName
#endif
                    }},
                    {"SetSpatializerPluginName_static", new MemberRegisterInfo { Name = "SetSpatializerPluginName", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"GetConfiguration_static", new MemberRegisterInfo { Name = "GetConfiguration", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSettings_Wrap.F_GetConfiguration
#endif
                    }},
                    {"Reset_static", new MemberRegisterInfo { Name = "Reset", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSettings_Wrap.F_Reset
#endif
                    }},
                    {"driverCapabilities_static", new MemberRegisterInfo { Name = "driverCapabilities", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSettings_Wrap.G_driverCapabilities
#endif
                    }},
                    {"speakerMode_static", new MemberRegisterInfo { Name = "speakerMode", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSettings_Wrap.G_speakerMode, PropertySetter = UnityEngine_AudioSettings_Wrap.S_speakerMode
#endif
                    }},
                    {"dspTime_static", new MemberRegisterInfo { Name = "dspTime", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSettings_Wrap.G_dspTime
#endif
                    }},
                    {"outputSampleRate_static", new MemberRegisterInfo { Name = "outputSampleRate", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSettings_Wrap.G_outputSampleRate, PropertySetter = UnityEngine_AudioSettings_Wrap.S_outputSampleRate
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AudioSettings_Mobile_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"add_OnMuteStateChanged_static", new MemberRegisterInfo { Name = "add_OnMuteStateChanged", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSettings_Mobile_Wrap.A_OnMuteStateChanged
#endif
                    }},
                    {"remove_OnMuteStateChanged_static", new MemberRegisterInfo { Name = "remove_OnMuteStateChanged", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSettings_Mobile_Wrap.R_OnMuteStateChanged
#endif
                    }},
                    {"StartAudioOutput_static", new MemberRegisterInfo { Name = "StartAudioOutput", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSettings_Mobile_Wrap.F_StartAudioOutput
#endif
                    }},
                    {"StopAudioOutput_static", new MemberRegisterInfo { Name = "StopAudioOutput", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSettings_Mobile_Wrap.F_StopAudioOutput
#endif
                    }},
                    {"muteState_static", new MemberRegisterInfo { Name = "muteState", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSettings_Mobile_Wrap.G_muteState
#endif
                    }},
                    {"stopAudioOutputOnMute_static", new MemberRegisterInfo { Name = "stopAudioOutputOnMute", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSettings_Mobile_Wrap.G_stopAudioOutputOnMute, PropertySetter = UnityEngine_AudioSettings_Mobile_Wrap.S_stopAudioOutputOnMute
#endif
                    }},
                    {"audioOutputStarted_static", new MemberRegisterInfo { Name = "audioOutputStarted", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSettings_Mobile_Wrap.G_audioOutputStarted
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AudioSource_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AudioSource_Wrap.Constructor
#endif
                    }},
                    {"PlayOnGamepad", new MemberRegisterInfo { Name = "PlayOnGamepad", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_PlayOnGamepad
#endif
                    }},
                    {"DisableGamepadOutput", new MemberRegisterInfo { Name = "DisableGamepadOutput", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_DisableGamepadOutput
#endif
                    }},
                    {"SetGamepadSpeakerMixLevel", new MemberRegisterInfo { Name = "SetGamepadSpeakerMixLevel", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_SetGamepadSpeakerMixLevel
#endif
                    }},
                    {"SetGamepadSpeakerMixLevelDefault", new MemberRegisterInfo { Name = "SetGamepadSpeakerMixLevelDefault", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_SetGamepadSpeakerMixLevelDefault
#endif
                    }},
                    {"SetGamepadSpeakerRestrictedAudio", new MemberRegisterInfo { Name = "SetGamepadSpeakerRestrictedAudio", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_SetGamepadSpeakerRestrictedAudio
#endif
                    }},
                    {"Play", new MemberRegisterInfo { Name = "Play", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_Play
#endif
                    }},
                    {"PlayDelayed", new MemberRegisterInfo { Name = "PlayDelayed", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_PlayDelayed
#endif
                    }},
                    {"PlayScheduled", new MemberRegisterInfo { Name = "PlayScheduled", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_PlayScheduled
#endif
                    }},
                    {"PlayOneShot", new MemberRegisterInfo { Name = "PlayOneShot", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_PlayOneShot
#endif
                    }},
                    {"SetScheduledStartTime", new MemberRegisterInfo { Name = "SetScheduledStartTime", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_SetScheduledStartTime
#endif
                    }},
                    {"SetScheduledEndTime", new MemberRegisterInfo { Name = "SetScheduledEndTime", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_SetScheduledEndTime
#endif
                    }},
                    {"Stop", new MemberRegisterInfo { Name = "Stop", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_Stop
#endif
                    }},
                    {"Pause", new MemberRegisterInfo { Name = "Pause", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_Pause
#endif
                    }},
                    {"UnPause", new MemberRegisterInfo { Name = "UnPause", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_UnPause
#endif
                    }},
                    {"SetCustomCurve", new MemberRegisterInfo { Name = "SetCustomCurve", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_SetCustomCurve
#endif
                    }},
                    {"GetCustomCurve", new MemberRegisterInfo { Name = "GetCustomCurve", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_GetCustomCurve
#endif
                    }},
                    {"GetOutputData", new MemberRegisterInfo { Name = "GetOutputData", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_GetOutputData
#endif
                    }},
                    {"GetSpectrumData", new MemberRegisterInfo { Name = "GetSpectrumData", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_GetSpectrumData
#endif
                    }},
                    {"SetSpatializerFloat", new MemberRegisterInfo { Name = "SetSpatializerFloat", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_SetSpatializerFloat
#endif
                    }},
                    {"GetSpatializerFloat", new MemberRegisterInfo { Name = "GetSpatializerFloat", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_GetSpatializerFloat
#endif
                    }},
                    {"GetAmbisonicDecoderFloat", new MemberRegisterInfo { Name = "GetAmbisonicDecoderFloat", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_GetAmbisonicDecoderFloat
#endif
                    }},
                    {"SetAmbisonicDecoderFloat", new MemberRegisterInfo { Name = "SetAmbisonicDecoderFloat", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.M_SetAmbisonicDecoderFloat
#endif
                    }},
                    {"volume", new MemberRegisterInfo { Name = "volume", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_volume, PropertySetter = UnityEngine_AudioSource_Wrap.S_volume
#endif
                    }},
                    {"pitch", new MemberRegisterInfo { Name = "pitch", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_pitch, PropertySetter = UnityEngine_AudioSource_Wrap.S_pitch
#endif
                    }},
                    {"time", new MemberRegisterInfo { Name = "time", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_time, PropertySetter = UnityEngine_AudioSource_Wrap.S_time
#endif
                    }},
                    {"timeSamples", new MemberRegisterInfo { Name = "timeSamples", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_timeSamples, PropertySetter = UnityEngine_AudioSource_Wrap.S_timeSamples
#endif
                    }},
                    {"clip", new MemberRegisterInfo { Name = "clip", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_clip, PropertySetter = UnityEngine_AudioSource_Wrap.S_clip
#endif
                    }},
                    {"outputAudioMixerGroup", new MemberRegisterInfo { Name = "outputAudioMixerGroup", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_outputAudioMixerGroup, PropertySetter = UnityEngine_AudioSource_Wrap.S_outputAudioMixerGroup
#endif
                    }},
                    {"gamepadSpeakerOutputType", new MemberRegisterInfo { Name = "gamepadSpeakerOutputType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_gamepadSpeakerOutputType, PropertySetter = UnityEngine_AudioSource_Wrap.S_gamepadSpeakerOutputType
#endif
                    }},
                    {"isPlaying", new MemberRegisterInfo { Name = "isPlaying", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_isPlaying
#endif
                    }},
                    {"isVirtual", new MemberRegisterInfo { Name = "isVirtual", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_isVirtual
#endif
                    }},
                    {"loop", new MemberRegisterInfo { Name = "loop", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_loop, PropertySetter = UnityEngine_AudioSource_Wrap.S_loop
#endif
                    }},
                    {"ignoreListenerVolume", new MemberRegisterInfo { Name = "ignoreListenerVolume", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_ignoreListenerVolume, PropertySetter = UnityEngine_AudioSource_Wrap.S_ignoreListenerVolume
#endif
                    }},
                    {"playOnAwake", new MemberRegisterInfo { Name = "playOnAwake", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_playOnAwake, PropertySetter = UnityEngine_AudioSource_Wrap.S_playOnAwake
#endif
                    }},
                    {"ignoreListenerPause", new MemberRegisterInfo { Name = "ignoreListenerPause", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_ignoreListenerPause, PropertySetter = UnityEngine_AudioSource_Wrap.S_ignoreListenerPause
#endif
                    }},
                    {"velocityUpdateMode", new MemberRegisterInfo { Name = "velocityUpdateMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_velocityUpdateMode, PropertySetter = UnityEngine_AudioSource_Wrap.S_velocityUpdateMode
#endif
                    }},
                    {"panStereo", new MemberRegisterInfo { Name = "panStereo", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_panStereo, PropertySetter = UnityEngine_AudioSource_Wrap.S_panStereo
#endif
                    }},
                    {"spatialBlend", new MemberRegisterInfo { Name = "spatialBlend", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_spatialBlend, PropertySetter = UnityEngine_AudioSource_Wrap.S_spatialBlend
#endif
                    }},
                    {"spatialize", new MemberRegisterInfo { Name = "spatialize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_spatialize, PropertySetter = UnityEngine_AudioSource_Wrap.S_spatialize
#endif
                    }},
                    {"spatializePostEffects", new MemberRegisterInfo { Name = "spatializePostEffects", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_spatializePostEffects, PropertySetter = UnityEngine_AudioSource_Wrap.S_spatializePostEffects
#endif
                    }},
                    {"reverbZoneMix", new MemberRegisterInfo { Name = "reverbZoneMix", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_reverbZoneMix, PropertySetter = UnityEngine_AudioSource_Wrap.S_reverbZoneMix
#endif
                    }},
                    {"bypassEffects", new MemberRegisterInfo { Name = "bypassEffects", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_bypassEffects, PropertySetter = UnityEngine_AudioSource_Wrap.S_bypassEffects
#endif
                    }},
                    {"bypassListenerEffects", new MemberRegisterInfo { Name = "bypassListenerEffects", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_bypassListenerEffects, PropertySetter = UnityEngine_AudioSource_Wrap.S_bypassListenerEffects
#endif
                    }},
                    {"bypassReverbZones", new MemberRegisterInfo { Name = "bypassReverbZones", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_bypassReverbZones, PropertySetter = UnityEngine_AudioSource_Wrap.S_bypassReverbZones
#endif
                    }},
                    {"dopplerLevel", new MemberRegisterInfo { Name = "dopplerLevel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_dopplerLevel, PropertySetter = UnityEngine_AudioSource_Wrap.S_dopplerLevel
#endif
                    }},
                    {"spread", new MemberRegisterInfo { Name = "spread", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_spread, PropertySetter = UnityEngine_AudioSource_Wrap.S_spread
#endif
                    }},
                    {"priority", new MemberRegisterInfo { Name = "priority", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_priority, PropertySetter = UnityEngine_AudioSource_Wrap.S_priority
#endif
                    }},
                    {"mute", new MemberRegisterInfo { Name = "mute", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_mute, PropertySetter = UnityEngine_AudioSource_Wrap.S_mute
#endif
                    }},
                    {"minDistance", new MemberRegisterInfo { Name = "minDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_minDistance, PropertySetter = UnityEngine_AudioSource_Wrap.S_minDistance
#endif
                    }},
                    {"maxDistance", new MemberRegisterInfo { Name = "maxDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_maxDistance, PropertySetter = UnityEngine_AudioSource_Wrap.S_maxDistance
#endif
                    }},
                    {"rolloffMode", new MemberRegisterInfo { Name = "rolloffMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioSource_Wrap.G_rolloffMode, PropertySetter = UnityEngine_AudioSource_Wrap.S_rolloffMode
#endif
                    }},
                    {"GamepadSpeakerSupportsOutputType_static", new MemberRegisterInfo { Name = "GamepadSpeakerSupportsOutputType", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.F_GamepadSpeakerSupportsOutputType
#endif
                    }},
                    {"PlayClipAtPoint_static", new MemberRegisterInfo { Name = "PlayClipAtPoint", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioSource_Wrap.F_PlayClipAtPoint
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AudioLowPassFilter_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AudioLowPassFilter_Wrap.Constructor
#endif
                    }},
                    {"customCutoffCurve", new MemberRegisterInfo { Name = "customCutoffCurve", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioLowPassFilter_Wrap.G_customCutoffCurve, PropertySetter = UnityEngine_AudioLowPassFilter_Wrap.S_customCutoffCurve
#endif
                    }},
                    {"cutoffFrequency", new MemberRegisterInfo { Name = "cutoffFrequency", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioLowPassFilter_Wrap.G_cutoffFrequency, PropertySetter = UnityEngine_AudioLowPassFilter_Wrap.S_cutoffFrequency
#endif
                    }},
                    {"lowpassResonanceQ", new MemberRegisterInfo { Name = "lowpassResonanceQ", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioLowPassFilter_Wrap.G_lowpassResonanceQ, PropertySetter = UnityEngine_AudioLowPassFilter_Wrap.S_lowpassResonanceQ
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AudioHighPassFilter_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AudioHighPassFilter_Wrap.Constructor
#endif
                    }},
                    {"cutoffFrequency", new MemberRegisterInfo { Name = "cutoffFrequency", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioHighPassFilter_Wrap.G_cutoffFrequency, PropertySetter = UnityEngine_AudioHighPassFilter_Wrap.S_cutoffFrequency
#endif
                    }},
                    {"highpassResonanceQ", new MemberRegisterInfo { Name = "highpassResonanceQ", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioHighPassFilter_Wrap.G_highpassResonanceQ, PropertySetter = UnityEngine_AudioHighPassFilter_Wrap.S_highpassResonanceQ
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AudioReverbFilter_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AudioReverbFilter_Wrap.Constructor
#endif
                    }},
                    {"reverbPreset", new MemberRegisterInfo { Name = "reverbPreset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbFilter_Wrap.G_reverbPreset, PropertySetter = UnityEngine_AudioReverbFilter_Wrap.S_reverbPreset
#endif
                    }},
                    {"dryLevel", new MemberRegisterInfo { Name = "dryLevel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbFilter_Wrap.G_dryLevel, PropertySetter = UnityEngine_AudioReverbFilter_Wrap.S_dryLevel
#endif
                    }},
                    {"room", new MemberRegisterInfo { Name = "room", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbFilter_Wrap.G_room, PropertySetter = UnityEngine_AudioReverbFilter_Wrap.S_room
#endif
                    }},
                    {"roomHF", new MemberRegisterInfo { Name = "roomHF", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbFilter_Wrap.G_roomHF, PropertySetter = UnityEngine_AudioReverbFilter_Wrap.S_roomHF
#endif
                    }},
                    {"decayTime", new MemberRegisterInfo { Name = "decayTime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbFilter_Wrap.G_decayTime, PropertySetter = UnityEngine_AudioReverbFilter_Wrap.S_decayTime
#endif
                    }},
                    {"decayHFRatio", new MemberRegisterInfo { Name = "decayHFRatio", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbFilter_Wrap.G_decayHFRatio, PropertySetter = UnityEngine_AudioReverbFilter_Wrap.S_decayHFRatio
#endif
                    }},
                    {"reflectionsLevel", new MemberRegisterInfo { Name = "reflectionsLevel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbFilter_Wrap.G_reflectionsLevel, PropertySetter = UnityEngine_AudioReverbFilter_Wrap.S_reflectionsLevel
#endif
                    }},
                    {"reflectionsDelay", new MemberRegisterInfo { Name = "reflectionsDelay", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbFilter_Wrap.G_reflectionsDelay, PropertySetter = UnityEngine_AudioReverbFilter_Wrap.S_reflectionsDelay
#endif
                    }},
                    {"reverbLevel", new MemberRegisterInfo { Name = "reverbLevel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbFilter_Wrap.G_reverbLevel, PropertySetter = UnityEngine_AudioReverbFilter_Wrap.S_reverbLevel
#endif
                    }},
                    {"reverbDelay", new MemberRegisterInfo { Name = "reverbDelay", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbFilter_Wrap.G_reverbDelay, PropertySetter = UnityEngine_AudioReverbFilter_Wrap.S_reverbDelay
#endif
                    }},
                    {"diffusion", new MemberRegisterInfo { Name = "diffusion", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbFilter_Wrap.G_diffusion, PropertySetter = UnityEngine_AudioReverbFilter_Wrap.S_diffusion
#endif
                    }},
                    {"density", new MemberRegisterInfo { Name = "density", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbFilter_Wrap.G_density, PropertySetter = UnityEngine_AudioReverbFilter_Wrap.S_density
#endif
                    }},
                    {"hfReference", new MemberRegisterInfo { Name = "hfReference", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbFilter_Wrap.G_hfReference, PropertySetter = UnityEngine_AudioReverbFilter_Wrap.S_hfReference
#endif
                    }},
                    {"roomLF", new MemberRegisterInfo { Name = "roomLF", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbFilter_Wrap.G_roomLF, PropertySetter = UnityEngine_AudioReverbFilter_Wrap.S_roomLF
#endif
                    }},
                    {"lfReference", new MemberRegisterInfo { Name = "lfReference", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbFilter_Wrap.G_lfReference, PropertySetter = UnityEngine_AudioReverbFilter_Wrap.S_lfReference
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AudioConfiguration_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AudioConfiguration_Wrap.Constructor
#endif
                    }},
                    {"speakerMode", new MemberRegisterInfo { Name = "speakerMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioConfiguration_Wrap.G_speakerMode, PropertySetter = UnityEngine_AudioConfiguration_Wrap.S_speakerMode
#endif
                    }},
                    {"dspBufferSize", new MemberRegisterInfo { Name = "dspBufferSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioConfiguration_Wrap.G_dspBufferSize, PropertySetter = UnityEngine_AudioConfiguration_Wrap.S_dspBufferSize
#endif
                    }},
                    {"sampleRate", new MemberRegisterInfo { Name = "sampleRate", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioConfiguration_Wrap.G_sampleRate, PropertySetter = UnityEngine_AudioConfiguration_Wrap.S_sampleRate
#endif
                    }},
                    {"numRealVoices", new MemberRegisterInfo { Name = "numRealVoices", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioConfiguration_Wrap.G_numRealVoices, PropertySetter = UnityEngine_AudioConfiguration_Wrap.S_numRealVoices
#endif
                    }},
                    {"numVirtualVoices", new MemberRegisterInfo { Name = "numVirtualVoices", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioConfiguration_Wrap.G_numVirtualVoices, PropertySetter = UnityEngine_AudioConfiguration_Wrap.S_numVirtualVoices
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AudioClip_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"LoadAudioData", new MemberRegisterInfo { Name = "LoadAudioData", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioClip_Wrap.M_LoadAudioData
#endif
                    }},
                    {"UnloadAudioData", new MemberRegisterInfo { Name = "UnloadAudioData", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioClip_Wrap.M_UnloadAudioData
#endif
                    }},
                    {"GetData", new MemberRegisterInfo { Name = "GetData", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioClip_Wrap.M_GetData
#endif
                    }},
                    {"SetData", new MemberRegisterInfo { Name = "SetData", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioClip_Wrap.M_SetData
#endif
                    }},
                    {"length", new MemberRegisterInfo { Name = "length", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioClip_Wrap.G_length
#endif
                    }},
                    {"samples", new MemberRegisterInfo { Name = "samples", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioClip_Wrap.G_samples
#endif
                    }},
                    {"channels", new MemberRegisterInfo { Name = "channels", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioClip_Wrap.G_channels
#endif
                    }},
                    {"frequency", new MemberRegisterInfo { Name = "frequency", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioClip_Wrap.G_frequency
#endif
                    }},
                    {"loadType", new MemberRegisterInfo { Name = "loadType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioClip_Wrap.G_loadType
#endif
                    }},
                    {"preloadAudioData", new MemberRegisterInfo { Name = "preloadAudioData", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioClip_Wrap.G_preloadAudioData
#endif
                    }},
                    {"ambisonic", new MemberRegisterInfo { Name = "ambisonic", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioClip_Wrap.G_ambisonic
#endif
                    }},
                    {"loadInBackground", new MemberRegisterInfo { Name = "loadInBackground", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioClip_Wrap.G_loadInBackground
#endif
                    }},
                    {"loadState", new MemberRegisterInfo { Name = "loadState", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioClip_Wrap.G_loadState
#endif
                    }},
                    {"Create_static", new MemberRegisterInfo { Name = "Create", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioClip_Wrap.F_Create
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AudioBehaviour_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AudioBehaviour_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AudioListener_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AudioListener_Wrap.Constructor
#endif
                    }},
                    {"velocityUpdateMode", new MemberRegisterInfo { Name = "velocityUpdateMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioListener_Wrap.G_velocityUpdateMode, PropertySetter = UnityEngine_AudioListener_Wrap.S_velocityUpdateMode
#endif
                    }},
                    {"GetOutputData_static", new MemberRegisterInfo { Name = "GetOutputData", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioListener_Wrap.F_GetOutputData
#endif
                    }},
                    {"GetSpectrumData_static", new MemberRegisterInfo { Name = "GetSpectrumData", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioListener_Wrap.F_GetSpectrumData
#endif
                    }},
                    {"volume_static", new MemberRegisterInfo { Name = "volume", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioListener_Wrap.G_volume, PropertySetter = UnityEngine_AudioListener_Wrap.S_volume
#endif
                    }},
                    {"pause_static", new MemberRegisterInfo { Name = "pause", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioListener_Wrap.G_pause, PropertySetter = UnityEngine_AudioListener_Wrap.S_pause
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AudioReverbZone_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AudioReverbZone_Wrap.Constructor
#endif
                    }},
                    {"minDistance", new MemberRegisterInfo { Name = "minDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbZone_Wrap.G_minDistance, PropertySetter = UnityEngine_AudioReverbZone_Wrap.S_minDistance
#endif
                    }},
                    {"maxDistance", new MemberRegisterInfo { Name = "maxDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbZone_Wrap.G_maxDistance, PropertySetter = UnityEngine_AudioReverbZone_Wrap.S_maxDistance
#endif
                    }},
                    {"reverbPreset", new MemberRegisterInfo { Name = "reverbPreset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbZone_Wrap.G_reverbPreset, PropertySetter = UnityEngine_AudioReverbZone_Wrap.S_reverbPreset
#endif
                    }},
                    {"room", new MemberRegisterInfo { Name = "room", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbZone_Wrap.G_room, PropertySetter = UnityEngine_AudioReverbZone_Wrap.S_room
#endif
                    }},
                    {"roomHF", new MemberRegisterInfo { Name = "roomHF", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbZone_Wrap.G_roomHF, PropertySetter = UnityEngine_AudioReverbZone_Wrap.S_roomHF
#endif
                    }},
                    {"roomLF", new MemberRegisterInfo { Name = "roomLF", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbZone_Wrap.G_roomLF, PropertySetter = UnityEngine_AudioReverbZone_Wrap.S_roomLF
#endif
                    }},
                    {"decayTime", new MemberRegisterInfo { Name = "decayTime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbZone_Wrap.G_decayTime, PropertySetter = UnityEngine_AudioReverbZone_Wrap.S_decayTime
#endif
                    }},
                    {"decayHFRatio", new MemberRegisterInfo { Name = "decayHFRatio", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbZone_Wrap.G_decayHFRatio, PropertySetter = UnityEngine_AudioReverbZone_Wrap.S_decayHFRatio
#endif
                    }},
                    {"reflections", new MemberRegisterInfo { Name = "reflections", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbZone_Wrap.G_reflections, PropertySetter = UnityEngine_AudioReverbZone_Wrap.S_reflections
#endif
                    }},
                    {"reflectionsDelay", new MemberRegisterInfo { Name = "reflectionsDelay", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbZone_Wrap.G_reflectionsDelay, PropertySetter = UnityEngine_AudioReverbZone_Wrap.S_reflectionsDelay
#endif
                    }},
                    {"reverb", new MemberRegisterInfo { Name = "reverb", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbZone_Wrap.G_reverb, PropertySetter = UnityEngine_AudioReverbZone_Wrap.S_reverb
#endif
                    }},
                    {"reverbDelay", new MemberRegisterInfo { Name = "reverbDelay", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbZone_Wrap.G_reverbDelay, PropertySetter = UnityEngine_AudioReverbZone_Wrap.S_reverbDelay
#endif
                    }},
                    {"HFReference", new MemberRegisterInfo { Name = "HFReference", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbZone_Wrap.G_HFReference, PropertySetter = UnityEngine_AudioReverbZone_Wrap.S_HFReference
#endif
                    }},
                    {"LFReference", new MemberRegisterInfo { Name = "LFReference", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbZone_Wrap.G_LFReference, PropertySetter = UnityEngine_AudioReverbZone_Wrap.S_LFReference
#endif
                    }},
                    {"diffusion", new MemberRegisterInfo { Name = "diffusion", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbZone_Wrap.G_diffusion, PropertySetter = UnityEngine_AudioReverbZone_Wrap.S_diffusion
#endif
                    }},
                    {"density", new MemberRegisterInfo { Name = "density", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioReverbZone_Wrap.G_density, PropertySetter = UnityEngine_AudioReverbZone_Wrap.S_density
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AudioDistortionFilter_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AudioDistortionFilter_Wrap.Constructor
#endif
                    }},
                    {"distortionLevel", new MemberRegisterInfo { Name = "distortionLevel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioDistortionFilter_Wrap.G_distortionLevel, PropertySetter = UnityEngine_AudioDistortionFilter_Wrap.S_distortionLevel
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AudioEchoFilter_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AudioEchoFilter_Wrap.Constructor
#endif
                    }},
                    {"delay", new MemberRegisterInfo { Name = "delay", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioEchoFilter_Wrap.G_delay, PropertySetter = UnityEngine_AudioEchoFilter_Wrap.S_delay
#endif
                    }},
                    {"decayRatio", new MemberRegisterInfo { Name = "decayRatio", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioEchoFilter_Wrap.G_decayRatio, PropertySetter = UnityEngine_AudioEchoFilter_Wrap.S_decayRatio
#endif
                    }},
                    {"dryMix", new MemberRegisterInfo { Name = "dryMix", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioEchoFilter_Wrap.G_dryMix, PropertySetter = UnityEngine_AudioEchoFilter_Wrap.S_dryMix
#endif
                    }},
                    {"wetMix", new MemberRegisterInfo { Name = "wetMix", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioEchoFilter_Wrap.G_wetMix, PropertySetter = UnityEngine_AudioEchoFilter_Wrap.S_wetMix
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AudioChorusFilter_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AudioChorusFilter_Wrap.Constructor
#endif
                    }},
                    {"dryMix", new MemberRegisterInfo { Name = "dryMix", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioChorusFilter_Wrap.G_dryMix, PropertySetter = UnityEngine_AudioChorusFilter_Wrap.S_dryMix
#endif
                    }},
                    {"wetMix1", new MemberRegisterInfo { Name = "wetMix1", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioChorusFilter_Wrap.G_wetMix1, PropertySetter = UnityEngine_AudioChorusFilter_Wrap.S_wetMix1
#endif
                    }},
                    {"wetMix2", new MemberRegisterInfo { Name = "wetMix2", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioChorusFilter_Wrap.G_wetMix2, PropertySetter = UnityEngine_AudioChorusFilter_Wrap.S_wetMix2
#endif
                    }},
                    {"wetMix3", new MemberRegisterInfo { Name = "wetMix3", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioChorusFilter_Wrap.G_wetMix3, PropertySetter = UnityEngine_AudioChorusFilter_Wrap.S_wetMix3
#endif
                    }},
                    {"delay", new MemberRegisterInfo { Name = "delay", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioChorusFilter_Wrap.G_delay, PropertySetter = UnityEngine_AudioChorusFilter_Wrap.S_delay
#endif
                    }},
                    {"rate", new MemberRegisterInfo { Name = "rate", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioChorusFilter_Wrap.G_rate, PropertySetter = UnityEngine_AudioChorusFilter_Wrap.S_rate
#endif
                    }},
                    {"depth", new MemberRegisterInfo { Name = "depth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AudioChorusFilter_Wrap.G_depth, PropertySetter = UnityEngine_AudioChorusFilter_Wrap.S_depth
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Microphone_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Microphone_Wrap.Constructor
#endif
                    }},
                    {"Start_static", new MemberRegisterInfo { Name = "Start", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Microphone_Wrap.F_Start
#endif
                    }},
                    {"End_static", new MemberRegisterInfo { Name = "End", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Microphone_Wrap.F_End
#endif
                    }},
                    {"IsRecording_static", new MemberRegisterInfo { Name = "IsRecording", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Microphone_Wrap.F_IsRecording
#endif
                    }},
                    {"GetPosition_static", new MemberRegisterInfo { Name = "GetPosition", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Microphone_Wrap.F_GetPosition
#endif
                    }},
                    {"GetDeviceCaps_static", new MemberRegisterInfo { Name = "GetDeviceCaps", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Microphone_Wrap.F_GetDeviceCaps
#endif
                    }},
                    {"devices_static", new MemberRegisterInfo { Name = "devices", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Microphone_Wrap.G_devices
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AudioRenderer_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AudioRenderer_Wrap.Constructor
#endif
                    }},
                    {"Start_static", new MemberRegisterInfo { Name = "Start", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioRenderer_Wrap.F_Start
#endif
                    }},
                    {"Stop_static", new MemberRegisterInfo { Name = "Stop", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioRenderer_Wrap.F_Stop
#endif
                    }},
                    {"GetSampleCountForCaptureFrame_static", new MemberRegisterInfo { Name = "GetSampleCountForCaptureFrame", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioRenderer_Wrap.F_GetSampleCountForCaptureFrame
#endif
                    }},
                    {"Render_static", new MemberRegisterInfo { Name = "Render", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AudioRenderer_Wrap.F_Render
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_WebCamDevice_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_WebCamDevice_Wrap.Constructor
#endif
                    }},
                    {"name", new MemberRegisterInfo { Name = "name", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WebCamDevice_Wrap.G_name
#endif
                    }},
                    {"isFrontFacing", new MemberRegisterInfo { Name = "isFrontFacing", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WebCamDevice_Wrap.G_isFrontFacing
#endif
                    }},
                    {"kind", new MemberRegisterInfo { Name = "kind", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WebCamDevice_Wrap.G_kind
#endif
                    }},
                    {"depthCameraName", new MemberRegisterInfo { Name = "depthCameraName", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WebCamDevice_Wrap.G_depthCameraName
#endif
                    }},
                    {"isAutoFocusPointSupported", new MemberRegisterInfo { Name = "isAutoFocusPointSupported", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WebCamDevice_Wrap.G_isAutoFocusPointSupported
#endif
                    }},
                    {"availableResolutions", new MemberRegisterInfo { Name = "availableResolutions", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WebCamDevice_Wrap.G_availableResolutions
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_WebCamTexture_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_WebCamTexture_Wrap.Constructor
#endif
                    }},
                    {"Play", new MemberRegisterInfo { Name = "Play", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_WebCamTexture_Wrap.M_Play
#endif
                    }},
                    {"Pause", new MemberRegisterInfo { Name = "Pause", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_WebCamTexture_Wrap.M_Pause
#endif
                    }},
                    {"Stop", new MemberRegisterInfo { Name = "Stop", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_WebCamTexture_Wrap.M_Stop
#endif
                    }},
                    {"GetPixel", new MemberRegisterInfo { Name = "GetPixel", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_WebCamTexture_Wrap.M_GetPixel
#endif
                    }},
                    {"GetPixels", new MemberRegisterInfo { Name = "GetPixels", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_WebCamTexture_Wrap.M_GetPixels
#endif
                    }},
                    {"GetPixels32", new MemberRegisterInfo { Name = "GetPixels32", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_WebCamTexture_Wrap.M_GetPixels32
#endif
                    }},
                    {"isPlaying", new MemberRegisterInfo { Name = "isPlaying", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WebCamTexture_Wrap.G_isPlaying
#endif
                    }},
                    {"deviceName", new MemberRegisterInfo { Name = "deviceName", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WebCamTexture_Wrap.G_deviceName, PropertySetter = UnityEngine_WebCamTexture_Wrap.S_deviceName
#endif
                    }},
                    {"requestedFPS", new MemberRegisterInfo { Name = "requestedFPS", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WebCamTexture_Wrap.G_requestedFPS, PropertySetter = UnityEngine_WebCamTexture_Wrap.S_requestedFPS
#endif
                    }},
                    {"requestedWidth", new MemberRegisterInfo { Name = "requestedWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WebCamTexture_Wrap.G_requestedWidth, PropertySetter = UnityEngine_WebCamTexture_Wrap.S_requestedWidth
#endif
                    }},
                    {"requestedHeight", new MemberRegisterInfo { Name = "requestedHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WebCamTexture_Wrap.G_requestedHeight, PropertySetter = UnityEngine_WebCamTexture_Wrap.S_requestedHeight
#endif
                    }},
                    {"videoRotationAngle", new MemberRegisterInfo { Name = "videoRotationAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WebCamTexture_Wrap.G_videoRotationAngle
#endif
                    }},
                    {"videoVerticallyMirrored", new MemberRegisterInfo { Name = "videoVerticallyMirrored", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WebCamTexture_Wrap.G_videoVerticallyMirrored
#endif
                    }},
                    {"didUpdateThisFrame", new MemberRegisterInfo { Name = "didUpdateThisFrame", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WebCamTexture_Wrap.G_didUpdateThisFrame
#endif
                    }},
                    {"autoFocusPoint", new MemberRegisterInfo { Name = "autoFocusPoint", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WebCamTexture_Wrap.G_autoFocusPoint, PropertySetter = UnityEngine_WebCamTexture_Wrap.S_autoFocusPoint
#endif
                    }},
                    {"isDepth", new MemberRegisterInfo { Name = "isDepth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WebCamTexture_Wrap.G_isDepth
#endif
                    }},
                    {"devices_static", new MemberRegisterInfo { Name = "devices", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WebCamTexture_Wrap.G_devices
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ClothSphereColliderPair_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ClothSphereColliderPair_Wrap.Constructor
#endif
                    }},
                    {"first", new MemberRegisterInfo { Name = "first", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ClothSphereColliderPair_Wrap.G_first, PropertySetter = UnityEngine_ClothSphereColliderPair_Wrap.S_first
#endif
                    }},
                    {"second", new MemberRegisterInfo { Name = "second", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ClothSphereColliderPair_Wrap.G_second, PropertySetter = UnityEngine_ClothSphereColliderPair_Wrap.S_second
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ClothSkinningCoefficient_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ClothSkinningCoefficient_Wrap.Constructor
#endif
                    }},
                    {"maxDistance", new MemberRegisterInfo { Name = "maxDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ClothSkinningCoefficient_Wrap.G_maxDistance, PropertySetter = UnityEngine_ClothSkinningCoefficient_Wrap.S_maxDistance
#endif
                    }},
                    {"collisionSphereDistance", new MemberRegisterInfo { Name = "collisionSphereDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ClothSkinningCoefficient_Wrap.G_collisionSphereDistance, PropertySetter = UnityEngine_ClothSkinningCoefficient_Wrap.S_collisionSphereDistance
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Cloth_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Cloth_Wrap.Constructor
#endif
                    }},
                    {"ClearTransformMotion", new MemberRegisterInfo { Name = "ClearTransformMotion", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cloth_Wrap.M_ClearTransformMotion
#endif
                    }},
                    {"GetSelfAndInterCollisionIndices", new MemberRegisterInfo { Name = "GetSelfAndInterCollisionIndices", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cloth_Wrap.M_GetSelfAndInterCollisionIndices
#endif
                    }},
                    {"SetSelfAndInterCollisionIndices", new MemberRegisterInfo { Name = "SetSelfAndInterCollisionIndices", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cloth_Wrap.M_SetSelfAndInterCollisionIndices
#endif
                    }},
                    {"GetVirtualParticleIndices", new MemberRegisterInfo { Name = "GetVirtualParticleIndices", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cloth_Wrap.M_GetVirtualParticleIndices
#endif
                    }},
                    {"SetVirtualParticleIndices", new MemberRegisterInfo { Name = "SetVirtualParticleIndices", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cloth_Wrap.M_SetVirtualParticleIndices
#endif
                    }},
                    {"GetVirtualParticleWeights", new MemberRegisterInfo { Name = "GetVirtualParticleWeights", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cloth_Wrap.M_GetVirtualParticleWeights
#endif
                    }},
                    {"SetVirtualParticleWeights", new MemberRegisterInfo { Name = "SetVirtualParticleWeights", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cloth_Wrap.M_SetVirtualParticleWeights
#endif
                    }},
                    {"SetEnabledFading", new MemberRegisterInfo { Name = "SetEnabledFading", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cloth_Wrap.M_SetEnabledFading
#endif
                    }},
                    {"vertices", new MemberRegisterInfo { Name = "vertices", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_vertices
#endif
                    }},
                    {"normals", new MemberRegisterInfo { Name = "normals", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_normals
#endif
                    }},
                    {"coefficients", new MemberRegisterInfo { Name = "coefficients", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_coefficients, PropertySetter = UnityEngine_Cloth_Wrap.S_coefficients
#endif
                    }},
                    {"capsuleColliders", new MemberRegisterInfo { Name = "capsuleColliders", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_capsuleColliders, PropertySetter = UnityEngine_Cloth_Wrap.S_capsuleColliders
#endif
                    }},
                    {"sphereColliders", new MemberRegisterInfo { Name = "sphereColliders", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_sphereColliders, PropertySetter = UnityEngine_Cloth_Wrap.S_sphereColliders
#endif
                    }},
                    {"sleepThreshold", new MemberRegisterInfo { Name = "sleepThreshold", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_sleepThreshold, PropertySetter = UnityEngine_Cloth_Wrap.S_sleepThreshold
#endif
                    }},
                    {"bendingStiffness", new MemberRegisterInfo { Name = "bendingStiffness", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_bendingStiffness, PropertySetter = UnityEngine_Cloth_Wrap.S_bendingStiffness
#endif
                    }},
                    {"stretchingStiffness", new MemberRegisterInfo { Name = "stretchingStiffness", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_stretchingStiffness, PropertySetter = UnityEngine_Cloth_Wrap.S_stretchingStiffness
#endif
                    }},
                    {"damping", new MemberRegisterInfo { Name = "damping", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_damping, PropertySetter = UnityEngine_Cloth_Wrap.S_damping
#endif
                    }},
                    {"externalAcceleration", new MemberRegisterInfo { Name = "externalAcceleration", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_externalAcceleration, PropertySetter = UnityEngine_Cloth_Wrap.S_externalAcceleration
#endif
                    }},
                    {"randomAcceleration", new MemberRegisterInfo { Name = "randomAcceleration", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_randomAcceleration, PropertySetter = UnityEngine_Cloth_Wrap.S_randomAcceleration
#endif
                    }},
                    {"useGravity", new MemberRegisterInfo { Name = "useGravity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_useGravity, PropertySetter = UnityEngine_Cloth_Wrap.S_useGravity
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_enabled, PropertySetter = UnityEngine_Cloth_Wrap.S_enabled
#endif
                    }},
                    {"friction", new MemberRegisterInfo { Name = "friction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_friction, PropertySetter = UnityEngine_Cloth_Wrap.S_friction
#endif
                    }},
                    {"collisionMassScale", new MemberRegisterInfo { Name = "collisionMassScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_collisionMassScale, PropertySetter = UnityEngine_Cloth_Wrap.S_collisionMassScale
#endif
                    }},
                    {"enableContinuousCollision", new MemberRegisterInfo { Name = "enableContinuousCollision", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_enableContinuousCollision, PropertySetter = UnityEngine_Cloth_Wrap.S_enableContinuousCollision
#endif
                    }},
                    {"useVirtualParticles", new MemberRegisterInfo { Name = "useVirtualParticles", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_useVirtualParticles, PropertySetter = UnityEngine_Cloth_Wrap.S_useVirtualParticles
#endif
                    }},
                    {"worldVelocityScale", new MemberRegisterInfo { Name = "worldVelocityScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_worldVelocityScale, PropertySetter = UnityEngine_Cloth_Wrap.S_worldVelocityScale
#endif
                    }},
                    {"worldAccelerationScale", new MemberRegisterInfo { Name = "worldAccelerationScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_worldAccelerationScale, PropertySetter = UnityEngine_Cloth_Wrap.S_worldAccelerationScale
#endif
                    }},
                    {"clothSolverFrequency", new MemberRegisterInfo { Name = "clothSolverFrequency", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_clothSolverFrequency, PropertySetter = UnityEngine_Cloth_Wrap.S_clothSolverFrequency
#endif
                    }},
                    {"useTethers", new MemberRegisterInfo { Name = "useTethers", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_useTethers, PropertySetter = UnityEngine_Cloth_Wrap.S_useTethers
#endif
                    }},
                    {"stiffnessFrequency", new MemberRegisterInfo { Name = "stiffnessFrequency", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_stiffnessFrequency, PropertySetter = UnityEngine_Cloth_Wrap.S_stiffnessFrequency
#endif
                    }},
                    {"selfCollisionDistance", new MemberRegisterInfo { Name = "selfCollisionDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_selfCollisionDistance, PropertySetter = UnityEngine_Cloth_Wrap.S_selfCollisionDistance
#endif
                    }},
                    {"selfCollisionStiffness", new MemberRegisterInfo { Name = "selfCollisionStiffness", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cloth_Wrap.G_selfCollisionStiffness, PropertySetter = UnityEngine_Cloth_Wrap.S_selfCollisionStiffness
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ClusterSerialization_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"SaveTimeManagerState_static", new MemberRegisterInfo { Name = "SaveTimeManagerState", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ClusterSerialization_Wrap.F_SaveTimeManagerState
#endif
                    }},
                    {"RestoreTimeManagerState_static", new MemberRegisterInfo { Name = "RestoreTimeManagerState", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ClusterSerialization_Wrap.F_RestoreTimeManagerState
#endif
                    }},
                    {"SaveInputManagerState_static", new MemberRegisterInfo { Name = "SaveInputManagerState", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ClusterSerialization_Wrap.F_SaveInputManagerState
#endif
                    }},
                    {"RestoreInputManagerState_static", new MemberRegisterInfo { Name = "RestoreInputManagerState", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ClusterSerialization_Wrap.F_RestoreInputManagerState
#endif
                    }},
                    {"SaveClusterInputState_static", new MemberRegisterInfo { Name = "SaveClusterInputState", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ClusterSerialization_Wrap.F_SaveClusterInputState
#endif
                    }},
                    {"RestoreClusterInputState_static", new MemberRegisterInfo { Name = "RestoreClusterInputState", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ClusterSerialization_Wrap.F_RestoreClusterInputState
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SortingLayer_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SortingLayer_Wrap.Constructor
#endif
                    }},
                    {"id", new MemberRegisterInfo { Name = "id", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SortingLayer_Wrap.G_id
#endif
                    }},
                    {"name", new MemberRegisterInfo { Name = "name", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SortingLayer_Wrap.G_name
#endif
                    }},
                    {"value", new MemberRegisterInfo { Name = "value", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SortingLayer_Wrap.G_value
#endif
                    }},
                    {"GetLayerValueFromID_static", new MemberRegisterInfo { Name = "GetLayerValueFromID", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SortingLayer_Wrap.F_GetLayerValueFromID
#endif
                    }},
                    {"GetLayerValueFromName_static", new MemberRegisterInfo { Name = "GetLayerValueFromName", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SortingLayer_Wrap.F_GetLayerValueFromName
#endif
                    }},
                    {"NameToID_static", new MemberRegisterInfo { Name = "NameToID", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SortingLayer_Wrap.F_NameToID
#endif
                    }},
                    {"IDToName_static", new MemberRegisterInfo { Name = "IDToName", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SortingLayer_Wrap.F_IDToName
#endif
                    }},
                    {"IsValid_static", new MemberRegisterInfo { Name = "IsValid", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SortingLayer_Wrap.F_IsValid
#endif
                    }},
                    {"layers_static", new MemberRegisterInfo { Name = "layers", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SortingLayer_Wrap.G_layers
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Keyframe_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Keyframe_Wrap.Constructor
#endif
                    }},
                    {"time", new MemberRegisterInfo { Name = "time", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Keyframe_Wrap.G_time, PropertySetter = UnityEngine_Keyframe_Wrap.S_time
#endif
                    }},
                    {"value", new MemberRegisterInfo { Name = "value", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Keyframe_Wrap.G_value, PropertySetter = UnityEngine_Keyframe_Wrap.S_value
#endif
                    }},
                    {"inTangent", new MemberRegisterInfo { Name = "inTangent", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Keyframe_Wrap.G_inTangent, PropertySetter = UnityEngine_Keyframe_Wrap.S_inTangent
#endif
                    }},
                    {"outTangent", new MemberRegisterInfo { Name = "outTangent", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Keyframe_Wrap.G_outTangent, PropertySetter = UnityEngine_Keyframe_Wrap.S_outTangent
#endif
                    }},
                    {"inWeight", new MemberRegisterInfo { Name = "inWeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Keyframe_Wrap.G_inWeight, PropertySetter = UnityEngine_Keyframe_Wrap.S_inWeight
#endif
                    }},
                    {"outWeight", new MemberRegisterInfo { Name = "outWeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Keyframe_Wrap.G_outWeight, PropertySetter = UnityEngine_Keyframe_Wrap.S_outWeight
#endif
                    }},
                    {"weightedMode", new MemberRegisterInfo { Name = "weightedMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Keyframe_Wrap.G_weightedMode, PropertySetter = UnityEngine_Keyframe_Wrap.S_weightedMode
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AnimationCurve_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AnimationCurve_Wrap.Constructor
#endif
                    }},
                    {"Evaluate", new MemberRegisterInfo { Name = "Evaluate", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimationCurve_Wrap.M_Evaluate
#endif
                    }},
                    {"AddKey", new MemberRegisterInfo { Name = "AddKey", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimationCurve_Wrap.M_AddKey
#endif
                    }},
                    {"MoveKey", new MemberRegisterInfo { Name = "MoveKey", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimationCurve_Wrap.M_MoveKey
#endif
                    }},
                    {"RemoveKey", new MemberRegisterInfo { Name = "RemoveKey", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimationCurve_Wrap.M_RemoveKey
#endif
                    }},
                    {"SmoothTangents", new MemberRegisterInfo { Name = "SmoothTangents", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimationCurve_Wrap.M_SmoothTangents
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimationCurve_Wrap.M_Equals
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimationCurve_Wrap.M_GetHashCode
#endif
                    }},
                    {"keys", new MemberRegisterInfo { Name = "keys", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationCurve_Wrap.G_keys, PropertySetter = UnityEngine_AnimationCurve_Wrap.S_keys
#endif
                    }},
                    {"get_Item", new MemberRegisterInfo { Name = "get_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimationCurve_Wrap.GetItem
#endif
                    }},
                    {"length", new MemberRegisterInfo { Name = "length", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationCurve_Wrap.G_length
#endif
                    }},
                    {"preWrapMode", new MemberRegisterInfo { Name = "preWrapMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationCurve_Wrap.G_preWrapMode, PropertySetter = UnityEngine_AnimationCurve_Wrap.S_preWrapMode
#endif
                    }},
                    {"postWrapMode", new MemberRegisterInfo { Name = "postWrapMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnimationCurve_Wrap.G_postWrapMode, PropertySetter = UnityEngine_AnimationCurve_Wrap.S_postWrapMode
#endif
                    }},
                    {"Constant_static", new MemberRegisterInfo { Name = "Constant", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimationCurve_Wrap.F_Constant
#endif
                    }},
                    {"Linear_static", new MemberRegisterInfo { Name = "Linear", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimationCurve_Wrap.F_Linear
#endif
                    }},
                    {"EaseInOut_static", new MemberRegisterInfo { Name = "EaseInOut", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AnimationCurve_Wrap.F_EaseInOut
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Application_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Application_Wrap.Constructor
#endif
                    }},
                    {"add_lowMemory_static", new MemberRegisterInfo { Name = "add_lowMemory", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.A_lowMemory
#endif
                    }},
                    {"remove_lowMemory_static", new MemberRegisterInfo { Name = "remove_lowMemory", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.R_lowMemory
#endif
                    }},
                    {"add_logMessageReceived_static", new MemberRegisterInfo { Name = "add_logMessageReceived", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.A_logMessageReceived
#endif
                    }},
                    {"remove_logMessageReceived_static", new MemberRegisterInfo { Name = "remove_logMessageReceived", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.R_logMessageReceived
#endif
                    }},
                    {"add_logMessageReceivedThreaded_static", new MemberRegisterInfo { Name = "add_logMessageReceivedThreaded", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.A_logMessageReceivedThreaded
#endif
                    }},
                    {"remove_logMessageReceivedThreaded_static", new MemberRegisterInfo { Name = "remove_logMessageReceivedThreaded", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.R_logMessageReceivedThreaded
#endif
                    }},
                    {"add_onBeforeRender_static", new MemberRegisterInfo { Name = "add_onBeforeRender", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.A_onBeforeRender
#endif
                    }},
                    {"remove_onBeforeRender_static", new MemberRegisterInfo { Name = "remove_onBeforeRender", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.R_onBeforeRender
#endif
                    }},
                    {"add_focusChanged_static", new MemberRegisterInfo { Name = "add_focusChanged", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.A_focusChanged
#endif
                    }},
                    {"remove_focusChanged_static", new MemberRegisterInfo { Name = "remove_focusChanged", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.R_focusChanged
#endif
                    }},
                    {"add_deepLinkActivated_static", new MemberRegisterInfo { Name = "add_deepLinkActivated", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.A_deepLinkActivated
#endif
                    }},
                    {"remove_deepLinkActivated_static", new MemberRegisterInfo { Name = "remove_deepLinkActivated", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.R_deepLinkActivated
#endif
                    }},
                    {"add_wantsToQuit_static", new MemberRegisterInfo { Name = "add_wantsToQuit", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.A_wantsToQuit
#endif
                    }},
                    {"remove_wantsToQuit_static", new MemberRegisterInfo { Name = "remove_wantsToQuit", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.R_wantsToQuit
#endif
                    }},
                    {"add_quitting_static", new MemberRegisterInfo { Name = "add_quitting", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.A_quitting
#endif
                    }},
                    {"remove_quitting_static", new MemberRegisterInfo { Name = "remove_quitting", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.R_quitting
#endif
                    }},
                    {"add_unloading_static", new MemberRegisterInfo { Name = "add_unloading", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.A_unloading
#endif
                    }},
                    {"remove_unloading_static", new MemberRegisterInfo { Name = "remove_unloading", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.R_unloading
#endif
                    }},
                    {"Quit_static", new MemberRegisterInfo { Name = "Quit", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.F_Quit
#endif
                    }},
                    {"Unload_static", new MemberRegisterInfo { Name = "Unload", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.F_Unload
#endif
                    }},
                    {"CanStreamedLevelBeLoaded_static", new MemberRegisterInfo { Name = "CanStreamedLevelBeLoaded", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.F_CanStreamedLevelBeLoaded
#endif
                    }},
                    {"IsPlaying_static", new MemberRegisterInfo { Name = "IsPlaying", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.F_IsPlaying
#endif
                    }},
                    {"GetBuildTags_static", new MemberRegisterInfo { Name = "GetBuildTags", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.F_GetBuildTags
#endif
                    }},
                    {"SetBuildTags_static", new MemberRegisterInfo { Name = "SetBuildTags", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.F_SetBuildTags
#endif
                    }},
                    {"HasProLicense_static", new MemberRegisterInfo { Name = "HasProLicense", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.F_HasProLicense
#endif
                    }},
                    {"RequestAdvertisingIdentifierAsync_static", new MemberRegisterInfo { Name = "RequestAdvertisingIdentifierAsync", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.F_RequestAdvertisingIdentifierAsync
#endif
                    }},
                    {"OpenURL_static", new MemberRegisterInfo { Name = "OpenURL", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.F_OpenURL
#endif
                    }},
                    {"GetStackTraceLogType_static", new MemberRegisterInfo { Name = "GetStackTraceLogType", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.F_GetStackTraceLogType
#endif
                    }},
                    {"SetStackTraceLogType_static", new MemberRegisterInfo { Name = "SetStackTraceLogType", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.F_SetStackTraceLogType
#endif
                    }},
                    {"RequestUserAuthorization_static", new MemberRegisterInfo { Name = "RequestUserAuthorization", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.F_RequestUserAuthorization
#endif
                    }},
                    {"HasUserAuthorization_static", new MemberRegisterInfo { Name = "HasUserAuthorization", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Application_Wrap.F_HasUserAuthorization
#endif
                    }},
                    {"isPlaying_static", new MemberRegisterInfo { Name = "isPlaying", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_isPlaying
#endif
                    }},
                    {"isFocused_static", new MemberRegisterInfo { Name = "isFocused", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_isFocused
#endif
                    }},
                    {"buildGUID_static", new MemberRegisterInfo { Name = "buildGUID", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_buildGUID
#endif
                    }},
                    {"runInBackground_static", new MemberRegisterInfo { Name = "runInBackground", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_runInBackground, PropertySetter = UnityEngine_Application_Wrap.S_runInBackground
#endif
                    }},
                    {"isBatchMode_static", new MemberRegisterInfo { Name = "isBatchMode", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_isBatchMode
#endif
                    }},
                    {"dataPath_static", new MemberRegisterInfo { Name = "dataPath", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_dataPath
#endif
                    }},
                    {"streamingAssetsPath_static", new MemberRegisterInfo { Name = "streamingAssetsPath", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_streamingAssetsPath
#endif
                    }},
                    {"persistentDataPath_static", new MemberRegisterInfo { Name = "persistentDataPath", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_persistentDataPath
#endif
                    }},
                    {"temporaryCachePath_static", new MemberRegisterInfo { Name = "temporaryCachePath", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_temporaryCachePath
#endif
                    }},
                    {"absoluteURL_static", new MemberRegisterInfo { Name = "absoluteURL", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_absoluteURL
#endif
                    }},
                    {"unityVersion_static", new MemberRegisterInfo { Name = "unityVersion", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_unityVersion
#endif
                    }},
                    {"version_static", new MemberRegisterInfo { Name = "version", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_version
#endif
                    }},
                    {"installerName_static", new MemberRegisterInfo { Name = "installerName", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_installerName
#endif
                    }},
                    {"identifier_static", new MemberRegisterInfo { Name = "identifier", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_identifier
#endif
                    }},
                    {"installMode_static", new MemberRegisterInfo { Name = "installMode", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_installMode
#endif
                    }},
                    {"sandboxType_static", new MemberRegisterInfo { Name = "sandboxType", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_sandboxType
#endif
                    }},
                    {"productName_static", new MemberRegisterInfo { Name = "productName", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_productName
#endif
                    }},
                    {"companyName_static", new MemberRegisterInfo { Name = "companyName", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_companyName
#endif
                    }},
                    {"cloudProjectId_static", new MemberRegisterInfo { Name = "cloudProjectId", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_cloudProjectId
#endif
                    }},
                    {"targetFrameRate_static", new MemberRegisterInfo { Name = "targetFrameRate", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_targetFrameRate, PropertySetter = UnityEngine_Application_Wrap.S_targetFrameRate
#endif
                    }},
                    {"consoleLogPath_static", new MemberRegisterInfo { Name = "consoleLogPath", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_consoleLogPath
#endif
                    }},
                    {"backgroundLoadingPriority_static", new MemberRegisterInfo { Name = "backgroundLoadingPriority", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_backgroundLoadingPriority, PropertySetter = UnityEngine_Application_Wrap.S_backgroundLoadingPriority
#endif
                    }},
                    {"genuine_static", new MemberRegisterInfo { Name = "genuine", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_genuine
#endif
                    }},
                    {"genuineCheckAvailable_static", new MemberRegisterInfo { Name = "genuineCheckAvailable", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_genuineCheckAvailable
#endif
                    }},
                    {"platform_static", new MemberRegisterInfo { Name = "platform", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_platform
#endif
                    }},
                    {"isMobilePlatform_static", new MemberRegisterInfo { Name = "isMobilePlatform", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_isMobilePlatform
#endif
                    }},
                    {"isConsolePlatform_static", new MemberRegisterInfo { Name = "isConsolePlatform", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_isConsolePlatform
#endif
                    }},
                    {"systemLanguage_static", new MemberRegisterInfo { Name = "systemLanguage", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_systemLanguage
#endif
                    }},
                    {"internetReachability_static", new MemberRegisterInfo { Name = "internetReachability", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_internetReachability
#endif
                    }},
                    {"isEditor_static", new MemberRegisterInfo { Name = "isEditor", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Application_Wrap.G_isEditor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CachedAssetBundle_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_CachedAssetBundle_Wrap.Constructor
#endif
                    }},
                    {"name", new MemberRegisterInfo { Name = "name", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CachedAssetBundle_Wrap.G_name, PropertySetter = UnityEngine_CachedAssetBundle_Wrap.S_name
#endif
                    }},
                    {"hash", new MemberRegisterInfo { Name = "hash", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CachedAssetBundle_Wrap.G_hash, PropertySetter = UnityEngine_CachedAssetBundle_Wrap.S_hash
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Cache_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Cache_Wrap.Constructor
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cache_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cache_Wrap.O_op_Inequality
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cache_Wrap.M_GetHashCode
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cache_Wrap.M_Equals
#endif
                    }},
                    {"ClearCache", new MemberRegisterInfo { Name = "ClearCache", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cache_Wrap.M_ClearCache
#endif
                    }},
                    {"valid", new MemberRegisterInfo { Name = "valid", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cache_Wrap.G_valid
#endif
                    }},
                    {"ready", new MemberRegisterInfo { Name = "ready", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cache_Wrap.G_ready
#endif
                    }},
                    {"readOnly", new MemberRegisterInfo { Name = "readOnly", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cache_Wrap.G_readOnly
#endif
                    }},
                    {"path", new MemberRegisterInfo { Name = "path", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cache_Wrap.G_path
#endif
                    }},
                    {"index", new MemberRegisterInfo { Name = "index", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cache_Wrap.G_index
#endif
                    }},
                    {"spaceFree", new MemberRegisterInfo { Name = "spaceFree", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cache_Wrap.G_spaceFree
#endif
                    }},
                    {"maximumAvailableStorageSpace", new MemberRegisterInfo { Name = "maximumAvailableStorageSpace", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cache_Wrap.G_maximumAvailableStorageSpace, PropertySetter = UnityEngine_Cache_Wrap.S_maximumAvailableStorageSpace
#endif
                    }},
                    {"spaceOccupied", new MemberRegisterInfo { Name = "spaceOccupied", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cache_Wrap.G_spaceOccupied
#endif
                    }},
                    {"expirationDelay", new MemberRegisterInfo { Name = "expirationDelay", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cache_Wrap.G_expirationDelay, PropertySetter = UnityEngine_Cache_Wrap.S_expirationDelay
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Camera_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Camera_Wrap.Constructor
#endif
                    }},
                    {"Reset", new MemberRegisterInfo { Name = "Reset", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_Reset
#endif
                    }},
                    {"ResetTransparencySortSettings", new MemberRegisterInfo { Name = "ResetTransparencySortSettings", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_ResetTransparencySortSettings
#endif
                    }},
                    {"ResetAspect", new MemberRegisterInfo { Name = "ResetAspect", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_ResetAspect
#endif
                    }},
                    {"ResetCullingMatrix", new MemberRegisterInfo { Name = "ResetCullingMatrix", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_ResetCullingMatrix
#endif
                    }},
                    {"SetReplacementShader", new MemberRegisterInfo { Name = "SetReplacementShader", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_SetReplacementShader
#endif
                    }},
                    {"ResetReplacementShader", new MemberRegisterInfo { Name = "ResetReplacementShader", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_ResetReplacementShader
#endif
                    }},
                    {"GetGateFittedFieldOfView", new MemberRegisterInfo { Name = "GetGateFittedFieldOfView", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_GetGateFittedFieldOfView
#endif
                    }},
                    {"GetGateFittedLensShift", new MemberRegisterInfo { Name = "GetGateFittedLensShift", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_GetGateFittedLensShift
#endif
                    }},
                    {"SetTargetBuffers", new MemberRegisterInfo { Name = "SetTargetBuffers", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_SetTargetBuffers
#endif
                    }},
                    {"ResetWorldToCameraMatrix", new MemberRegisterInfo { Name = "ResetWorldToCameraMatrix", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_ResetWorldToCameraMatrix
#endif
                    }},
                    {"ResetProjectionMatrix", new MemberRegisterInfo { Name = "ResetProjectionMatrix", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_ResetProjectionMatrix
#endif
                    }},
                    {"CalculateObliqueMatrix", new MemberRegisterInfo { Name = "CalculateObliqueMatrix", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_CalculateObliqueMatrix
#endif
                    }},
                    {"WorldToScreenPoint", new MemberRegisterInfo { Name = "WorldToScreenPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_WorldToScreenPoint
#endif
                    }},
                    {"WorldToViewportPoint", new MemberRegisterInfo { Name = "WorldToViewportPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_WorldToViewportPoint
#endif
                    }},
                    {"ViewportToWorldPoint", new MemberRegisterInfo { Name = "ViewportToWorldPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_ViewportToWorldPoint
#endif
                    }},
                    {"ScreenToWorldPoint", new MemberRegisterInfo { Name = "ScreenToWorldPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_ScreenToWorldPoint
#endif
                    }},
                    {"ScreenToViewportPoint", new MemberRegisterInfo { Name = "ScreenToViewportPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_ScreenToViewportPoint
#endif
                    }},
                    {"ViewportToScreenPoint", new MemberRegisterInfo { Name = "ViewportToScreenPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_ViewportToScreenPoint
#endif
                    }},
                    {"ViewportPointToRay", new MemberRegisterInfo { Name = "ViewportPointToRay", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_ViewportPointToRay
#endif
                    }},
                    {"ScreenPointToRay", new MemberRegisterInfo { Name = "ScreenPointToRay", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_ScreenPointToRay
#endif
                    }},
                    {"CalculateFrustumCorners", new MemberRegisterInfo { Name = "CalculateFrustumCorners", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_CalculateFrustumCorners
#endif
                    }},
                    {"GetStereoNonJitteredProjectionMatrix", new MemberRegisterInfo { Name = "GetStereoNonJitteredProjectionMatrix", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_GetStereoNonJitteredProjectionMatrix
#endif
                    }},
                    {"GetStereoViewMatrix", new MemberRegisterInfo { Name = "GetStereoViewMatrix", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_GetStereoViewMatrix
#endif
                    }},
                    {"CopyStereoDeviceProjectionMatrixToNonJittered", new MemberRegisterInfo { Name = "CopyStereoDeviceProjectionMatrixToNonJittered", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_CopyStereoDeviceProjectionMatrixToNonJittered
#endif
                    }},
                    {"GetStereoProjectionMatrix", new MemberRegisterInfo { Name = "GetStereoProjectionMatrix", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_GetStereoProjectionMatrix
#endif
                    }},
                    {"SetStereoProjectionMatrix", new MemberRegisterInfo { Name = "SetStereoProjectionMatrix", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_SetStereoProjectionMatrix
#endif
                    }},
                    {"ResetStereoProjectionMatrices", new MemberRegisterInfo { Name = "ResetStereoProjectionMatrices", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_ResetStereoProjectionMatrices
#endif
                    }},
                    {"SetStereoViewMatrix", new MemberRegisterInfo { Name = "SetStereoViewMatrix", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_SetStereoViewMatrix
#endif
                    }},
                    {"ResetStereoViewMatrices", new MemberRegisterInfo { Name = "ResetStereoViewMatrices", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_ResetStereoViewMatrices
#endif
                    }},
                    {"RenderToCubemap", new MemberRegisterInfo { Name = "RenderToCubemap", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_RenderToCubemap
#endif
                    }},
                    {"Render", new MemberRegisterInfo { Name = "Render", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_Render
#endif
                    }},
                    {"RenderWithShader", new MemberRegisterInfo { Name = "RenderWithShader", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_RenderWithShader
#endif
                    }},
                    {"RenderDontRestore", new MemberRegisterInfo { Name = "RenderDontRestore", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_RenderDontRestore
#endif
                    }},
                    {"SubmitRenderRequests", new MemberRegisterInfo { Name = "SubmitRenderRequests", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_SubmitRenderRequests
#endif
                    }},
                    {"CopyFrom", new MemberRegisterInfo { Name = "CopyFrom", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_CopyFrom
#endif
                    }},
                    {"RemoveCommandBuffers", new MemberRegisterInfo { Name = "RemoveCommandBuffers", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_RemoveCommandBuffers
#endif
                    }},
                    {"RemoveAllCommandBuffers", new MemberRegisterInfo { Name = "RemoveAllCommandBuffers", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_RemoveAllCommandBuffers
#endif
                    }},
                    {"AddCommandBuffer", new MemberRegisterInfo { Name = "AddCommandBuffer", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_AddCommandBuffer
#endif
                    }},
                    {"AddCommandBufferAsync", new MemberRegisterInfo { Name = "AddCommandBufferAsync", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_AddCommandBufferAsync
#endif
                    }},
                    {"RemoveCommandBuffer", new MemberRegisterInfo { Name = "RemoveCommandBuffer", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_RemoveCommandBuffer
#endif
                    }},
                    {"GetCommandBuffers", new MemberRegisterInfo { Name = "GetCommandBuffers", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_GetCommandBuffers
#endif
                    }},
                    {"TryGetCullingParameters", new MemberRegisterInfo { Name = "TryGetCullingParameters", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.M_TryGetCullingParameters
#endif
                    }},
                    {"nearClipPlane", new MemberRegisterInfo { Name = "nearClipPlane", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_nearClipPlane, PropertySetter = UnityEngine_Camera_Wrap.S_nearClipPlane
#endif
                    }},
                    {"farClipPlane", new MemberRegisterInfo { Name = "farClipPlane", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_farClipPlane, PropertySetter = UnityEngine_Camera_Wrap.S_farClipPlane
#endif
                    }},
                    {"fieldOfView", new MemberRegisterInfo { Name = "fieldOfView", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_fieldOfView, PropertySetter = UnityEngine_Camera_Wrap.S_fieldOfView
#endif
                    }},
                    {"renderingPath", new MemberRegisterInfo { Name = "renderingPath", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_renderingPath, PropertySetter = UnityEngine_Camera_Wrap.S_renderingPath
#endif
                    }},
                    {"actualRenderingPath", new MemberRegisterInfo { Name = "actualRenderingPath", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_actualRenderingPath
#endif
                    }},
                    {"allowHDR", new MemberRegisterInfo { Name = "allowHDR", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_allowHDR, PropertySetter = UnityEngine_Camera_Wrap.S_allowHDR
#endif
                    }},
                    {"allowMSAA", new MemberRegisterInfo { Name = "allowMSAA", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_allowMSAA, PropertySetter = UnityEngine_Camera_Wrap.S_allowMSAA
#endif
                    }},
                    {"allowDynamicResolution", new MemberRegisterInfo { Name = "allowDynamicResolution", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_allowDynamicResolution, PropertySetter = UnityEngine_Camera_Wrap.S_allowDynamicResolution
#endif
                    }},
                    {"forceIntoRenderTexture", new MemberRegisterInfo { Name = "forceIntoRenderTexture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_forceIntoRenderTexture, PropertySetter = UnityEngine_Camera_Wrap.S_forceIntoRenderTexture
#endif
                    }},
                    {"orthographicSize", new MemberRegisterInfo { Name = "orthographicSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_orthographicSize, PropertySetter = UnityEngine_Camera_Wrap.S_orthographicSize
#endif
                    }},
                    {"orthographic", new MemberRegisterInfo { Name = "orthographic", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_orthographic, PropertySetter = UnityEngine_Camera_Wrap.S_orthographic
#endif
                    }},
                    {"opaqueSortMode", new MemberRegisterInfo { Name = "opaqueSortMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_opaqueSortMode, PropertySetter = UnityEngine_Camera_Wrap.S_opaqueSortMode
#endif
                    }},
                    {"transparencySortMode", new MemberRegisterInfo { Name = "transparencySortMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_transparencySortMode, PropertySetter = UnityEngine_Camera_Wrap.S_transparencySortMode
#endif
                    }},
                    {"transparencySortAxis", new MemberRegisterInfo { Name = "transparencySortAxis", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_transparencySortAxis, PropertySetter = UnityEngine_Camera_Wrap.S_transparencySortAxis
#endif
                    }},
                    {"depth", new MemberRegisterInfo { Name = "depth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_depth, PropertySetter = UnityEngine_Camera_Wrap.S_depth
#endif
                    }},
                    {"aspect", new MemberRegisterInfo { Name = "aspect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_aspect, PropertySetter = UnityEngine_Camera_Wrap.S_aspect
#endif
                    }},
                    {"velocity", new MemberRegisterInfo { Name = "velocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_velocity
#endif
                    }},
                    {"cullingMask", new MemberRegisterInfo { Name = "cullingMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_cullingMask, PropertySetter = UnityEngine_Camera_Wrap.S_cullingMask
#endif
                    }},
                    {"eventMask", new MemberRegisterInfo { Name = "eventMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_eventMask, PropertySetter = UnityEngine_Camera_Wrap.S_eventMask
#endif
                    }},
                    {"layerCullSpherical", new MemberRegisterInfo { Name = "layerCullSpherical", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_layerCullSpherical, PropertySetter = UnityEngine_Camera_Wrap.S_layerCullSpherical
#endif
                    }},
                    {"cameraType", new MemberRegisterInfo { Name = "cameraType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_cameraType, PropertySetter = UnityEngine_Camera_Wrap.S_cameraType
#endif
                    }},
                    {"overrideSceneCullingMask", new MemberRegisterInfo { Name = "overrideSceneCullingMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_overrideSceneCullingMask, PropertySetter = UnityEngine_Camera_Wrap.S_overrideSceneCullingMask
#endif
                    }},
                    {"layerCullDistances", new MemberRegisterInfo { Name = "layerCullDistances", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_layerCullDistances, PropertySetter = UnityEngine_Camera_Wrap.S_layerCullDistances
#endif
                    }},
                    {"useOcclusionCulling", new MemberRegisterInfo { Name = "useOcclusionCulling", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_useOcclusionCulling, PropertySetter = UnityEngine_Camera_Wrap.S_useOcclusionCulling
#endif
                    }},
                    {"cullingMatrix", new MemberRegisterInfo { Name = "cullingMatrix", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_cullingMatrix, PropertySetter = UnityEngine_Camera_Wrap.S_cullingMatrix
#endif
                    }},
                    {"backgroundColor", new MemberRegisterInfo { Name = "backgroundColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_backgroundColor, PropertySetter = UnityEngine_Camera_Wrap.S_backgroundColor
#endif
                    }},
                    {"clearFlags", new MemberRegisterInfo { Name = "clearFlags", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_clearFlags, PropertySetter = UnityEngine_Camera_Wrap.S_clearFlags
#endif
                    }},
                    {"depthTextureMode", new MemberRegisterInfo { Name = "depthTextureMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_depthTextureMode, PropertySetter = UnityEngine_Camera_Wrap.S_depthTextureMode
#endif
                    }},
                    {"clearStencilAfterLightingPass", new MemberRegisterInfo { Name = "clearStencilAfterLightingPass", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_clearStencilAfterLightingPass, PropertySetter = UnityEngine_Camera_Wrap.S_clearStencilAfterLightingPass
#endif
                    }},
                    {"usePhysicalProperties", new MemberRegisterInfo { Name = "usePhysicalProperties", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_usePhysicalProperties, PropertySetter = UnityEngine_Camera_Wrap.S_usePhysicalProperties
#endif
                    }},
                    {"sensorSize", new MemberRegisterInfo { Name = "sensorSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_sensorSize, PropertySetter = UnityEngine_Camera_Wrap.S_sensorSize
#endif
                    }},
                    {"lensShift", new MemberRegisterInfo { Name = "lensShift", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_lensShift, PropertySetter = UnityEngine_Camera_Wrap.S_lensShift
#endif
                    }},
                    {"focalLength", new MemberRegisterInfo { Name = "focalLength", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_focalLength, PropertySetter = UnityEngine_Camera_Wrap.S_focalLength
#endif
                    }},
                    {"gateFit", new MemberRegisterInfo { Name = "gateFit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_gateFit, PropertySetter = UnityEngine_Camera_Wrap.S_gateFit
#endif
                    }},
                    {"rect", new MemberRegisterInfo { Name = "rect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_rect, PropertySetter = UnityEngine_Camera_Wrap.S_rect
#endif
                    }},
                    {"pixelRect", new MemberRegisterInfo { Name = "pixelRect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_pixelRect, PropertySetter = UnityEngine_Camera_Wrap.S_pixelRect
#endif
                    }},
                    {"pixelWidth", new MemberRegisterInfo { Name = "pixelWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_pixelWidth
#endif
                    }},
                    {"pixelHeight", new MemberRegisterInfo { Name = "pixelHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_pixelHeight
#endif
                    }},
                    {"scaledPixelWidth", new MemberRegisterInfo { Name = "scaledPixelWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_scaledPixelWidth
#endif
                    }},
                    {"scaledPixelHeight", new MemberRegisterInfo { Name = "scaledPixelHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_scaledPixelHeight
#endif
                    }},
                    {"targetTexture", new MemberRegisterInfo { Name = "targetTexture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_targetTexture, PropertySetter = UnityEngine_Camera_Wrap.S_targetTexture
#endif
                    }},
                    {"activeTexture", new MemberRegisterInfo { Name = "activeTexture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_activeTexture
#endif
                    }},
                    {"targetDisplay", new MemberRegisterInfo { Name = "targetDisplay", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_targetDisplay, PropertySetter = UnityEngine_Camera_Wrap.S_targetDisplay
#endif
                    }},
                    {"cameraToWorldMatrix", new MemberRegisterInfo { Name = "cameraToWorldMatrix", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_cameraToWorldMatrix
#endif
                    }},
                    {"worldToCameraMatrix", new MemberRegisterInfo { Name = "worldToCameraMatrix", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_worldToCameraMatrix, PropertySetter = UnityEngine_Camera_Wrap.S_worldToCameraMatrix
#endif
                    }},
                    {"projectionMatrix", new MemberRegisterInfo { Name = "projectionMatrix", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_projectionMatrix, PropertySetter = UnityEngine_Camera_Wrap.S_projectionMatrix
#endif
                    }},
                    {"nonJitteredProjectionMatrix", new MemberRegisterInfo { Name = "nonJitteredProjectionMatrix", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_nonJitteredProjectionMatrix, PropertySetter = UnityEngine_Camera_Wrap.S_nonJitteredProjectionMatrix
#endif
                    }},
                    {"useJitteredProjectionMatrixForTransparentRendering", new MemberRegisterInfo { Name = "useJitteredProjectionMatrixForTransparentRendering", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_useJitteredProjectionMatrixForTransparentRendering, PropertySetter = UnityEngine_Camera_Wrap.S_useJitteredProjectionMatrixForTransparentRendering
#endif
                    }},
                    {"previousViewProjectionMatrix", new MemberRegisterInfo { Name = "previousViewProjectionMatrix", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_previousViewProjectionMatrix
#endif
                    }},
                    {"scene", new MemberRegisterInfo { Name = "scene", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_scene, PropertySetter = UnityEngine_Camera_Wrap.S_scene
#endif
                    }},
                    {"stereoEnabled", new MemberRegisterInfo { Name = "stereoEnabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_stereoEnabled
#endif
                    }},
                    {"stereoSeparation", new MemberRegisterInfo { Name = "stereoSeparation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_stereoSeparation, PropertySetter = UnityEngine_Camera_Wrap.S_stereoSeparation
#endif
                    }},
                    {"stereoConvergence", new MemberRegisterInfo { Name = "stereoConvergence", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_stereoConvergence, PropertySetter = UnityEngine_Camera_Wrap.S_stereoConvergence
#endif
                    }},
                    {"areVRStereoViewMatricesWithinSingleCullTolerance", new MemberRegisterInfo { Name = "areVRStereoViewMatricesWithinSingleCullTolerance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_areVRStereoViewMatricesWithinSingleCullTolerance
#endif
                    }},
                    {"stereoTargetEye", new MemberRegisterInfo { Name = "stereoTargetEye", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_stereoTargetEye, PropertySetter = UnityEngine_Camera_Wrap.S_stereoTargetEye
#endif
                    }},
                    {"stereoActiveEye", new MemberRegisterInfo { Name = "stereoActiveEye", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_stereoActiveEye
#endif
                    }},
                    {"commandBufferCount", new MemberRegisterInfo { Name = "commandBufferCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_commandBufferCount
#endif
                    }},
                    {"CalculateProjectionMatrixFromPhysicalProperties_static", new MemberRegisterInfo { Name = "CalculateProjectionMatrixFromPhysicalProperties", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.F_CalculateProjectionMatrixFromPhysicalProperties
#endif
                    }},
                    {"FocalLengthToFieldOfView_static", new MemberRegisterInfo { Name = "FocalLengthToFieldOfView", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.F_FocalLengthToFieldOfView
#endif
                    }},
                    {"FieldOfViewToFocalLength_static", new MemberRegisterInfo { Name = "FieldOfViewToFocalLength", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.F_FieldOfViewToFocalLength
#endif
                    }},
                    {"HorizontalToVerticalFieldOfView_static", new MemberRegisterInfo { Name = "HorizontalToVerticalFieldOfView", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.F_HorizontalToVerticalFieldOfView
#endif
                    }},
                    {"VerticalToHorizontalFieldOfView_static", new MemberRegisterInfo { Name = "VerticalToHorizontalFieldOfView", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.F_VerticalToHorizontalFieldOfView
#endif
                    }},
                    {"GetAllCameras_static", new MemberRegisterInfo { Name = "GetAllCameras", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.F_GetAllCameras
#endif
                    }},
                    {"SetupCurrent_static", new MemberRegisterInfo { Name = "SetupCurrent", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Camera_Wrap.F_SetupCurrent
#endif
                    }},
                    {"main_static", new MemberRegisterInfo { Name = "main", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_main
#endif
                    }},
                    {"current_static", new MemberRegisterInfo { Name = "current", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_current
#endif
                    }},
                    {"allCamerasCount_static", new MemberRegisterInfo { Name = "allCamerasCount", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_allCamerasCount
#endif
                    }},
                    {"allCameras_static", new MemberRegisterInfo { Name = "allCameras", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_allCameras
#endif
                    }},
                    {"onPreCull_static", new MemberRegisterInfo { Name = "onPreCull", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_onPreCull, PropertySetter = UnityEngine_Camera_Wrap.S_onPreCull
#endif
                    }},
                    {"onPreRender_static", new MemberRegisterInfo { Name = "onPreRender", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_onPreRender, PropertySetter = UnityEngine_Camera_Wrap.S_onPreRender
#endif
                    }},
                    {"onPostRender_static", new MemberRegisterInfo { Name = "onPostRender", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_Wrap.G_onPostRender, PropertySetter = UnityEngine_Camera_Wrap.S_onPostRender
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Camera_GateFitParameters_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Camera_GateFitParameters_Wrap.Constructor
#endif
                    }},
                    {"mode", new MemberRegisterInfo { Name = "mode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_GateFitParameters_Wrap.G_mode, PropertySetter = UnityEngine_Camera_GateFitParameters_Wrap.S_mode
#endif
                    }},
                    {"aspect", new MemberRegisterInfo { Name = "aspect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_GateFitParameters_Wrap.G_aspect, PropertySetter = UnityEngine_Camera_GateFitParameters_Wrap.S_aspect
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Camera_RenderRequest_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Camera_RenderRequest_Wrap.Constructor
#endif
                    }},
                    {"isValid", new MemberRegisterInfo { Name = "isValid", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_RenderRequest_Wrap.G_isValid
#endif
                    }},
                    {"mode", new MemberRegisterInfo { Name = "mode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_RenderRequest_Wrap.G_mode
#endif
                    }},
                    {"result", new MemberRegisterInfo { Name = "result", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_RenderRequest_Wrap.G_result
#endif
                    }},
                    {"outputSpace", new MemberRegisterInfo { Name = "outputSpace", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Camera_RenderRequest_Wrap.G_outputSpace
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_BoundingSphere_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_BoundingSphere_Wrap.Constructor
#endif
                    }},
                    {"position", new MemberRegisterInfo { Name = "position", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoundingSphere_Wrap.G_position, PropertySetter = UnityEngine_BoundingSphere_Wrap.S_position
#endif
                    }},
                    {"radius", new MemberRegisterInfo { Name = "radius", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoundingSphere_Wrap.G_radius, PropertySetter = UnityEngine_BoundingSphere_Wrap.S_radius
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CullingGroupEvent_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_CullingGroupEvent_Wrap.Constructor
#endif
                    }},
                    {"index", new MemberRegisterInfo { Name = "index", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CullingGroupEvent_Wrap.G_index
#endif
                    }},
                    {"isVisible", new MemberRegisterInfo { Name = "isVisible", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CullingGroupEvent_Wrap.G_isVisible
#endif
                    }},
                    {"wasVisible", new MemberRegisterInfo { Name = "wasVisible", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CullingGroupEvent_Wrap.G_wasVisible
#endif
                    }},
                    {"hasBecomeVisible", new MemberRegisterInfo { Name = "hasBecomeVisible", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CullingGroupEvent_Wrap.G_hasBecomeVisible
#endif
                    }},
                    {"hasBecomeInvisible", new MemberRegisterInfo { Name = "hasBecomeInvisible", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CullingGroupEvent_Wrap.G_hasBecomeInvisible
#endif
                    }},
                    {"currentDistance", new MemberRegisterInfo { Name = "currentDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CullingGroupEvent_Wrap.G_currentDistance
#endif
                    }},
                    {"previousDistance", new MemberRegisterInfo { Name = "previousDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CullingGroupEvent_Wrap.G_previousDistance
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CullingGroup_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_CullingGroup_Wrap.Constructor
#endif
                    }},
                    {"Dispose", new MemberRegisterInfo { Name = "Dispose", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CullingGroup_Wrap.M_Dispose
#endif
                    }},
                    {"SetBoundingSpheres", new MemberRegisterInfo { Name = "SetBoundingSpheres", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CullingGroup_Wrap.M_SetBoundingSpheres
#endif
                    }},
                    {"SetBoundingSphereCount", new MemberRegisterInfo { Name = "SetBoundingSphereCount", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CullingGroup_Wrap.M_SetBoundingSphereCount
#endif
                    }},
                    {"EraseSwapBack", new MemberRegisterInfo { Name = "EraseSwapBack", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CullingGroup_Wrap.M_EraseSwapBack
#endif
                    }},
                    {"QueryIndices", new MemberRegisterInfo { Name = "QueryIndices", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CullingGroup_Wrap.M_QueryIndices
#endif
                    }},
                    {"IsVisible", new MemberRegisterInfo { Name = "IsVisible", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CullingGroup_Wrap.M_IsVisible
#endif
                    }},
                    {"GetDistance", new MemberRegisterInfo { Name = "GetDistance", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CullingGroup_Wrap.M_GetDistance
#endif
                    }},
                    {"SetBoundingDistances", new MemberRegisterInfo { Name = "SetBoundingDistances", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CullingGroup_Wrap.M_SetBoundingDistances
#endif
                    }},
                    {"SetDistanceReferencePoint", new MemberRegisterInfo { Name = "SetDistanceReferencePoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CullingGroup_Wrap.M_SetDistanceReferencePoint
#endif
                    }},
                    {"onStateChanged", new MemberRegisterInfo { Name = "onStateChanged", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CullingGroup_Wrap.G_onStateChanged, PropertySetter = UnityEngine_CullingGroup_Wrap.S_onStateChanged
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CullingGroup_Wrap.G_enabled, PropertySetter = UnityEngine_CullingGroup_Wrap.S_enabled
#endif
                    }},
                    {"targetCamera", new MemberRegisterInfo { Name = "targetCamera", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CullingGroup_Wrap.G_targetCamera, PropertySetter = UnityEngine_CullingGroup_Wrap.S_targetCamera
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_FlareLayer_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ReflectionProbe_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ReflectionProbe_Wrap.Constructor
#endif
                    }},
                    {"Reset", new MemberRegisterInfo { Name = "Reset", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ReflectionProbe_Wrap.M_Reset
#endif
                    }},
                    {"RenderProbe", new MemberRegisterInfo { Name = "RenderProbe", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ReflectionProbe_Wrap.M_RenderProbe
#endif
                    }},
                    {"IsFinishedRendering", new MemberRegisterInfo { Name = "IsFinishedRendering", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ReflectionProbe_Wrap.M_IsFinishedRendering
#endif
                    }},
                    {"add_reflectionProbeChanged_static", new MemberRegisterInfo { Name = "add_reflectionProbeChanged", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ReflectionProbe_Wrap.A_reflectionProbeChanged
#endif
                    }},
                    {"remove_reflectionProbeChanged_static", new MemberRegisterInfo { Name = "remove_reflectionProbeChanged", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ReflectionProbe_Wrap.R_reflectionProbeChanged
#endif
                    }},
                    {"add_defaultReflectionSet_static", new MemberRegisterInfo { Name = "add_defaultReflectionSet", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ReflectionProbe_Wrap.A_defaultReflectionSet
#endif
                    }},
                    {"remove_defaultReflectionSet_static", new MemberRegisterInfo { Name = "remove_defaultReflectionSet", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ReflectionProbe_Wrap.R_defaultReflectionSet
#endif
                    }},
                    {"size", new MemberRegisterInfo { Name = "size", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_size, PropertySetter = UnityEngine_ReflectionProbe_Wrap.S_size
#endif
                    }},
                    {"center", new MemberRegisterInfo { Name = "center", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_center, PropertySetter = UnityEngine_ReflectionProbe_Wrap.S_center
#endif
                    }},
                    {"nearClipPlane", new MemberRegisterInfo { Name = "nearClipPlane", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_nearClipPlane, PropertySetter = UnityEngine_ReflectionProbe_Wrap.S_nearClipPlane
#endif
                    }},
                    {"farClipPlane", new MemberRegisterInfo { Name = "farClipPlane", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_farClipPlane, PropertySetter = UnityEngine_ReflectionProbe_Wrap.S_farClipPlane
#endif
                    }},
                    {"intensity", new MemberRegisterInfo { Name = "intensity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_intensity, PropertySetter = UnityEngine_ReflectionProbe_Wrap.S_intensity
#endif
                    }},
                    {"bounds", new MemberRegisterInfo { Name = "bounds", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_bounds
#endif
                    }},
                    {"hdr", new MemberRegisterInfo { Name = "hdr", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_hdr, PropertySetter = UnityEngine_ReflectionProbe_Wrap.S_hdr
#endif
                    }},
                    {"renderDynamicObjects", new MemberRegisterInfo { Name = "renderDynamicObjects", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_renderDynamicObjects, PropertySetter = UnityEngine_ReflectionProbe_Wrap.S_renderDynamicObjects
#endif
                    }},
                    {"shadowDistance", new MemberRegisterInfo { Name = "shadowDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_shadowDistance, PropertySetter = UnityEngine_ReflectionProbe_Wrap.S_shadowDistance
#endif
                    }},
                    {"resolution", new MemberRegisterInfo { Name = "resolution", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_resolution, PropertySetter = UnityEngine_ReflectionProbe_Wrap.S_resolution
#endif
                    }},
                    {"cullingMask", new MemberRegisterInfo { Name = "cullingMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_cullingMask, PropertySetter = UnityEngine_ReflectionProbe_Wrap.S_cullingMask
#endif
                    }},
                    {"clearFlags", new MemberRegisterInfo { Name = "clearFlags", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_clearFlags, PropertySetter = UnityEngine_ReflectionProbe_Wrap.S_clearFlags
#endif
                    }},
                    {"backgroundColor", new MemberRegisterInfo { Name = "backgroundColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_backgroundColor, PropertySetter = UnityEngine_ReflectionProbe_Wrap.S_backgroundColor
#endif
                    }},
                    {"blendDistance", new MemberRegisterInfo { Name = "blendDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_blendDistance, PropertySetter = UnityEngine_ReflectionProbe_Wrap.S_blendDistance
#endif
                    }},
                    {"boxProjection", new MemberRegisterInfo { Name = "boxProjection", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_boxProjection, PropertySetter = UnityEngine_ReflectionProbe_Wrap.S_boxProjection
#endif
                    }},
                    {"mode", new MemberRegisterInfo { Name = "mode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_mode, PropertySetter = UnityEngine_ReflectionProbe_Wrap.S_mode
#endif
                    }},
                    {"importance", new MemberRegisterInfo { Name = "importance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_importance, PropertySetter = UnityEngine_ReflectionProbe_Wrap.S_importance
#endif
                    }},
                    {"refreshMode", new MemberRegisterInfo { Name = "refreshMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_refreshMode, PropertySetter = UnityEngine_ReflectionProbe_Wrap.S_refreshMode
#endif
                    }},
                    {"timeSlicingMode", new MemberRegisterInfo { Name = "timeSlicingMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_timeSlicingMode, PropertySetter = UnityEngine_ReflectionProbe_Wrap.S_timeSlicingMode
#endif
                    }},
                    {"bakedTexture", new MemberRegisterInfo { Name = "bakedTexture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_bakedTexture, PropertySetter = UnityEngine_ReflectionProbe_Wrap.S_bakedTexture
#endif
                    }},
                    {"customBakedTexture", new MemberRegisterInfo { Name = "customBakedTexture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_customBakedTexture, PropertySetter = UnityEngine_ReflectionProbe_Wrap.S_customBakedTexture
#endif
                    }},
                    {"realtimeTexture", new MemberRegisterInfo { Name = "realtimeTexture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_realtimeTexture, PropertySetter = UnityEngine_ReflectionProbe_Wrap.S_realtimeTexture
#endif
                    }},
                    {"texture", new MemberRegisterInfo { Name = "texture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_texture
#endif
                    }},
                    {"textureHDRDecodeValues", new MemberRegisterInfo { Name = "textureHDRDecodeValues", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_textureHDRDecodeValues
#endif
                    }},
                    {"BlendCubemap_static", new MemberRegisterInfo { Name = "BlendCubemap", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ReflectionProbe_Wrap.F_BlendCubemap
#endif
                    }},
                    {"minBakedCubemapResolution_static", new MemberRegisterInfo { Name = "minBakedCubemapResolution", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_minBakedCubemapResolution
#endif
                    }},
                    {"maxBakedCubemapResolution_static", new MemberRegisterInfo { Name = "maxBakedCubemapResolution", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_maxBakedCubemapResolution
#endif
                    }},
                    {"defaultTextureHDRDecodeValues_static", new MemberRegisterInfo { Name = "defaultTextureHDRDecodeValues", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_defaultTextureHDRDecodeValues
#endif
                    }},
                    {"defaultTexture_static", new MemberRegisterInfo { Name = "defaultTexture", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ReflectionProbe_Wrap.G_defaultTexture
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CloudStreaming_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"PostMessage_static", new MemberRegisterInfo { Name = "PostMessage", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CloudStreaming_Wrap.F_PostMessage
#endif
                    }},
                    {"PeekMessage_static", new MemberRegisterInfo { Name = "PeekMessage", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CloudStreaming_Wrap.F_PeekMessage
#endif
                    }},
                    {"PeekRemoteAudioCapture_static", new MemberRegisterInfo { Name = "PeekRemoteAudioCapture", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CloudStreaming_Wrap.F_PeekRemoteAudioCapture
#endif
                    }},
                    {"EnableMicRecording_static", new MemberRegisterInfo { Name = "EnableMicRecording", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CloudStreaming_Wrap.F_EnableMicRecording
#endif
                    }},
                    {"DisableMicRecording_static", new MemberRegisterInfo { Name = "DisableMicRecording", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CloudStreaming_Wrap.F_DisableMicRecording
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CrashReport_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"Remove", new MemberRegisterInfo { Name = "Remove", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CrashReport_Wrap.M_Remove
#endif
                    }},
                    {"time", new MemberRegisterInfo { Name = "time", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CrashReport_Wrap.G_time
#endif
                    }},
                    {"text", new MemberRegisterInfo { Name = "text", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CrashReport_Wrap.G_text
#endif
                    }},
                    {"RemoveAll_static", new MemberRegisterInfo { Name = "RemoveAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CrashReport_Wrap.F_RemoveAll
#endif
                    }},
                    {"reports_static", new MemberRegisterInfo { Name = "reports", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CrashReport_Wrap.G_reports
#endif
                    }},
                    {"lastReport_static", new MemberRegisterInfo { Name = "lastReport", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CrashReport_Wrap.G_lastReport
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ExposedPropertyResolver_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ExposedPropertyResolver_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_IExposedPropertyTable_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"SetReferenceValue", new MemberRegisterInfo { Name = "SetReferenceValue", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_IExposedPropertyTable_Wrap.M_SetReferenceValue
#endif
                    }},
                    {"GetReferenceValue", new MemberRegisterInfo { Name = "GetReferenceValue", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_IExposedPropertyTable_Wrap.M_GetReferenceValue
#endif
                    }},
                    {"ClearReferenceValue", new MemberRegisterInfo { Name = "ClearReferenceValue", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_IExposedPropertyTable_Wrap.M_ClearReferenceValue
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Bounds_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Bounds_Wrap.Constructor
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Bounds_Wrap.M_GetHashCode
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Bounds_Wrap.M_Equals
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Bounds_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Bounds_Wrap.O_op_Inequality
#endif
                    }},
                    {"SetMinMax", new MemberRegisterInfo { Name = "SetMinMax", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Bounds_Wrap.M_SetMinMax
#endif
                    }},
                    {"Encapsulate", new MemberRegisterInfo { Name = "Encapsulate", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Bounds_Wrap.M_Encapsulate
#endif
                    }},
                    {"Expand", new MemberRegisterInfo { Name = "Expand", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Bounds_Wrap.M_Expand
#endif
                    }},
                    {"Intersects", new MemberRegisterInfo { Name = "Intersects", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Bounds_Wrap.M_Intersects
#endif
                    }},
                    {"IntersectRay", new MemberRegisterInfo { Name = "IntersectRay", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Bounds_Wrap.M_IntersectRay
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Bounds_Wrap.M_ToString
#endif
                    }},
                    {"Contains", new MemberRegisterInfo { Name = "Contains", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Bounds_Wrap.M_Contains
#endif
                    }},
                    {"SqrDistance", new MemberRegisterInfo { Name = "SqrDistance", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Bounds_Wrap.M_SqrDistance
#endif
                    }},
                    {"ClosestPoint", new MemberRegisterInfo { Name = "ClosestPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Bounds_Wrap.M_ClosestPoint
#endif
                    }},
                    {"center", new MemberRegisterInfo { Name = "center", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Bounds_Wrap.G_center, PropertySetter = UnityEngine_Bounds_Wrap.S_center
#endif
                    }},
                    {"size", new MemberRegisterInfo { Name = "size", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Bounds_Wrap.G_size, PropertySetter = UnityEngine_Bounds_Wrap.S_size
#endif
                    }},
                    {"extents", new MemberRegisterInfo { Name = "extents", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Bounds_Wrap.G_extents, PropertySetter = UnityEngine_Bounds_Wrap.S_extents
#endif
                    }},
                    {"min", new MemberRegisterInfo { Name = "min", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Bounds_Wrap.G_min, PropertySetter = UnityEngine_Bounds_Wrap.S_min
#endif
                    }},
                    {"max", new MemberRegisterInfo { Name = "max", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Bounds_Wrap.G_max, PropertySetter = UnityEngine_Bounds_Wrap.S_max
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_BoundsInt_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_BoundsInt_Wrap.Constructor
#endif
                    }},
                    {"SetMinMax", new MemberRegisterInfo { Name = "SetMinMax", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BoundsInt_Wrap.M_SetMinMax
#endif
                    }},
                    {"ClampToBounds", new MemberRegisterInfo { Name = "ClampToBounds", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BoundsInt_Wrap.M_ClampToBounds
#endif
                    }},
                    {"Contains", new MemberRegisterInfo { Name = "Contains", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BoundsInt_Wrap.M_Contains
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BoundsInt_Wrap.M_ToString
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BoundsInt_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BoundsInt_Wrap.O_op_Inequality
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BoundsInt_Wrap.M_Equals
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BoundsInt_Wrap.M_GetHashCode
#endif
                    }},
                    {"x", new MemberRegisterInfo { Name = "x", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoundsInt_Wrap.G_x, PropertySetter = UnityEngine_BoundsInt_Wrap.S_x
#endif
                    }},
                    {"y", new MemberRegisterInfo { Name = "y", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoundsInt_Wrap.G_y, PropertySetter = UnityEngine_BoundsInt_Wrap.S_y
#endif
                    }},
                    {"z", new MemberRegisterInfo { Name = "z", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoundsInt_Wrap.G_z, PropertySetter = UnityEngine_BoundsInt_Wrap.S_z
#endif
                    }},
                    {"center", new MemberRegisterInfo { Name = "center", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoundsInt_Wrap.G_center
#endif
                    }},
                    {"min", new MemberRegisterInfo { Name = "min", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoundsInt_Wrap.G_min, PropertySetter = UnityEngine_BoundsInt_Wrap.S_min
#endif
                    }},
                    {"max", new MemberRegisterInfo { Name = "max", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoundsInt_Wrap.G_max, PropertySetter = UnityEngine_BoundsInt_Wrap.S_max
#endif
                    }},
                    {"xMin", new MemberRegisterInfo { Name = "xMin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoundsInt_Wrap.G_xMin, PropertySetter = UnityEngine_BoundsInt_Wrap.S_xMin
#endif
                    }},
                    {"yMin", new MemberRegisterInfo { Name = "yMin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoundsInt_Wrap.G_yMin, PropertySetter = UnityEngine_BoundsInt_Wrap.S_yMin
#endif
                    }},
                    {"zMin", new MemberRegisterInfo { Name = "zMin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoundsInt_Wrap.G_zMin, PropertySetter = UnityEngine_BoundsInt_Wrap.S_zMin
#endif
                    }},
                    {"xMax", new MemberRegisterInfo { Name = "xMax", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoundsInt_Wrap.G_xMax, PropertySetter = UnityEngine_BoundsInt_Wrap.S_xMax
#endif
                    }},
                    {"yMax", new MemberRegisterInfo { Name = "yMax", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoundsInt_Wrap.G_yMax, PropertySetter = UnityEngine_BoundsInt_Wrap.S_yMax
#endif
                    }},
                    {"zMax", new MemberRegisterInfo { Name = "zMax", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoundsInt_Wrap.G_zMax, PropertySetter = UnityEngine_BoundsInt_Wrap.S_zMax
#endif
                    }},
                    {"position", new MemberRegisterInfo { Name = "position", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoundsInt_Wrap.G_position, PropertySetter = UnityEngine_BoundsInt_Wrap.S_position
#endif
                    }},
                    {"size", new MemberRegisterInfo { Name = "size", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoundsInt_Wrap.G_size, PropertySetter = UnityEngine_BoundsInt_Wrap.S_size
#endif
                    }},
                    {"allPositionsWithin", new MemberRegisterInfo { Name = "allPositionsWithin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoundsInt_Wrap.G_allPositionsWithin
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_BoundsInt_PositionEnumerator_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_BoundsInt_PositionEnumerator_Wrap.Constructor
#endif
                    }},
                    {"GetEnumerator", new MemberRegisterInfo { Name = "GetEnumerator", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BoundsInt_PositionEnumerator_Wrap.M_GetEnumerator
#endif
                    }},
                    {"MoveNext", new MemberRegisterInfo { Name = "MoveNext", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BoundsInt_PositionEnumerator_Wrap.M_MoveNext
#endif
                    }},
                    {"Reset", new MemberRegisterInfo { Name = "Reset", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BoundsInt_PositionEnumerator_Wrap.M_Reset
#endif
                    }},
                    {"Current", new MemberRegisterInfo { Name = "Current", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoundsInt_PositionEnumerator_Wrap.G_Current
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_GeometryUtility_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_GeometryUtility_Wrap.Constructor
#endif
                    }},
                    {"CalculateFrustumPlanes_static", new MemberRegisterInfo { Name = "CalculateFrustumPlanes", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GeometryUtility_Wrap.F_CalculateFrustumPlanes
#endif
                    }},
                    {"CalculateBounds_static", new MemberRegisterInfo { Name = "CalculateBounds", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GeometryUtility_Wrap.F_CalculateBounds
#endif
                    }},
                    {"TryCreatePlaneFromPolygon_static", new MemberRegisterInfo { Name = "TryCreatePlaneFromPolygon", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GeometryUtility_Wrap.F_TryCreatePlaneFromPolygon
#endif
                    }},
                    {"TestPlanesAABB_static", new MemberRegisterInfo { Name = "TestPlanesAABB", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GeometryUtility_Wrap.F_TestPlanesAABB
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Plane_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Plane_Wrap.Constructor
#endif
                    }},
                    {"SetNormalAndPosition", new MemberRegisterInfo { Name = "SetNormalAndPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Plane_Wrap.M_SetNormalAndPosition
#endif
                    }},
                    {"Set3Points", new MemberRegisterInfo { Name = "Set3Points", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Plane_Wrap.M_Set3Points
#endif
                    }},
                    {"Flip", new MemberRegisterInfo { Name = "Flip", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Plane_Wrap.M_Flip
#endif
                    }},
                    {"Translate", new MemberRegisterInfo { Name = "Translate", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Plane_Wrap.M_Translate
#endif
                    }},
                    {"ClosestPointOnPlane", new MemberRegisterInfo { Name = "ClosestPointOnPlane", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Plane_Wrap.M_ClosestPointOnPlane
#endif
                    }},
                    {"GetDistanceToPoint", new MemberRegisterInfo { Name = "GetDistanceToPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Plane_Wrap.M_GetDistanceToPoint
#endif
                    }},
                    {"GetSide", new MemberRegisterInfo { Name = "GetSide", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Plane_Wrap.M_GetSide
#endif
                    }},
                    {"SameSide", new MemberRegisterInfo { Name = "SameSide", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Plane_Wrap.M_SameSide
#endif
                    }},
                    {"Raycast", new MemberRegisterInfo { Name = "Raycast", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Plane_Wrap.M_Raycast
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Plane_Wrap.M_ToString
#endif
                    }},
                    {"normal", new MemberRegisterInfo { Name = "normal", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Plane_Wrap.G_normal, PropertySetter = UnityEngine_Plane_Wrap.S_normal
#endif
                    }},
                    {"distance", new MemberRegisterInfo { Name = "distance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Plane_Wrap.G_distance, PropertySetter = UnityEngine_Plane_Wrap.S_distance
#endif
                    }},
                    {"flipped", new MemberRegisterInfo { Name = "flipped", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Plane_Wrap.G_flipped
#endif
                    }},
                    {"Translate_static", new MemberRegisterInfo { Name = "Translate", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Plane_Wrap.F_Translate
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Ray_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Ray_Wrap.Constructor
#endif
                    }},
                    {"GetPoint", new MemberRegisterInfo { Name = "GetPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Ray_Wrap.M_GetPoint
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Ray_Wrap.M_ToString
#endif
                    }},
                    {"origin", new MemberRegisterInfo { Name = "origin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Ray_Wrap.G_origin, PropertySetter = UnityEngine_Ray_Wrap.S_origin
#endif
                    }},
                    {"direction", new MemberRegisterInfo { Name = "direction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Ray_Wrap.G_direction, PropertySetter = UnityEngine_Ray_Wrap.S_direction
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Ray2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Ray2D_Wrap.Constructor
#endif
                    }},
                    {"GetPoint", new MemberRegisterInfo { Name = "GetPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Ray2D_Wrap.M_GetPoint
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Ray2D_Wrap.M_ToString
#endif
                    }},
                    {"origin", new MemberRegisterInfo { Name = "origin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Ray2D_Wrap.G_origin, PropertySetter = UnityEngine_Ray2D_Wrap.S_origin
#endif
                    }},
                    {"direction", new MemberRegisterInfo { Name = "direction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Ray2D_Wrap.G_direction, PropertySetter = UnityEngine_Ray2D_Wrap.S_direction
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Rect_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Rect_Wrap.Constructor
#endif
                    }},
                    {"Set", new MemberRegisterInfo { Name = "Set", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rect_Wrap.M_Set
#endif
                    }},
                    {"Contains", new MemberRegisterInfo { Name = "Contains", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rect_Wrap.M_Contains
#endif
                    }},
                    {"Overlaps", new MemberRegisterInfo { Name = "Overlaps", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rect_Wrap.M_Overlaps
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rect_Wrap.O_op_Inequality
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rect_Wrap.O_op_Equality
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rect_Wrap.M_GetHashCode
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rect_Wrap.M_Equals
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rect_Wrap.M_ToString
#endif
                    }},
                    {"x", new MemberRegisterInfo { Name = "x", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rect_Wrap.G_x, PropertySetter = UnityEngine_Rect_Wrap.S_x
#endif
                    }},
                    {"y", new MemberRegisterInfo { Name = "y", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rect_Wrap.G_y, PropertySetter = UnityEngine_Rect_Wrap.S_y
#endif
                    }},
                    {"position", new MemberRegisterInfo { Name = "position", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rect_Wrap.G_position, PropertySetter = UnityEngine_Rect_Wrap.S_position
#endif
                    }},
                    {"center", new MemberRegisterInfo { Name = "center", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rect_Wrap.G_center, PropertySetter = UnityEngine_Rect_Wrap.S_center
#endif
                    }},
                    {"min", new MemberRegisterInfo { Name = "min", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rect_Wrap.G_min, PropertySetter = UnityEngine_Rect_Wrap.S_min
#endif
                    }},
                    {"max", new MemberRegisterInfo { Name = "max", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rect_Wrap.G_max, PropertySetter = UnityEngine_Rect_Wrap.S_max
#endif
                    }},
                    {"width", new MemberRegisterInfo { Name = "width", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rect_Wrap.G_width, PropertySetter = UnityEngine_Rect_Wrap.S_width
#endif
                    }},
                    {"height", new MemberRegisterInfo { Name = "height", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rect_Wrap.G_height, PropertySetter = UnityEngine_Rect_Wrap.S_height
#endif
                    }},
                    {"size", new MemberRegisterInfo { Name = "size", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rect_Wrap.G_size, PropertySetter = UnityEngine_Rect_Wrap.S_size
#endif
                    }},
                    {"xMin", new MemberRegisterInfo { Name = "xMin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rect_Wrap.G_xMin, PropertySetter = UnityEngine_Rect_Wrap.S_xMin
#endif
                    }},
                    {"yMin", new MemberRegisterInfo { Name = "yMin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rect_Wrap.G_yMin, PropertySetter = UnityEngine_Rect_Wrap.S_yMin
#endif
                    }},
                    {"xMax", new MemberRegisterInfo { Name = "xMax", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rect_Wrap.G_xMax, PropertySetter = UnityEngine_Rect_Wrap.S_xMax
#endif
                    }},
                    {"yMax", new MemberRegisterInfo { Name = "yMax", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rect_Wrap.G_yMax, PropertySetter = UnityEngine_Rect_Wrap.S_yMax
#endif
                    }},
                    {"MinMaxRect_static", new MemberRegisterInfo { Name = "MinMaxRect", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rect_Wrap.F_MinMaxRect
#endif
                    }},
                    {"NormalizedToPoint_static", new MemberRegisterInfo { Name = "NormalizedToPoint", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rect_Wrap.F_NormalizedToPoint
#endif
                    }},
                    {"PointToNormalized_static", new MemberRegisterInfo { Name = "PointToNormalized", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rect_Wrap.F_PointToNormalized
#endif
                    }},
                    {"zero_static", new MemberRegisterInfo { Name = "zero", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rect_Wrap.G_zero
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RectInt_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_RectInt_Wrap.Constructor
#endif
                    }},
                    {"SetMinMax", new MemberRegisterInfo { Name = "SetMinMax", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectInt_Wrap.M_SetMinMax
#endif
                    }},
                    {"ClampToBounds", new MemberRegisterInfo { Name = "ClampToBounds", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectInt_Wrap.M_ClampToBounds
#endif
                    }},
                    {"Contains", new MemberRegisterInfo { Name = "Contains", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectInt_Wrap.M_Contains
#endif
                    }},
                    {"Overlaps", new MemberRegisterInfo { Name = "Overlaps", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectInt_Wrap.M_Overlaps
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectInt_Wrap.M_ToString
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectInt_Wrap.M_Equals
#endif
                    }},
                    {"x", new MemberRegisterInfo { Name = "x", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectInt_Wrap.G_x, PropertySetter = UnityEngine_RectInt_Wrap.S_x
#endif
                    }},
                    {"y", new MemberRegisterInfo { Name = "y", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectInt_Wrap.G_y, PropertySetter = UnityEngine_RectInt_Wrap.S_y
#endif
                    }},
                    {"center", new MemberRegisterInfo { Name = "center", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectInt_Wrap.G_center
#endif
                    }},
                    {"min", new MemberRegisterInfo { Name = "min", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectInt_Wrap.G_min, PropertySetter = UnityEngine_RectInt_Wrap.S_min
#endif
                    }},
                    {"max", new MemberRegisterInfo { Name = "max", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectInt_Wrap.G_max, PropertySetter = UnityEngine_RectInt_Wrap.S_max
#endif
                    }},
                    {"width", new MemberRegisterInfo { Name = "width", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectInt_Wrap.G_width, PropertySetter = UnityEngine_RectInt_Wrap.S_width
#endif
                    }},
                    {"height", new MemberRegisterInfo { Name = "height", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectInt_Wrap.G_height, PropertySetter = UnityEngine_RectInt_Wrap.S_height
#endif
                    }},
                    {"xMin", new MemberRegisterInfo { Name = "xMin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectInt_Wrap.G_xMin, PropertySetter = UnityEngine_RectInt_Wrap.S_xMin
#endif
                    }},
                    {"yMin", new MemberRegisterInfo { Name = "yMin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectInt_Wrap.G_yMin, PropertySetter = UnityEngine_RectInt_Wrap.S_yMin
#endif
                    }},
                    {"xMax", new MemberRegisterInfo { Name = "xMax", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectInt_Wrap.G_xMax, PropertySetter = UnityEngine_RectInt_Wrap.S_xMax
#endif
                    }},
                    {"yMax", new MemberRegisterInfo { Name = "yMax", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectInt_Wrap.G_yMax, PropertySetter = UnityEngine_RectInt_Wrap.S_yMax
#endif
                    }},
                    {"position", new MemberRegisterInfo { Name = "position", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectInt_Wrap.G_position, PropertySetter = UnityEngine_RectInt_Wrap.S_position
#endif
                    }},
                    {"size", new MemberRegisterInfo { Name = "size", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectInt_Wrap.G_size, PropertySetter = UnityEngine_RectInt_Wrap.S_size
#endif
                    }},
                    {"allPositionsWithin", new MemberRegisterInfo { Name = "allPositionsWithin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectInt_Wrap.G_allPositionsWithin
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RectInt_PositionEnumerator_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_RectInt_PositionEnumerator_Wrap.Constructor
#endif
                    }},
                    {"GetEnumerator", new MemberRegisterInfo { Name = "GetEnumerator", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectInt_PositionEnumerator_Wrap.M_GetEnumerator
#endif
                    }},
                    {"MoveNext", new MemberRegisterInfo { Name = "MoveNext", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectInt_PositionEnumerator_Wrap.M_MoveNext
#endif
                    }},
                    {"Reset", new MemberRegisterInfo { Name = "Reset", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectInt_PositionEnumerator_Wrap.M_Reset
#endif
                    }},
                    {"Current", new MemberRegisterInfo { Name = "Current", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectInt_PositionEnumerator_Wrap.G_Current
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RectOffset_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_RectOffset_Wrap.Constructor
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectOffset_Wrap.M_ToString
#endif
                    }},
                    {"Add", new MemberRegisterInfo { Name = "Add", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectOffset_Wrap.M_Add
#endif
                    }},
                    {"Remove", new MemberRegisterInfo { Name = "Remove", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectOffset_Wrap.M_Remove
#endif
                    }},
                    {"left", new MemberRegisterInfo { Name = "left", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectOffset_Wrap.G_left, PropertySetter = UnityEngine_RectOffset_Wrap.S_left
#endif
                    }},
                    {"right", new MemberRegisterInfo { Name = "right", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectOffset_Wrap.G_right, PropertySetter = UnityEngine_RectOffset_Wrap.S_right
#endif
                    }},
                    {"top", new MemberRegisterInfo { Name = "top", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectOffset_Wrap.G_top, PropertySetter = UnityEngine_RectOffset_Wrap.S_top
#endif
                    }},
                    {"bottom", new MemberRegisterInfo { Name = "bottom", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectOffset_Wrap.G_bottom, PropertySetter = UnityEngine_RectOffset_Wrap.S_bottom
#endif
                    }},
                    {"horizontal", new MemberRegisterInfo { Name = "horizontal", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectOffset_Wrap.G_horizontal
#endif
                    }},
                    {"vertical", new MemberRegisterInfo { Name = "vertical", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectOffset_Wrap.G_vertical
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_DynamicGI_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_DynamicGI_Wrap.Constructor
#endif
                    }},
                    {"SetEmissive_static", new MemberRegisterInfo { Name = "SetEmissive", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_DynamicGI_Wrap.F_SetEmissive
#endif
                    }},
                    {"SetEnvironmentData_static", new MemberRegisterInfo { Name = "SetEnvironmentData", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_DynamicGI_Wrap.F_SetEnvironmentData
#endif
                    }},
                    {"UpdateEnvironment_static", new MemberRegisterInfo { Name = "UpdateEnvironment", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_DynamicGI_Wrap.F_UpdateEnvironment
#endif
                    }},
                    {"indirectScale_static", new MemberRegisterInfo { Name = "indirectScale", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_DynamicGI_Wrap.G_indirectScale, PropertySetter = UnityEngine_DynamicGI_Wrap.S_indirectScale
#endif
                    }},
                    {"updateThreshold_static", new MemberRegisterInfo { Name = "updateThreshold", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_DynamicGI_Wrap.G_updateThreshold, PropertySetter = UnityEngine_DynamicGI_Wrap.S_updateThreshold
#endif
                    }},
                    {"materialUpdateTimeSlice_static", new MemberRegisterInfo { Name = "materialUpdateTimeSlice", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_DynamicGI_Wrap.G_materialUpdateTimeSlice, PropertySetter = UnityEngine_DynamicGI_Wrap.S_materialUpdateTimeSlice
#endif
                    }},
                    {"synchronousMode_static", new MemberRegisterInfo { Name = "synchronousMode", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_DynamicGI_Wrap.G_synchronousMode, PropertySetter = UnityEngine_DynamicGI_Wrap.S_synchronousMode
#endif
                    }},
                    {"isConverged_static", new MemberRegisterInfo { Name = "isConverged", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_DynamicGI_Wrap.G_isConverged
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_LightingSettings_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_LightingSettings_Wrap.Constructor
#endif
                    }},
                    {"bakedGI", new MemberRegisterInfo { Name = "bakedGI", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_bakedGI, PropertySetter = UnityEngine_LightingSettings_Wrap.S_bakedGI
#endif
                    }},
                    {"realtimeGI", new MemberRegisterInfo { Name = "realtimeGI", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_realtimeGI, PropertySetter = UnityEngine_LightingSettings_Wrap.S_realtimeGI
#endif
                    }},
                    {"realtimeEnvironmentLighting", new MemberRegisterInfo { Name = "realtimeEnvironmentLighting", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_realtimeEnvironmentLighting, PropertySetter = UnityEngine_LightingSettings_Wrap.S_realtimeEnvironmentLighting
#endif
                    }},
                    {"autoGenerate", new MemberRegisterInfo { Name = "autoGenerate", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_autoGenerate, PropertySetter = UnityEngine_LightingSettings_Wrap.S_autoGenerate
#endif
                    }},
                    {"mixedBakeMode", new MemberRegisterInfo { Name = "mixedBakeMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_mixedBakeMode, PropertySetter = UnityEngine_LightingSettings_Wrap.S_mixedBakeMode
#endif
                    }},
                    {"albedoBoost", new MemberRegisterInfo { Name = "albedoBoost", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_albedoBoost, PropertySetter = UnityEngine_LightingSettings_Wrap.S_albedoBoost
#endif
                    }},
                    {"indirectScale", new MemberRegisterInfo { Name = "indirectScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_indirectScale, PropertySetter = UnityEngine_LightingSettings_Wrap.S_indirectScale
#endif
                    }},
                    {"lightmapper", new MemberRegisterInfo { Name = "lightmapper", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_lightmapper, PropertySetter = UnityEngine_LightingSettings_Wrap.S_lightmapper
#endif
                    }},
                    {"lightmapMaxSize", new MemberRegisterInfo { Name = "lightmapMaxSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_lightmapMaxSize, PropertySetter = UnityEngine_LightingSettings_Wrap.S_lightmapMaxSize
#endif
                    }},
                    {"lightmapResolution", new MemberRegisterInfo { Name = "lightmapResolution", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_lightmapResolution, PropertySetter = UnityEngine_LightingSettings_Wrap.S_lightmapResolution
#endif
                    }},
                    {"lightmapPadding", new MemberRegisterInfo { Name = "lightmapPadding", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_lightmapPadding, PropertySetter = UnityEngine_LightingSettings_Wrap.S_lightmapPadding
#endif
                    }},
                    {"compressLightmaps", new MemberRegisterInfo { Name = "compressLightmaps", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_compressLightmaps, PropertySetter = UnityEngine_LightingSettings_Wrap.S_compressLightmaps
#endif
                    }},
                    {"ao", new MemberRegisterInfo { Name = "ao", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_ao, PropertySetter = UnityEngine_LightingSettings_Wrap.S_ao
#endif
                    }},
                    {"aoMaxDistance", new MemberRegisterInfo { Name = "aoMaxDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_aoMaxDistance, PropertySetter = UnityEngine_LightingSettings_Wrap.S_aoMaxDistance
#endif
                    }},
                    {"aoExponentIndirect", new MemberRegisterInfo { Name = "aoExponentIndirect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_aoExponentIndirect, PropertySetter = UnityEngine_LightingSettings_Wrap.S_aoExponentIndirect
#endif
                    }},
                    {"aoExponentDirect", new MemberRegisterInfo { Name = "aoExponentDirect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_aoExponentDirect, PropertySetter = UnityEngine_LightingSettings_Wrap.S_aoExponentDirect
#endif
                    }},
                    {"extractAO", new MemberRegisterInfo { Name = "extractAO", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_extractAO, PropertySetter = UnityEngine_LightingSettings_Wrap.S_extractAO
#endif
                    }},
                    {"directionalityMode", new MemberRegisterInfo { Name = "directionalityMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_directionalityMode, PropertySetter = UnityEngine_LightingSettings_Wrap.S_directionalityMode
#endif
                    }},
                    {"exportTrainingData", new MemberRegisterInfo { Name = "exportTrainingData", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_exportTrainingData, PropertySetter = UnityEngine_LightingSettings_Wrap.S_exportTrainingData
#endif
                    }},
                    {"trainingDataDestination", new MemberRegisterInfo { Name = "trainingDataDestination", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_trainingDataDestination, PropertySetter = UnityEngine_LightingSettings_Wrap.S_trainingDataDestination
#endif
                    }},
                    {"indirectResolution", new MemberRegisterInfo { Name = "indirectResolution", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_indirectResolution, PropertySetter = UnityEngine_LightingSettings_Wrap.S_indirectResolution
#endif
                    }},
                    {"finalGather", new MemberRegisterInfo { Name = "finalGather", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_finalGather, PropertySetter = UnityEngine_LightingSettings_Wrap.S_finalGather
#endif
                    }},
                    {"finalGatherRayCount", new MemberRegisterInfo { Name = "finalGatherRayCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_finalGatherRayCount, PropertySetter = UnityEngine_LightingSettings_Wrap.S_finalGatherRayCount
#endif
                    }},
                    {"finalGatherFiltering", new MemberRegisterInfo { Name = "finalGatherFiltering", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_finalGatherFiltering, PropertySetter = UnityEngine_LightingSettings_Wrap.S_finalGatherFiltering
#endif
                    }},
                    {"sampling", new MemberRegisterInfo { Name = "sampling", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_sampling, PropertySetter = UnityEngine_LightingSettings_Wrap.S_sampling
#endif
                    }},
                    {"directSampleCount", new MemberRegisterInfo { Name = "directSampleCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_directSampleCount, PropertySetter = UnityEngine_LightingSettings_Wrap.S_directSampleCount
#endif
                    }},
                    {"indirectSampleCount", new MemberRegisterInfo { Name = "indirectSampleCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_indirectSampleCount, PropertySetter = UnityEngine_LightingSettings_Wrap.S_indirectSampleCount
#endif
                    }},
                    {"maxBounces", new MemberRegisterInfo { Name = "maxBounces", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_maxBounces, PropertySetter = UnityEngine_LightingSettings_Wrap.S_maxBounces
#endif
                    }},
                    {"minBounces", new MemberRegisterInfo { Name = "minBounces", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_minBounces, PropertySetter = UnityEngine_LightingSettings_Wrap.S_minBounces
#endif
                    }},
                    {"prioritizeView", new MemberRegisterInfo { Name = "prioritizeView", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_prioritizeView, PropertySetter = UnityEngine_LightingSettings_Wrap.S_prioritizeView
#endif
                    }},
                    {"filteringMode", new MemberRegisterInfo { Name = "filteringMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_filteringMode, PropertySetter = UnityEngine_LightingSettings_Wrap.S_filteringMode
#endif
                    }},
                    {"denoiserTypeDirect", new MemberRegisterInfo { Name = "denoiserTypeDirect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_denoiserTypeDirect, PropertySetter = UnityEngine_LightingSettings_Wrap.S_denoiserTypeDirect
#endif
                    }},
                    {"denoiserTypeIndirect", new MemberRegisterInfo { Name = "denoiserTypeIndirect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_denoiserTypeIndirect, PropertySetter = UnityEngine_LightingSettings_Wrap.S_denoiserTypeIndirect
#endif
                    }},
                    {"denoiserTypeAO", new MemberRegisterInfo { Name = "denoiserTypeAO", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_denoiserTypeAO, PropertySetter = UnityEngine_LightingSettings_Wrap.S_denoiserTypeAO
#endif
                    }},
                    {"filterTypeDirect", new MemberRegisterInfo { Name = "filterTypeDirect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_filterTypeDirect, PropertySetter = UnityEngine_LightingSettings_Wrap.S_filterTypeDirect
#endif
                    }},
                    {"filterTypeIndirect", new MemberRegisterInfo { Name = "filterTypeIndirect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_filterTypeIndirect, PropertySetter = UnityEngine_LightingSettings_Wrap.S_filterTypeIndirect
#endif
                    }},
                    {"filterTypeAO", new MemberRegisterInfo { Name = "filterTypeAO", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_filterTypeAO, PropertySetter = UnityEngine_LightingSettings_Wrap.S_filterTypeAO
#endif
                    }},
                    {"filteringGaussRadiusDirect", new MemberRegisterInfo { Name = "filteringGaussRadiusDirect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_filteringGaussRadiusDirect, PropertySetter = UnityEngine_LightingSettings_Wrap.S_filteringGaussRadiusDirect
#endif
                    }},
                    {"filteringGaussRadiusIndirect", new MemberRegisterInfo { Name = "filteringGaussRadiusIndirect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_filteringGaussRadiusIndirect, PropertySetter = UnityEngine_LightingSettings_Wrap.S_filteringGaussRadiusIndirect
#endif
                    }},
                    {"filteringGaussRadiusAO", new MemberRegisterInfo { Name = "filteringGaussRadiusAO", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_filteringGaussRadiusAO, PropertySetter = UnityEngine_LightingSettings_Wrap.S_filteringGaussRadiusAO
#endif
                    }},
                    {"filteringAtrousPositionSigmaDirect", new MemberRegisterInfo { Name = "filteringAtrousPositionSigmaDirect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_filteringAtrousPositionSigmaDirect, PropertySetter = UnityEngine_LightingSettings_Wrap.S_filteringAtrousPositionSigmaDirect
#endif
                    }},
                    {"filteringAtrousPositionSigmaIndirect", new MemberRegisterInfo { Name = "filteringAtrousPositionSigmaIndirect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_filteringAtrousPositionSigmaIndirect, PropertySetter = UnityEngine_LightingSettings_Wrap.S_filteringAtrousPositionSigmaIndirect
#endif
                    }},
                    {"filteringAtrousPositionSigmaAO", new MemberRegisterInfo { Name = "filteringAtrousPositionSigmaAO", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_filteringAtrousPositionSigmaAO, PropertySetter = UnityEngine_LightingSettings_Wrap.S_filteringAtrousPositionSigmaAO
#endif
                    }},
                    {"environmentSampleCount", new MemberRegisterInfo { Name = "environmentSampleCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_environmentSampleCount, PropertySetter = UnityEngine_LightingSettings_Wrap.S_environmentSampleCount
#endif
                    }},
                    {"lightProbeSampleCountMultiplier", new MemberRegisterInfo { Name = "lightProbeSampleCountMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightingSettings_Wrap.G_lightProbeSampleCountMultiplier, PropertySetter = UnityEngine_LightingSettings_Wrap.S_lightProbeSampleCountMultiplier
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Gizmos_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Gizmos_Wrap.Constructor
#endif
                    }},
                    {"DrawLine_static", new MemberRegisterInfo { Name = "DrawLine", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Gizmos_Wrap.F_DrawLine
#endif
                    }},
                    {"DrawWireSphere_static", new MemberRegisterInfo { Name = "DrawWireSphere", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Gizmos_Wrap.F_DrawWireSphere
#endif
                    }},
                    {"DrawSphere_static", new MemberRegisterInfo { Name = "DrawSphere", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Gizmos_Wrap.F_DrawSphere
#endif
                    }},
                    {"DrawWireCube_static", new MemberRegisterInfo { Name = "DrawWireCube", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Gizmos_Wrap.F_DrawWireCube
#endif
                    }},
                    {"DrawCube_static", new MemberRegisterInfo { Name = "DrawCube", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Gizmos_Wrap.F_DrawCube
#endif
                    }},
                    {"DrawMesh_static", new MemberRegisterInfo { Name = "DrawMesh", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Gizmos_Wrap.F_DrawMesh
#endif
                    }},
                    {"DrawWireMesh_static", new MemberRegisterInfo { Name = "DrawWireMesh", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Gizmos_Wrap.F_DrawWireMesh
#endif
                    }},
                    {"DrawIcon_static", new MemberRegisterInfo { Name = "DrawIcon", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Gizmos_Wrap.F_DrawIcon
#endif
                    }},
                    {"DrawGUITexture_static", new MemberRegisterInfo { Name = "DrawGUITexture", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Gizmos_Wrap.F_DrawGUITexture
#endif
                    }},
                    {"DrawFrustum_static", new MemberRegisterInfo { Name = "DrawFrustum", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Gizmos_Wrap.F_DrawFrustum
#endif
                    }},
                    {"DrawRay_static", new MemberRegisterInfo { Name = "DrawRay", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Gizmos_Wrap.F_DrawRay
#endif
                    }},
                    {"color_static", new MemberRegisterInfo { Name = "color", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Gizmos_Wrap.G_color, PropertySetter = UnityEngine_Gizmos_Wrap.S_color
#endif
                    }},
                    {"matrix_static", new MemberRegisterInfo { Name = "matrix", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Gizmos_Wrap.G_matrix, PropertySetter = UnityEngine_Gizmos_Wrap.S_matrix
#endif
                    }},
                    {"exposure_static", new MemberRegisterInfo { Name = "exposure", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Gizmos_Wrap.G_exposure, PropertySetter = UnityEngine_Gizmos_Wrap.S_exposure
#endif
                    }},
                    {"probeSize_static", new MemberRegisterInfo { Name = "probeSize", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Gizmos_Wrap.G_probeSize
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_BeforeRenderOrderAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_BeforeRenderOrderAttribute_Wrap.Constructor
#endif
                    }},
                    {"order", new MemberRegisterInfo { Name = "order", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BeforeRenderOrderAttribute_Wrap.G_order
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_BillboardAsset_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_BillboardAsset_Wrap.Constructor
#endif
                    }},
                    {"GetImageTexCoords", new MemberRegisterInfo { Name = "GetImageTexCoords", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BillboardAsset_Wrap.M_GetImageTexCoords
#endif
                    }},
                    {"SetImageTexCoords", new MemberRegisterInfo { Name = "SetImageTexCoords", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BillboardAsset_Wrap.M_SetImageTexCoords
#endif
                    }},
                    {"GetVertices", new MemberRegisterInfo { Name = "GetVertices", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BillboardAsset_Wrap.M_GetVertices
#endif
                    }},
                    {"SetVertices", new MemberRegisterInfo { Name = "SetVertices", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BillboardAsset_Wrap.M_SetVertices
#endif
                    }},
                    {"GetIndices", new MemberRegisterInfo { Name = "GetIndices", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BillboardAsset_Wrap.M_GetIndices
#endif
                    }},
                    {"SetIndices", new MemberRegisterInfo { Name = "SetIndices", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BillboardAsset_Wrap.M_SetIndices
#endif
                    }},
                    {"width", new MemberRegisterInfo { Name = "width", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BillboardAsset_Wrap.G_width, PropertySetter = UnityEngine_BillboardAsset_Wrap.S_width
#endif
                    }},
                    {"height", new MemberRegisterInfo { Name = "height", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BillboardAsset_Wrap.G_height, PropertySetter = UnityEngine_BillboardAsset_Wrap.S_height
#endif
                    }},
                    {"bottom", new MemberRegisterInfo { Name = "bottom", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BillboardAsset_Wrap.G_bottom, PropertySetter = UnityEngine_BillboardAsset_Wrap.S_bottom
#endif
                    }},
                    {"imageCount", new MemberRegisterInfo { Name = "imageCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BillboardAsset_Wrap.G_imageCount
#endif
                    }},
                    {"vertexCount", new MemberRegisterInfo { Name = "vertexCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BillboardAsset_Wrap.G_vertexCount
#endif
                    }},
                    {"indexCount", new MemberRegisterInfo { Name = "indexCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BillboardAsset_Wrap.G_indexCount
#endif
                    }},
                    {"material", new MemberRegisterInfo { Name = "material", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BillboardAsset_Wrap.G_material, PropertySetter = UnityEngine_BillboardAsset_Wrap.S_material
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_BillboardRenderer_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_BillboardRenderer_Wrap.Constructor
#endif
                    }},
                    {"billboard", new MemberRegisterInfo { Name = "billboard", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BillboardRenderer_Wrap.G_billboard, PropertySetter = UnityEngine_BillboardRenderer_Wrap.S_billboard
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CustomRenderTextureManager_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"add_textureLoaded_static", new MemberRegisterInfo { Name = "add_textureLoaded", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CustomRenderTextureManager_Wrap.A_textureLoaded
#endif
                    }},
                    {"remove_textureLoaded_static", new MemberRegisterInfo { Name = "remove_textureLoaded", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CustomRenderTextureManager_Wrap.R_textureLoaded
#endif
                    }},
                    {"add_textureUnloaded_static", new MemberRegisterInfo { Name = "add_textureUnloaded", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CustomRenderTextureManager_Wrap.A_textureUnloaded
#endif
                    }},
                    {"remove_textureUnloaded_static", new MemberRegisterInfo { Name = "remove_textureUnloaded", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CustomRenderTextureManager_Wrap.R_textureUnloaded
#endif
                    }},
                    {"add_updateTriggered_static", new MemberRegisterInfo { Name = "add_updateTriggered", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CustomRenderTextureManager_Wrap.A_updateTriggered
#endif
                    }},
                    {"remove_updateTriggered_static", new MemberRegisterInfo { Name = "remove_updateTriggered", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CustomRenderTextureManager_Wrap.R_updateTriggered
#endif
                    }},
                    {"add_initializeTriggered_static", new MemberRegisterInfo { Name = "add_initializeTriggered", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CustomRenderTextureManager_Wrap.A_initializeTriggered
#endif
                    }},
                    {"remove_initializeTriggered_static", new MemberRegisterInfo { Name = "remove_initializeTriggered", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CustomRenderTextureManager_Wrap.R_initializeTriggered
#endif
                    }},
                    {"GetAllCustomRenderTextures_static", new MemberRegisterInfo { Name = "GetAllCustomRenderTextures", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CustomRenderTextureManager_Wrap.F_GetAllCustomRenderTextures
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Display_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"Activate", new MemberRegisterInfo { Name = "Activate", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Display_Wrap.M_Activate
#endif
                    }},
                    {"SetParams", new MemberRegisterInfo { Name = "SetParams", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Display_Wrap.M_SetParams
#endif
                    }},
                    {"SetRenderingResolution", new MemberRegisterInfo { Name = "SetRenderingResolution", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Display_Wrap.M_SetRenderingResolution
#endif
                    }},
                    {"add_onDisplaysUpdated_static", new MemberRegisterInfo { Name = "add_onDisplaysUpdated", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Display_Wrap.A_onDisplaysUpdated
#endif
                    }},
                    {"remove_onDisplaysUpdated_static", new MemberRegisterInfo { Name = "remove_onDisplaysUpdated", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Display_Wrap.R_onDisplaysUpdated
#endif
                    }},
                    {"renderingWidth", new MemberRegisterInfo { Name = "renderingWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Display_Wrap.G_renderingWidth
#endif
                    }},
                    {"renderingHeight", new MemberRegisterInfo { Name = "renderingHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Display_Wrap.G_renderingHeight
#endif
                    }},
                    {"systemWidth", new MemberRegisterInfo { Name = "systemWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Display_Wrap.G_systemWidth
#endif
                    }},
                    {"systemHeight", new MemberRegisterInfo { Name = "systemHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Display_Wrap.G_systemHeight
#endif
                    }},
                    {"colorBuffer", new MemberRegisterInfo { Name = "colorBuffer", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Display_Wrap.G_colorBuffer
#endif
                    }},
                    {"depthBuffer", new MemberRegisterInfo { Name = "depthBuffer", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Display_Wrap.G_depthBuffer
#endif
                    }},
                    {"active", new MemberRegisterInfo { Name = "active", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Display_Wrap.G_active
#endif
                    }},
                    {"requiresBlitToBackbuffer", new MemberRegisterInfo { Name = "requiresBlitToBackbuffer", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Display_Wrap.G_requiresBlitToBackbuffer
#endif
                    }},
                    {"requiresSrgbBlitToBackbuffer", new MemberRegisterInfo { Name = "requiresSrgbBlitToBackbuffer", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Display_Wrap.G_requiresSrgbBlitToBackbuffer
#endif
                    }},
                    {"RelativeMouseAt_static", new MemberRegisterInfo { Name = "RelativeMouseAt", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Display_Wrap.F_RelativeMouseAt
#endif
                    }},
                    {"main_static", new MemberRegisterInfo { Name = "main", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Display_Wrap.G_main
#endif
                    }},
                    {"activeEditorGameViewTarget_static", new MemberRegisterInfo { Name = "activeEditorGameViewTarget", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Display_Wrap.G_activeEditorGameViewTarget
#endif
                    }},
                    {"displays_static", new MemberRegisterInfo { Name = "displays", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Display_Wrap.G_displays, PropertySetter = UnityEngine_Display_Wrap.S_displays
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SleepTimeout_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SleepTimeout_Wrap.Constructor
#endif
                    }},
                    {"NeverSleep_static", new MemberRegisterInfo { Name = "NeverSleep", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SleepTimeout_Wrap.G_NeverSleep
#endif
                    }},
                    {"SystemSetting_static", new MemberRegisterInfo { Name = "SystemSetting", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SleepTimeout_Wrap.G_SystemSetting
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Screen_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Screen_Wrap.Constructor
#endif
                    }},
                    {"SetResolution_static", new MemberRegisterInfo { Name = "SetResolution", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Screen_Wrap.F_SetResolution
#endif
                    }},
                    {"width_static", new MemberRegisterInfo { Name = "width", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Screen_Wrap.G_width
#endif
                    }},
                    {"height_static", new MemberRegisterInfo { Name = "height", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Screen_Wrap.G_height
#endif
                    }},
                    {"dpi_static", new MemberRegisterInfo { Name = "dpi", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Screen_Wrap.G_dpi
#endif
                    }},
                    {"currentResolution_static", new MemberRegisterInfo { Name = "currentResolution", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Screen_Wrap.G_currentResolution
#endif
                    }},
                    {"resolutions_static", new MemberRegisterInfo { Name = "resolutions", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Screen_Wrap.G_resolutions
#endif
                    }},
                    {"fullScreen_static", new MemberRegisterInfo { Name = "fullScreen", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Screen_Wrap.G_fullScreen, PropertySetter = UnityEngine_Screen_Wrap.S_fullScreen
#endif
                    }},
                    {"fullScreenMode_static", new MemberRegisterInfo { Name = "fullScreenMode", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Screen_Wrap.G_fullScreenMode, PropertySetter = UnityEngine_Screen_Wrap.S_fullScreenMode
#endif
                    }},
                    {"safeArea_static", new MemberRegisterInfo { Name = "safeArea", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Screen_Wrap.G_safeArea
#endif
                    }},
                    {"cutouts_static", new MemberRegisterInfo { Name = "cutouts", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Screen_Wrap.G_cutouts
#endif
                    }},
                    {"autorotateToPortrait_static", new MemberRegisterInfo { Name = "autorotateToPortrait", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Screen_Wrap.G_autorotateToPortrait, PropertySetter = UnityEngine_Screen_Wrap.S_autorotateToPortrait
#endif
                    }},
                    {"autorotateToPortraitUpsideDown_static", new MemberRegisterInfo { Name = "autorotateToPortraitUpsideDown", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Screen_Wrap.G_autorotateToPortraitUpsideDown, PropertySetter = UnityEngine_Screen_Wrap.S_autorotateToPortraitUpsideDown
#endif
                    }},
                    {"autorotateToLandscapeLeft_static", new MemberRegisterInfo { Name = "autorotateToLandscapeLeft", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Screen_Wrap.G_autorotateToLandscapeLeft, PropertySetter = UnityEngine_Screen_Wrap.S_autorotateToLandscapeLeft
#endif
                    }},
                    {"autorotateToLandscapeRight_static", new MemberRegisterInfo { Name = "autorotateToLandscapeRight", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Screen_Wrap.G_autorotateToLandscapeRight, PropertySetter = UnityEngine_Screen_Wrap.S_autorotateToLandscapeRight
#endif
                    }},
                    {"orientation_static", new MemberRegisterInfo { Name = "orientation", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Screen_Wrap.G_orientation, PropertySetter = UnityEngine_Screen_Wrap.S_orientation
#endif
                    }},
                    {"sleepTimeout_static", new MemberRegisterInfo { Name = "sleepTimeout", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Screen_Wrap.G_sleepTimeout, PropertySetter = UnityEngine_Screen_Wrap.S_sleepTimeout
#endif
                    }},
                    {"brightness_static", new MemberRegisterInfo { Name = "brightness", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Screen_Wrap.G_brightness, PropertySetter = UnityEngine_Screen_Wrap.S_brightness
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RenderBuffer_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_RenderBuffer_Wrap.Constructor
#endif
                    }},
                    {"GetNativeRenderBufferPtr", new MemberRegisterInfo { Name = "GetNativeRenderBufferPtr", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RenderBuffer_Wrap.M_GetNativeRenderBufferPtr
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Graphics_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Graphics_Wrap.Constructor
#endif
                    }},
                    {"ClearRandomWriteTargets_static", new MemberRegisterInfo { Name = "ClearRandomWriteTargets", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_ClearRandomWriteTargets
#endif
                    }},
                    {"ExecuteCommandBuffer_static", new MemberRegisterInfo { Name = "ExecuteCommandBuffer", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_ExecuteCommandBuffer
#endif
                    }},
                    {"ExecuteCommandBufferAsync_static", new MemberRegisterInfo { Name = "ExecuteCommandBufferAsync", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_ExecuteCommandBufferAsync
#endif
                    }},
                    {"SetRenderTarget_static", new MemberRegisterInfo { Name = "SetRenderTarget", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_SetRenderTarget
#endif
                    }},
                    {"SetRandomWriteTarget_static", new MemberRegisterInfo { Name = "SetRandomWriteTarget", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_SetRandomWriteTarget
#endif
                    }},
                    {"CopyTexture_static", new MemberRegisterInfo { Name = "CopyTexture", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_CopyTexture
#endif
                    }},
                    {"ConvertTexture_static", new MemberRegisterInfo { Name = "ConvertTexture", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_ConvertTexture
#endif
                    }},
                    {"CreateAsyncGraphicsFence_static", new MemberRegisterInfo { Name = "CreateAsyncGraphicsFence", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_CreateAsyncGraphicsFence
#endif
                    }},
                    {"CreateGraphicsFence_static", new MemberRegisterInfo { Name = "CreateGraphicsFence", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_CreateGraphicsFence
#endif
                    }},
                    {"WaitOnAsyncGraphicsFence_static", new MemberRegisterInfo { Name = "WaitOnAsyncGraphicsFence", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_WaitOnAsyncGraphicsFence
#endif
                    }},
                    {"DrawTexture_static", new MemberRegisterInfo { Name = "DrawTexture", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_DrawTexture
#endif
                    }},
                    {"DrawMeshNow_static", new MemberRegisterInfo { Name = "DrawMeshNow", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_DrawMeshNow
#endif
                    }},
                    {"DrawMesh_static", new MemberRegisterInfo { Name = "DrawMesh", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_DrawMesh
#endif
                    }},
                    {"DrawMeshInstanced_static", new MemberRegisterInfo { Name = "DrawMeshInstanced", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_DrawMeshInstanced
#endif
                    }},
                    {"DrawMeshInstancedProcedural_static", new MemberRegisterInfo { Name = "DrawMeshInstancedProcedural", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_DrawMeshInstancedProcedural
#endif
                    }},
                    {"DrawMeshInstancedIndirect_static", new MemberRegisterInfo { Name = "DrawMeshInstancedIndirect", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_DrawMeshInstancedIndirect
#endif
                    }},
                    {"DrawProceduralNow_static", new MemberRegisterInfo { Name = "DrawProceduralNow", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_DrawProceduralNow
#endif
                    }},
                    {"DrawProceduralIndirectNow_static", new MemberRegisterInfo { Name = "DrawProceduralIndirectNow", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_DrawProceduralIndirectNow
#endif
                    }},
                    {"DrawProcedural_static", new MemberRegisterInfo { Name = "DrawProcedural", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_DrawProcedural
#endif
                    }},
                    {"DrawProceduralIndirect_static", new MemberRegisterInfo { Name = "DrawProceduralIndirect", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_DrawProceduralIndirect
#endif
                    }},
                    {"Blit_static", new MemberRegisterInfo { Name = "Blit", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_Blit
#endif
                    }},
                    {"BlitMultiTap_static", new MemberRegisterInfo { Name = "BlitMultiTap", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Graphics_Wrap.F_BlitMultiTap
#endif
                    }},
                    {"activeColorGamut_static", new MemberRegisterInfo { Name = "activeColorGamut", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Graphics_Wrap.G_activeColorGamut
#endif
                    }},
                    {"activeTier_static", new MemberRegisterInfo { Name = "activeTier", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Graphics_Wrap.G_activeTier, PropertySetter = UnityEngine_Graphics_Wrap.S_activeTier
#endif
                    }},
                    {"preserveFramebufferAlpha_static", new MemberRegisterInfo { Name = "preserveFramebufferAlpha", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Graphics_Wrap.G_preserveFramebufferAlpha
#endif
                    }},
                    {"minOpenGLESVersion_static", new MemberRegisterInfo { Name = "minOpenGLESVersion", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Graphics_Wrap.G_minOpenGLESVersion
#endif
                    }},
                    {"activeColorBuffer_static", new MemberRegisterInfo { Name = "activeColorBuffer", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Graphics_Wrap.G_activeColorBuffer
#endif
                    }},
                    {"activeDepthBuffer_static", new MemberRegisterInfo { Name = "activeDepthBuffer", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Graphics_Wrap.G_activeDepthBuffer
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_GL_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_GL_Wrap.Constructor
#endif
                    }},
                    {"Vertex3_static", new MemberRegisterInfo { Name = "Vertex3", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_Vertex3
#endif
                    }},
                    {"Vertex_static", new MemberRegisterInfo { Name = "Vertex", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_Vertex
#endif
                    }},
                    {"TexCoord3_static", new MemberRegisterInfo { Name = "TexCoord3", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_TexCoord3
#endif
                    }},
                    {"TexCoord_static", new MemberRegisterInfo { Name = "TexCoord", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_TexCoord
#endif
                    }},
                    {"TexCoord2_static", new MemberRegisterInfo { Name = "TexCoord2", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_TexCoord2
#endif
                    }},
                    {"MultiTexCoord3_static", new MemberRegisterInfo { Name = "MultiTexCoord3", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_MultiTexCoord3
#endif
                    }},
                    {"MultiTexCoord_static", new MemberRegisterInfo { Name = "MultiTexCoord", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_MultiTexCoord
#endif
                    }},
                    {"MultiTexCoord2_static", new MemberRegisterInfo { Name = "MultiTexCoord2", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_MultiTexCoord2
#endif
                    }},
                    {"Color_static", new MemberRegisterInfo { Name = "Color", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_Color
#endif
                    }},
                    {"Flush_static", new MemberRegisterInfo { Name = "Flush", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_Flush
#endif
                    }},
                    {"RenderTargetBarrier_static", new MemberRegisterInfo { Name = "RenderTargetBarrier", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_RenderTargetBarrier
#endif
                    }},
                    {"MultMatrix_static", new MemberRegisterInfo { Name = "MultMatrix", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_MultMatrix
#endif
                    }},
                    {"PushMatrix_static", new MemberRegisterInfo { Name = "PushMatrix", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_PushMatrix
#endif
                    }},
                    {"PopMatrix_static", new MemberRegisterInfo { Name = "PopMatrix", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_PopMatrix
#endif
                    }},
                    {"LoadIdentity_static", new MemberRegisterInfo { Name = "LoadIdentity", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_LoadIdentity
#endif
                    }},
                    {"LoadOrtho_static", new MemberRegisterInfo { Name = "LoadOrtho", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_LoadOrtho
#endif
                    }},
                    {"LoadPixelMatrix_static", new MemberRegisterInfo { Name = "LoadPixelMatrix", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_LoadPixelMatrix
#endif
                    }},
                    {"LoadProjectionMatrix_static", new MemberRegisterInfo { Name = "LoadProjectionMatrix", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_LoadProjectionMatrix
#endif
                    }},
                    {"InvalidateState_static", new MemberRegisterInfo { Name = "InvalidateState", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_InvalidateState
#endif
                    }},
                    {"GetGPUProjectionMatrix_static", new MemberRegisterInfo { Name = "GetGPUProjectionMatrix", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_GetGPUProjectionMatrix
#endif
                    }},
                    {"IssuePluginEvent_static", new MemberRegisterInfo { Name = "IssuePluginEvent", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_IssuePluginEvent
#endif
                    }},
                    {"Begin_static", new MemberRegisterInfo { Name = "Begin", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_Begin
#endif
                    }},
                    {"End_static", new MemberRegisterInfo { Name = "End", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_End
#endif
                    }},
                    {"Clear_static", new MemberRegisterInfo { Name = "Clear", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_Clear
#endif
                    }},
                    {"Viewport_static", new MemberRegisterInfo { Name = "Viewport", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_Viewport
#endif
                    }},
                    {"ClearWithSkybox_static", new MemberRegisterInfo { Name = "ClearWithSkybox", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GL_Wrap.F_ClearWithSkybox
#endif
                    }},
                    {"wireframe_static", new MemberRegisterInfo { Name = "wireframe", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GL_Wrap.G_wireframe, PropertySetter = UnityEngine_GL_Wrap.S_wireframe
#endif
                    }},
                    {"sRGBWrite_static", new MemberRegisterInfo { Name = "sRGBWrite", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GL_Wrap.G_sRGBWrite, PropertySetter = UnityEngine_GL_Wrap.S_sRGBWrite
#endif
                    }},
                    {"invertCulling_static", new MemberRegisterInfo { Name = "invertCulling", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GL_Wrap.G_invertCulling, PropertySetter = UnityEngine_GL_Wrap.S_invertCulling
#endif
                    }},
                    {"modelview_static", new MemberRegisterInfo { Name = "modelview", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GL_Wrap.G_modelview, PropertySetter = UnityEngine_GL_Wrap.S_modelview
#endif
                    }},
                    {"TRIANGLES_static", new MemberRegisterInfo { Name = "TRIANGLES", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GL_Wrap.G_TRIANGLES
#endif
                    }},
                    {"TRIANGLE_STRIP_static", new MemberRegisterInfo { Name = "TRIANGLE_STRIP", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GL_Wrap.G_TRIANGLE_STRIP
#endif
                    }},
                    {"QUADS_static", new MemberRegisterInfo { Name = "QUADS", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GL_Wrap.G_QUADS
#endif
                    }},
                    {"LINES_static", new MemberRegisterInfo { Name = "LINES", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GL_Wrap.G_LINES
#endif
                    }},
                    {"LINE_STRIP_static", new MemberRegisterInfo { Name = "LINE_STRIP", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GL_Wrap.G_LINE_STRIP
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ScalableBufferManager_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"ResizeBuffers_static", new MemberRegisterInfo { Name = "ResizeBuffers", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ScalableBufferManager_Wrap.F_ResizeBuffers
#endif
                    }},
                    {"widthScaleFactor_static", new MemberRegisterInfo { Name = "widthScaleFactor", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ScalableBufferManager_Wrap.G_widthScaleFactor
#endif
                    }},
                    {"heightScaleFactor_static", new MemberRegisterInfo { Name = "heightScaleFactor", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ScalableBufferManager_Wrap.G_heightScaleFactor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_FrameTiming_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_FrameTiming_Wrap.Constructor
#endif
                    }},
                    {"cpuTimePresentCalled", new MemberRegisterInfo { Name = "cpuTimePresentCalled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_FrameTiming_Wrap.G_cpuTimePresentCalled, PropertySetter = UnityEngine_FrameTiming_Wrap.S_cpuTimePresentCalled
#endif
                    }},
                    {"cpuFrameTime", new MemberRegisterInfo { Name = "cpuFrameTime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_FrameTiming_Wrap.G_cpuFrameTime, PropertySetter = UnityEngine_FrameTiming_Wrap.S_cpuFrameTime
#endif
                    }},
                    {"cpuTimeFrameComplete", new MemberRegisterInfo { Name = "cpuTimeFrameComplete", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_FrameTiming_Wrap.G_cpuTimeFrameComplete, PropertySetter = UnityEngine_FrameTiming_Wrap.S_cpuTimeFrameComplete
#endif
                    }},
                    {"gpuFrameTime", new MemberRegisterInfo { Name = "gpuFrameTime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_FrameTiming_Wrap.G_gpuFrameTime, PropertySetter = UnityEngine_FrameTiming_Wrap.S_gpuFrameTime
#endif
                    }},
                    {"heightScale", new MemberRegisterInfo { Name = "heightScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_FrameTiming_Wrap.G_heightScale, PropertySetter = UnityEngine_FrameTiming_Wrap.S_heightScale
#endif
                    }},
                    {"widthScale", new MemberRegisterInfo { Name = "widthScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_FrameTiming_Wrap.G_widthScale, PropertySetter = UnityEngine_FrameTiming_Wrap.S_widthScale
#endif
                    }},
                    {"syncInterval", new MemberRegisterInfo { Name = "syncInterval", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_FrameTiming_Wrap.G_syncInterval, PropertySetter = UnityEngine_FrameTiming_Wrap.S_syncInterval
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_FrameTimingManager_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"CaptureFrameTimings_static", new MemberRegisterInfo { Name = "CaptureFrameTimings", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_FrameTimingManager_Wrap.F_CaptureFrameTimings
#endif
                    }},
                    {"GetLatestTimings_static", new MemberRegisterInfo { Name = "GetLatestTimings", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_FrameTimingManager_Wrap.F_GetLatestTimings
#endif
                    }},
                    {"GetVSyncsPerSecond_static", new MemberRegisterInfo { Name = "GetVSyncsPerSecond", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_FrameTimingManager_Wrap.F_GetVSyncsPerSecond
#endif
                    }},
                    {"GetGpuTimerFrequency_static", new MemberRegisterInfo { Name = "GetGpuTimerFrequency", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_FrameTimingManager_Wrap.F_GetGpuTimerFrequency
#endif
                    }},
                    {"GetCpuTimerFrequency_static", new MemberRegisterInfo { Name = "GetCpuTimerFrequency", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_FrameTimingManager_Wrap.F_GetCpuTimerFrequency
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_LightmapData_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_LightmapData_Wrap.Constructor
#endif
                    }},
                    {"lightmapColor", new MemberRegisterInfo { Name = "lightmapColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightmapData_Wrap.G_lightmapColor, PropertySetter = UnityEngine_LightmapData_Wrap.S_lightmapColor
#endif
                    }},
                    {"lightmapDir", new MemberRegisterInfo { Name = "lightmapDir", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightmapData_Wrap.G_lightmapDir, PropertySetter = UnityEngine_LightmapData_Wrap.S_lightmapDir
#endif
                    }},
                    {"shadowMask", new MemberRegisterInfo { Name = "shadowMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightmapData_Wrap.G_shadowMask, PropertySetter = UnityEngine_LightmapData_Wrap.S_shadowMask
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_LightmapSettings_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"lightmaps_static", new MemberRegisterInfo { Name = "lightmaps", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightmapSettings_Wrap.G_lightmaps, PropertySetter = UnityEngine_LightmapSettings_Wrap.S_lightmaps
#endif
                    }},
                    {"lightmapsMode_static", new MemberRegisterInfo { Name = "lightmapsMode", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightmapSettings_Wrap.G_lightmapsMode, PropertySetter = UnityEngine_LightmapSettings_Wrap.S_lightmapsMode
#endif
                    }},
                    {"lightProbes_static", new MemberRegisterInfo { Name = "lightProbes", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightmapSettings_Wrap.G_lightProbes, PropertySetter = UnityEngine_LightmapSettings_Wrap.S_lightProbes
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_LightProbes_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"add_tetrahedralizationCompleted_static", new MemberRegisterInfo { Name = "add_tetrahedralizationCompleted", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LightProbes_Wrap.A_tetrahedralizationCompleted
#endif
                    }},
                    {"remove_tetrahedralizationCompleted_static", new MemberRegisterInfo { Name = "remove_tetrahedralizationCompleted", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LightProbes_Wrap.R_tetrahedralizationCompleted
#endif
                    }},
                    {"add_needsRetetrahedralization_static", new MemberRegisterInfo { Name = "add_needsRetetrahedralization", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LightProbes_Wrap.A_needsRetetrahedralization
#endif
                    }},
                    {"remove_needsRetetrahedralization_static", new MemberRegisterInfo { Name = "remove_needsRetetrahedralization", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LightProbes_Wrap.R_needsRetetrahedralization
#endif
                    }},
                    {"positions", new MemberRegisterInfo { Name = "positions", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightProbes_Wrap.G_positions
#endif
                    }},
                    {"bakedProbes", new MemberRegisterInfo { Name = "bakedProbes", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightProbes_Wrap.G_bakedProbes, PropertySetter = UnityEngine_LightProbes_Wrap.S_bakedProbes
#endif
                    }},
                    {"count", new MemberRegisterInfo { Name = "count", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightProbes_Wrap.G_count
#endif
                    }},
                    {"cellCount", new MemberRegisterInfo { Name = "cellCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightProbes_Wrap.G_cellCount
#endif
                    }},
                    {"Tetrahedralize_static", new MemberRegisterInfo { Name = "Tetrahedralize", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LightProbes_Wrap.F_Tetrahedralize
#endif
                    }},
                    {"TetrahedralizeAsync_static", new MemberRegisterInfo { Name = "TetrahedralizeAsync", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LightProbes_Wrap.F_TetrahedralizeAsync
#endif
                    }},
                    {"GetInterpolatedProbe_static", new MemberRegisterInfo { Name = "GetInterpolatedProbe", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LightProbes_Wrap.F_GetInterpolatedProbe
#endif
                    }},
                    {"CalculateInterpolatedLightAndOcclusionProbes_static", new MemberRegisterInfo { Name = "CalculateInterpolatedLightAndOcclusionProbes", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LightProbes_Wrap.F_CalculateInterpolatedLightAndOcclusionProbes
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_HDROutputSettings_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"RequestHDRModeChange", new MemberRegisterInfo { Name = "RequestHDRModeChange", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_HDROutputSettings_Wrap.M_RequestHDRModeChange
#endif
                    }},
                    {"active", new MemberRegisterInfo { Name = "active", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HDROutputSettings_Wrap.G_active
#endif
                    }},
                    {"available", new MemberRegisterInfo { Name = "available", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HDROutputSettings_Wrap.G_available
#endif
                    }},
                    {"automaticHDRTonemapping", new MemberRegisterInfo { Name = "automaticHDRTonemapping", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HDROutputSettings_Wrap.G_automaticHDRTonemapping, PropertySetter = UnityEngine_HDROutputSettings_Wrap.S_automaticHDRTonemapping
#endif
                    }},
                    {"displayColorGamut", new MemberRegisterInfo { Name = "displayColorGamut", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HDROutputSettings_Wrap.G_displayColorGamut
#endif
                    }},
                    {"format", new MemberRegisterInfo { Name = "format", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HDROutputSettings_Wrap.G_format
#endif
                    }},
                    {"graphicsFormat", new MemberRegisterInfo { Name = "graphicsFormat", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HDROutputSettings_Wrap.G_graphicsFormat
#endif
                    }},
                    {"paperWhiteNits", new MemberRegisterInfo { Name = "paperWhiteNits", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HDROutputSettings_Wrap.G_paperWhiteNits, PropertySetter = UnityEngine_HDROutputSettings_Wrap.S_paperWhiteNits
#endif
                    }},
                    {"maxFullFrameToneMapLuminance", new MemberRegisterInfo { Name = "maxFullFrameToneMapLuminance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HDROutputSettings_Wrap.G_maxFullFrameToneMapLuminance
#endif
                    }},
                    {"maxToneMapLuminance", new MemberRegisterInfo { Name = "maxToneMapLuminance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HDROutputSettings_Wrap.G_maxToneMapLuminance
#endif
                    }},
                    {"minToneMapLuminance", new MemberRegisterInfo { Name = "minToneMapLuminance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HDROutputSettings_Wrap.G_minToneMapLuminance
#endif
                    }},
                    {"HDRModeChangeRequested", new MemberRegisterInfo { Name = "HDRModeChangeRequested", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HDROutputSettings_Wrap.G_HDRModeChangeRequested
#endif
                    }},
                    {"main_static", new MemberRegisterInfo { Name = "main", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HDROutputSettings_Wrap.G_main
#endif
                    }},
                    {"displays_static", new MemberRegisterInfo { Name = "displays", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HDROutputSettings_Wrap.G_displays, PropertySetter = UnityEngine_HDROutputSettings_Wrap.S_displays
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Resolution_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Resolution_Wrap.Constructor
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Resolution_Wrap.M_ToString
#endif
                    }},
                    {"width", new MemberRegisterInfo { Name = "width", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Resolution_Wrap.G_width, PropertySetter = UnityEngine_Resolution_Wrap.S_width
#endif
                    }},
                    {"height", new MemberRegisterInfo { Name = "height", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Resolution_Wrap.G_height, PropertySetter = UnityEngine_Resolution_Wrap.S_height
#endif
                    }},
                    {"refreshRate", new MemberRegisterInfo { Name = "refreshRate", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Resolution_Wrap.G_refreshRate, PropertySetter = UnityEngine_Resolution_Wrap.S_refreshRate
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RenderTargetSetup_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_RenderTargetSetup_Wrap.Constructor
#endif
                    }},
                    {"color", new MemberRegisterInfo { Name = "color", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTargetSetup_Wrap.G_color, PropertySetter = UnityEngine_RenderTargetSetup_Wrap.S_color
#endif
                    }},
                    {"depth", new MemberRegisterInfo { Name = "depth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTargetSetup_Wrap.G_depth, PropertySetter = UnityEngine_RenderTargetSetup_Wrap.S_depth
#endif
                    }},
                    {"mipLevel", new MemberRegisterInfo { Name = "mipLevel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTargetSetup_Wrap.G_mipLevel, PropertySetter = UnityEngine_RenderTargetSetup_Wrap.S_mipLevel
#endif
                    }},
                    {"cubemapFace", new MemberRegisterInfo { Name = "cubemapFace", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTargetSetup_Wrap.G_cubemapFace, PropertySetter = UnityEngine_RenderTargetSetup_Wrap.S_cubemapFace
#endif
                    }},
                    {"depthSlice", new MemberRegisterInfo { Name = "depthSlice", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTargetSetup_Wrap.G_depthSlice, PropertySetter = UnityEngine_RenderTargetSetup_Wrap.S_depthSlice
#endif
                    }},
                    {"colorLoad", new MemberRegisterInfo { Name = "colorLoad", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTargetSetup_Wrap.G_colorLoad, PropertySetter = UnityEngine_RenderTargetSetup_Wrap.S_colorLoad
#endif
                    }},
                    {"colorStore", new MemberRegisterInfo { Name = "colorStore", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTargetSetup_Wrap.G_colorStore, PropertySetter = UnityEngine_RenderTargetSetup_Wrap.S_colorStore
#endif
                    }},
                    {"depthLoad", new MemberRegisterInfo { Name = "depthLoad", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTargetSetup_Wrap.G_depthLoad, PropertySetter = UnityEngine_RenderTargetSetup_Wrap.S_depthLoad
#endif
                    }},
                    {"depthStore", new MemberRegisterInfo { Name = "depthStore", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTargetSetup_Wrap.G_depthStore, PropertySetter = UnityEngine_RenderTargetSetup_Wrap.S_depthStore
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_QualitySettings_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"IncreaseLevel_static", new MemberRegisterInfo { Name = "IncreaseLevel", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_QualitySettings_Wrap.F_IncreaseLevel
#endif
                    }},
                    {"DecreaseLevel_static", new MemberRegisterInfo { Name = "DecreaseLevel", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_QualitySettings_Wrap.F_DecreaseLevel
#endif
                    }},
                    {"SetQualityLevel_static", new MemberRegisterInfo { Name = "SetQualityLevel", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_QualitySettings_Wrap.F_SetQualityLevel
#endif
                    }},
                    {"GetRenderPipelineAssetAt_static", new MemberRegisterInfo { Name = "GetRenderPipelineAssetAt", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_QualitySettings_Wrap.F_GetRenderPipelineAssetAt
#endif
                    }},
                    {"GetQualityLevel_static", new MemberRegisterInfo { Name = "GetQualityLevel", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_QualitySettings_Wrap.F_GetQualityLevel
#endif
                    }},
                    {"pixelLightCount_static", new MemberRegisterInfo { Name = "pixelLightCount", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_pixelLightCount, PropertySetter = UnityEngine_QualitySettings_Wrap.S_pixelLightCount
#endif
                    }},
                    {"shadows_static", new MemberRegisterInfo { Name = "shadows", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_shadows, PropertySetter = UnityEngine_QualitySettings_Wrap.S_shadows
#endif
                    }},
                    {"shadowProjection_static", new MemberRegisterInfo { Name = "shadowProjection", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_shadowProjection, PropertySetter = UnityEngine_QualitySettings_Wrap.S_shadowProjection
#endif
                    }},
                    {"shadowCascades_static", new MemberRegisterInfo { Name = "shadowCascades", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_shadowCascades, PropertySetter = UnityEngine_QualitySettings_Wrap.S_shadowCascades
#endif
                    }},
                    {"shadowDistance_static", new MemberRegisterInfo { Name = "shadowDistance", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_shadowDistance, PropertySetter = UnityEngine_QualitySettings_Wrap.S_shadowDistance
#endif
                    }},
                    {"shadowResolution_static", new MemberRegisterInfo { Name = "shadowResolution", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_shadowResolution, PropertySetter = UnityEngine_QualitySettings_Wrap.S_shadowResolution
#endif
                    }},
                    {"shadowmaskMode_static", new MemberRegisterInfo { Name = "shadowmaskMode", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_shadowmaskMode, PropertySetter = UnityEngine_QualitySettings_Wrap.S_shadowmaskMode
#endif
                    }},
                    {"shadowNearPlaneOffset_static", new MemberRegisterInfo { Name = "shadowNearPlaneOffset", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_shadowNearPlaneOffset, PropertySetter = UnityEngine_QualitySettings_Wrap.S_shadowNearPlaneOffset
#endif
                    }},
                    {"shadowCascade2Split_static", new MemberRegisterInfo { Name = "shadowCascade2Split", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_shadowCascade2Split, PropertySetter = UnityEngine_QualitySettings_Wrap.S_shadowCascade2Split
#endif
                    }},
                    {"shadowCascade4Split_static", new MemberRegisterInfo { Name = "shadowCascade4Split", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_shadowCascade4Split, PropertySetter = UnityEngine_QualitySettings_Wrap.S_shadowCascade4Split
#endif
                    }},
                    {"lodBias_static", new MemberRegisterInfo { Name = "lodBias", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_lodBias, PropertySetter = UnityEngine_QualitySettings_Wrap.S_lodBias
#endif
                    }},
                    {"anisotropicFiltering_static", new MemberRegisterInfo { Name = "anisotropicFiltering", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_anisotropicFiltering, PropertySetter = UnityEngine_QualitySettings_Wrap.S_anisotropicFiltering
#endif
                    }},
                    {"masterTextureLimit_static", new MemberRegisterInfo { Name = "masterTextureLimit", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_masterTextureLimit, PropertySetter = UnityEngine_QualitySettings_Wrap.S_masterTextureLimit
#endif
                    }},
                    {"maximumLODLevel_static", new MemberRegisterInfo { Name = "maximumLODLevel", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_maximumLODLevel, PropertySetter = UnityEngine_QualitySettings_Wrap.S_maximumLODLevel
#endif
                    }},
                    {"particleRaycastBudget_static", new MemberRegisterInfo { Name = "particleRaycastBudget", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_particleRaycastBudget, PropertySetter = UnityEngine_QualitySettings_Wrap.S_particleRaycastBudget
#endif
                    }},
                    {"softParticles_static", new MemberRegisterInfo { Name = "softParticles", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_softParticles, PropertySetter = UnityEngine_QualitySettings_Wrap.S_softParticles
#endif
                    }},
                    {"softVegetation_static", new MemberRegisterInfo { Name = "softVegetation", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_softVegetation, PropertySetter = UnityEngine_QualitySettings_Wrap.S_softVegetation
#endif
                    }},
                    {"vSyncCount_static", new MemberRegisterInfo { Name = "vSyncCount", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_vSyncCount, PropertySetter = UnityEngine_QualitySettings_Wrap.S_vSyncCount
#endif
                    }},
                    {"antiAliasing_static", new MemberRegisterInfo { Name = "antiAliasing", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_antiAliasing, PropertySetter = UnityEngine_QualitySettings_Wrap.S_antiAliasing
#endif
                    }},
                    {"asyncUploadTimeSlice_static", new MemberRegisterInfo { Name = "asyncUploadTimeSlice", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_asyncUploadTimeSlice, PropertySetter = UnityEngine_QualitySettings_Wrap.S_asyncUploadTimeSlice
#endif
                    }},
                    {"asyncUploadBufferSize_static", new MemberRegisterInfo { Name = "asyncUploadBufferSize", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_asyncUploadBufferSize, PropertySetter = UnityEngine_QualitySettings_Wrap.S_asyncUploadBufferSize
#endif
                    }},
                    {"asyncUploadPersistentBuffer_static", new MemberRegisterInfo { Name = "asyncUploadPersistentBuffer", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_asyncUploadPersistentBuffer, PropertySetter = UnityEngine_QualitySettings_Wrap.S_asyncUploadPersistentBuffer
#endif
                    }},
                    {"realtimeReflectionProbes_static", new MemberRegisterInfo { Name = "realtimeReflectionProbes", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_realtimeReflectionProbes, PropertySetter = UnityEngine_QualitySettings_Wrap.S_realtimeReflectionProbes
#endif
                    }},
                    {"billboardsFaceCameraPosition_static", new MemberRegisterInfo { Name = "billboardsFaceCameraPosition", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_billboardsFaceCameraPosition, PropertySetter = UnityEngine_QualitySettings_Wrap.S_billboardsFaceCameraPosition
#endif
                    }},
                    {"resolutionScalingFixedDPIFactor_static", new MemberRegisterInfo { Name = "resolutionScalingFixedDPIFactor", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_resolutionScalingFixedDPIFactor, PropertySetter = UnityEngine_QualitySettings_Wrap.S_resolutionScalingFixedDPIFactor
#endif
                    }},
                    {"renderPipeline_static", new MemberRegisterInfo { Name = "renderPipeline", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_renderPipeline, PropertySetter = UnityEngine_QualitySettings_Wrap.S_renderPipeline
#endif
                    }},
                    {"skinWeights_static", new MemberRegisterInfo { Name = "skinWeights", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_skinWeights, PropertySetter = UnityEngine_QualitySettings_Wrap.S_skinWeights
#endif
                    }},
                    {"streamingMipmapsActive_static", new MemberRegisterInfo { Name = "streamingMipmapsActive", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_streamingMipmapsActive, PropertySetter = UnityEngine_QualitySettings_Wrap.S_streamingMipmapsActive
#endif
                    }},
                    {"streamingMipmapsMemoryBudget_static", new MemberRegisterInfo { Name = "streamingMipmapsMemoryBudget", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_streamingMipmapsMemoryBudget, PropertySetter = UnityEngine_QualitySettings_Wrap.S_streamingMipmapsMemoryBudget
#endif
                    }},
                    {"streamingMipmapsRenderersPerFrame_static", new MemberRegisterInfo { Name = "streamingMipmapsRenderersPerFrame", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"streamingMipmapsMaxLevelReduction_static", new MemberRegisterInfo { Name = "streamingMipmapsMaxLevelReduction", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_streamingMipmapsMaxLevelReduction, PropertySetter = UnityEngine_QualitySettings_Wrap.S_streamingMipmapsMaxLevelReduction
#endif
                    }},
                    {"streamingMipmapsAddAllCameras_static", new MemberRegisterInfo { Name = "streamingMipmapsAddAllCameras", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_streamingMipmapsAddAllCameras, PropertySetter = UnityEngine_QualitySettings_Wrap.S_streamingMipmapsAddAllCameras
#endif
                    }},
                    {"streamingMipmapsMaxFileIORequests_static", new MemberRegisterInfo { Name = "streamingMipmapsMaxFileIORequests", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_streamingMipmapsMaxFileIORequests, PropertySetter = UnityEngine_QualitySettings_Wrap.S_streamingMipmapsMaxFileIORequests
#endif
                    }},
                    {"maxQueuedFrames_static", new MemberRegisterInfo { Name = "maxQueuedFrames", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_maxQueuedFrames, PropertySetter = UnityEngine_QualitySettings_Wrap.S_maxQueuedFrames
#endif
                    }},
                    {"names_static", new MemberRegisterInfo { Name = "names", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_names
#endif
                    }},
                    {"desiredColorSpace_static", new MemberRegisterInfo { Name = "desiredColorSpace", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_desiredColorSpace
#endif
                    }},
                    {"activeColorSpace_static", new MemberRegisterInfo { Name = "activeColorSpace", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_QualitySettings_Wrap.G_activeColorSpace
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RendererExtensions_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"UpdateGIMaterials_static", new MemberRegisterInfo { Name = "UpdateGIMaterials", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RendererExtensions_Wrap.F_UpdateGIMaterials
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ImageEffectTransformsToLDR_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ImageEffectTransformsToLDR_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ImageEffectAllowedInSceneView_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ImageEffectAllowedInSceneView_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ImageEffectOpaque_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ImageEffectOpaque_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ImageEffectAfterScale_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ImageEffectAfterScale_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ImageEffectUsesCommandBuffer_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ImageEffectUsesCommandBuffer_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Mesh_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Mesh_Wrap.Constructor
#endif
                    }},
                    {"SetIndexBufferParams", new MemberRegisterInfo { Name = "SetIndexBufferParams", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_SetIndexBufferParams
#endif
                    }},
                    {"GetVertexAttribute", new MemberRegisterInfo { Name = "GetVertexAttribute", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetVertexAttribute
#endif
                    }},
                    {"HasVertexAttribute", new MemberRegisterInfo { Name = "HasVertexAttribute", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_HasVertexAttribute
#endif
                    }},
                    {"GetVertexAttributeDimension", new MemberRegisterInfo { Name = "GetVertexAttributeDimension", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetVertexAttributeDimension
#endif
                    }},
                    {"GetVertexAttributeFormat", new MemberRegisterInfo { Name = "GetVertexAttributeFormat", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetVertexAttributeFormat
#endif
                    }},
                    {"GetNativeVertexBufferPtr", new MemberRegisterInfo { Name = "GetNativeVertexBufferPtr", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetNativeVertexBufferPtr
#endif
                    }},
                    {"GetNativeIndexBufferPtr", new MemberRegisterInfo { Name = "GetNativeIndexBufferPtr", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetNativeIndexBufferPtr
#endif
                    }},
                    {"ClearBlendShapes", new MemberRegisterInfo { Name = "ClearBlendShapes", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_ClearBlendShapes
#endif
                    }},
                    {"GetBlendShapeName", new MemberRegisterInfo { Name = "GetBlendShapeName", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetBlendShapeName
#endif
                    }},
                    {"GetBlendShapeIndex", new MemberRegisterInfo { Name = "GetBlendShapeIndex", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetBlendShapeIndex
#endif
                    }},
                    {"GetBlendShapeFrameCount", new MemberRegisterInfo { Name = "GetBlendShapeFrameCount", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetBlendShapeFrameCount
#endif
                    }},
                    {"GetBlendShapeFrameWeight", new MemberRegisterInfo { Name = "GetBlendShapeFrameWeight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetBlendShapeFrameWeight
#endif
                    }},
                    {"GetBlendShapeFrameVertices", new MemberRegisterInfo { Name = "GetBlendShapeFrameVertices", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetBlendShapeFrameVertices
#endif
                    }},
                    {"AddBlendShapeFrame", new MemberRegisterInfo { Name = "AddBlendShapeFrame", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_AddBlendShapeFrame
#endif
                    }},
                    {"SetBoneWeights", new MemberRegisterInfo { Name = "SetBoneWeights", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_SetBoneWeights
#endif
                    }},
                    {"GetAllBoneWeights", new MemberRegisterInfo { Name = "GetAllBoneWeights", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetAllBoneWeights
#endif
                    }},
                    {"GetBonesPerVertex", new MemberRegisterInfo { Name = "GetBonesPerVertex", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetBonesPerVertex
#endif
                    }},
                    {"SetSubMesh", new MemberRegisterInfo { Name = "SetSubMesh", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_SetSubMesh
#endif
                    }},
                    {"GetSubMesh", new MemberRegisterInfo { Name = "GetSubMesh", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetSubMesh
#endif
                    }},
                    {"MarkModified", new MemberRegisterInfo { Name = "MarkModified", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_MarkModified
#endif
                    }},
                    {"GetUVDistributionMetric", new MemberRegisterInfo { Name = "GetUVDistributionMetric", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetUVDistributionMetric
#endif
                    }},
                    {"GetVertices", new MemberRegisterInfo { Name = "GetVertices", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetVertices
#endif
                    }},
                    {"SetVertices", new MemberRegisterInfo { Name = "SetVertices", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_SetVertices
#endif
                    }},
                    {"GetNormals", new MemberRegisterInfo { Name = "GetNormals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetNormals
#endif
                    }},
                    {"SetNormals", new MemberRegisterInfo { Name = "SetNormals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_SetNormals
#endif
                    }},
                    {"GetTangents", new MemberRegisterInfo { Name = "GetTangents", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetTangents
#endif
                    }},
                    {"SetTangents", new MemberRegisterInfo { Name = "SetTangents", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_SetTangents
#endif
                    }},
                    {"GetColors", new MemberRegisterInfo { Name = "GetColors", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetColors
#endif
                    }},
                    {"SetColors", new MemberRegisterInfo { Name = "SetColors", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_SetColors
#endif
                    }},
                    {"SetUVs", new MemberRegisterInfo { Name = "SetUVs", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_SetUVs
#endif
                    }},
                    {"GetUVs", new MemberRegisterInfo { Name = "GetUVs", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetUVs
#endif
                    }},
                    {"GetVertexAttributes", new MemberRegisterInfo { Name = "GetVertexAttributes", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetVertexAttributes
#endif
                    }},
                    {"SetVertexBufferParams", new MemberRegisterInfo { Name = "SetVertexBufferParams", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_SetVertexBufferParams
#endif
                    }},
                    {"GetTriangles", new MemberRegisterInfo { Name = "GetTriangles", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetTriangles
#endif
                    }},
                    {"GetIndices", new MemberRegisterInfo { Name = "GetIndices", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetIndices
#endif
                    }},
                    {"GetIndexStart", new MemberRegisterInfo { Name = "GetIndexStart", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetIndexStart
#endif
                    }},
                    {"GetIndexCount", new MemberRegisterInfo { Name = "GetIndexCount", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetIndexCount
#endif
                    }},
                    {"GetBaseVertex", new MemberRegisterInfo { Name = "GetBaseVertex", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetBaseVertex
#endif
                    }},
                    {"SetTriangles", new MemberRegisterInfo { Name = "SetTriangles", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_SetTriangles
#endif
                    }},
                    {"SetIndices", new MemberRegisterInfo { Name = "SetIndices", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_SetIndices
#endif
                    }},
                    {"SetSubMeshes", new MemberRegisterInfo { Name = "SetSubMeshes", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_SetSubMeshes
#endif
                    }},
                    {"GetBindposes", new MemberRegisterInfo { Name = "GetBindposes", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetBindposes
#endif
                    }},
                    {"GetBoneWeights", new MemberRegisterInfo { Name = "GetBoneWeights", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetBoneWeights
#endif
                    }},
                    {"Clear", new MemberRegisterInfo { Name = "Clear", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_Clear
#endif
                    }},
                    {"RecalculateBounds", new MemberRegisterInfo { Name = "RecalculateBounds", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_RecalculateBounds
#endif
                    }},
                    {"RecalculateNormals", new MemberRegisterInfo { Name = "RecalculateNormals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_RecalculateNormals
#endif
                    }},
                    {"RecalculateTangents", new MemberRegisterInfo { Name = "RecalculateTangents", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_RecalculateTangents
#endif
                    }},
                    {"RecalculateUVDistributionMetric", new MemberRegisterInfo { Name = "RecalculateUVDistributionMetric", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_RecalculateUVDistributionMetric
#endif
                    }},
                    {"RecalculateUVDistributionMetrics", new MemberRegisterInfo { Name = "RecalculateUVDistributionMetrics", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_RecalculateUVDistributionMetrics
#endif
                    }},
                    {"MarkDynamic", new MemberRegisterInfo { Name = "MarkDynamic", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_MarkDynamic
#endif
                    }},
                    {"UploadMeshData", new MemberRegisterInfo { Name = "UploadMeshData", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_UploadMeshData
#endif
                    }},
                    {"Optimize", new MemberRegisterInfo { Name = "Optimize", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_Optimize
#endif
                    }},
                    {"OptimizeIndexBuffers", new MemberRegisterInfo { Name = "OptimizeIndexBuffers", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_OptimizeIndexBuffers
#endif
                    }},
                    {"OptimizeReorderVertexBuffer", new MemberRegisterInfo { Name = "OptimizeReorderVertexBuffer", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_OptimizeReorderVertexBuffer
#endif
                    }},
                    {"GetTopology", new MemberRegisterInfo { Name = "GetTopology", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_GetTopology
#endif
                    }},
                    {"CombineMeshes", new MemberRegisterInfo { Name = "CombineMeshes", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.M_CombineMeshes
#endif
                    }},
                    {"indexFormat", new MemberRegisterInfo { Name = "indexFormat", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_indexFormat, PropertySetter = UnityEngine_Mesh_Wrap.S_indexFormat
#endif
                    }},
                    {"vertexBufferCount", new MemberRegisterInfo { Name = "vertexBufferCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_vertexBufferCount
#endif
                    }},
                    {"blendShapeCount", new MemberRegisterInfo { Name = "blendShapeCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_blendShapeCount
#endif
                    }},
                    {"bindposes", new MemberRegisterInfo { Name = "bindposes", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_bindposes, PropertySetter = UnityEngine_Mesh_Wrap.S_bindposes
#endif
                    }},
                    {"isReadable", new MemberRegisterInfo { Name = "isReadable", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_isReadable
#endif
                    }},
                    {"vertexCount", new MemberRegisterInfo { Name = "vertexCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_vertexCount
#endif
                    }},
                    {"subMeshCount", new MemberRegisterInfo { Name = "subMeshCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_subMeshCount, PropertySetter = UnityEngine_Mesh_Wrap.S_subMeshCount
#endif
                    }},
                    {"bounds", new MemberRegisterInfo { Name = "bounds", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_bounds, PropertySetter = UnityEngine_Mesh_Wrap.S_bounds
#endif
                    }},
                    {"vertices", new MemberRegisterInfo { Name = "vertices", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_vertices, PropertySetter = UnityEngine_Mesh_Wrap.S_vertices
#endif
                    }},
                    {"normals", new MemberRegisterInfo { Name = "normals", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_normals, PropertySetter = UnityEngine_Mesh_Wrap.S_normals
#endif
                    }},
                    {"tangents", new MemberRegisterInfo { Name = "tangents", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_tangents, PropertySetter = UnityEngine_Mesh_Wrap.S_tangents
#endif
                    }},
                    {"uv", new MemberRegisterInfo { Name = "uv", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_uv, PropertySetter = UnityEngine_Mesh_Wrap.S_uv
#endif
                    }},
                    {"uv2", new MemberRegisterInfo { Name = "uv2", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_uv2, PropertySetter = UnityEngine_Mesh_Wrap.S_uv2
#endif
                    }},
                    {"uv3", new MemberRegisterInfo { Name = "uv3", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_uv3, PropertySetter = UnityEngine_Mesh_Wrap.S_uv3
#endif
                    }},
                    {"uv4", new MemberRegisterInfo { Name = "uv4", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_uv4, PropertySetter = UnityEngine_Mesh_Wrap.S_uv4
#endif
                    }},
                    {"uv5", new MemberRegisterInfo { Name = "uv5", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_uv5, PropertySetter = UnityEngine_Mesh_Wrap.S_uv5
#endif
                    }},
                    {"uv6", new MemberRegisterInfo { Name = "uv6", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_uv6, PropertySetter = UnityEngine_Mesh_Wrap.S_uv6
#endif
                    }},
                    {"uv7", new MemberRegisterInfo { Name = "uv7", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_uv7, PropertySetter = UnityEngine_Mesh_Wrap.S_uv7
#endif
                    }},
                    {"uv8", new MemberRegisterInfo { Name = "uv8", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_uv8, PropertySetter = UnityEngine_Mesh_Wrap.S_uv8
#endif
                    }},
                    {"colors", new MemberRegisterInfo { Name = "colors", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_colors, PropertySetter = UnityEngine_Mesh_Wrap.S_colors
#endif
                    }},
                    {"colors32", new MemberRegisterInfo { Name = "colors32", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_colors32, PropertySetter = UnityEngine_Mesh_Wrap.S_colors32
#endif
                    }},
                    {"vertexAttributeCount", new MemberRegisterInfo { Name = "vertexAttributeCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_vertexAttributeCount
#endif
                    }},
                    {"triangles", new MemberRegisterInfo { Name = "triangles", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_triangles, PropertySetter = UnityEngine_Mesh_Wrap.S_triangles
#endif
                    }},
                    {"boneWeights", new MemberRegisterInfo { Name = "boneWeights", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_Wrap.G_boneWeights, PropertySetter = UnityEngine_Mesh_Wrap.S_boneWeights
#endif
                    }},
                    {"AcquireReadOnlyMeshData_static", new MemberRegisterInfo { Name = "AcquireReadOnlyMeshData", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.F_AcquireReadOnlyMeshData
#endif
                    }},
                    {"AllocateWritableMeshData_static", new MemberRegisterInfo { Name = "AllocateWritableMeshData", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.F_AllocateWritableMeshData
#endif
                    }},
                    {"ApplyAndDisposeWritableMeshData_static", new MemberRegisterInfo { Name = "ApplyAndDisposeWritableMeshData", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_Wrap.F_ApplyAndDisposeWritableMeshData
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Mesh_MeshData_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Mesh_MeshData_Wrap.Constructor
#endif
                    }},
                    {"HasVertexAttribute", new MemberRegisterInfo { Name = "HasVertexAttribute", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_MeshData_Wrap.M_HasVertexAttribute
#endif
                    }},
                    {"GetVertexAttributeDimension", new MemberRegisterInfo { Name = "GetVertexAttributeDimension", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_MeshData_Wrap.M_GetVertexAttributeDimension
#endif
                    }},
                    {"GetVertexAttributeFormat", new MemberRegisterInfo { Name = "GetVertexAttributeFormat", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_MeshData_Wrap.M_GetVertexAttributeFormat
#endif
                    }},
                    {"GetVertices", new MemberRegisterInfo { Name = "GetVertices", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_MeshData_Wrap.M_GetVertices
#endif
                    }},
                    {"GetNormals", new MemberRegisterInfo { Name = "GetNormals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_MeshData_Wrap.M_GetNormals
#endif
                    }},
                    {"GetTangents", new MemberRegisterInfo { Name = "GetTangents", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_MeshData_Wrap.M_GetTangents
#endif
                    }},
                    {"GetColors", new MemberRegisterInfo { Name = "GetColors", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_MeshData_Wrap.M_GetColors
#endif
                    }},
                    {"GetUVs", new MemberRegisterInfo { Name = "GetUVs", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_MeshData_Wrap.M_GetUVs
#endif
                    }},
                    {"SetVertexBufferParams", new MemberRegisterInfo { Name = "SetVertexBufferParams", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_MeshData_Wrap.M_SetVertexBufferParams
#endif
                    }},
                    {"SetIndexBufferParams", new MemberRegisterInfo { Name = "SetIndexBufferParams", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_MeshData_Wrap.M_SetIndexBufferParams
#endif
                    }},
                    {"GetIndices", new MemberRegisterInfo { Name = "GetIndices", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_MeshData_Wrap.M_GetIndices
#endif
                    }},
                    {"GetSubMesh", new MemberRegisterInfo { Name = "GetSubMesh", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_MeshData_Wrap.M_GetSubMesh
#endif
                    }},
                    {"SetSubMesh", new MemberRegisterInfo { Name = "SetSubMesh", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_MeshData_Wrap.M_SetSubMesh
#endif
                    }},
                    {"vertexCount", new MemberRegisterInfo { Name = "vertexCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_MeshData_Wrap.G_vertexCount
#endif
                    }},
                    {"vertexBufferCount", new MemberRegisterInfo { Name = "vertexBufferCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_MeshData_Wrap.G_vertexBufferCount
#endif
                    }},
                    {"indexFormat", new MemberRegisterInfo { Name = "indexFormat", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_MeshData_Wrap.G_indexFormat
#endif
                    }},
                    {"subMeshCount", new MemberRegisterInfo { Name = "subMeshCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_MeshData_Wrap.G_subMeshCount, PropertySetter = UnityEngine_Mesh_MeshData_Wrap.S_subMeshCount
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Mesh_MeshDataArray_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Mesh_MeshDataArray_Wrap.Constructor
#endif
                    }},
                    {"Dispose", new MemberRegisterInfo { Name = "Dispose", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_MeshDataArray_Wrap.M_Dispose
#endif
                    }},
                    {"Length", new MemberRegisterInfo { Name = "Length", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mesh_MeshDataArray_Wrap.G_Length
#endif
                    }},
                    {"get_Item", new MemberRegisterInfo { Name = "get_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mesh_MeshDataArray_Wrap.GetItem
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Renderer_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Renderer_Wrap.Constructor
#endif
                    }},
                    {"HasPropertyBlock", new MemberRegisterInfo { Name = "HasPropertyBlock", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Renderer_Wrap.M_HasPropertyBlock
#endif
                    }},
                    {"SetPropertyBlock", new MemberRegisterInfo { Name = "SetPropertyBlock", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Renderer_Wrap.M_SetPropertyBlock
#endif
                    }},
                    {"GetPropertyBlock", new MemberRegisterInfo { Name = "GetPropertyBlock", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Renderer_Wrap.M_GetPropertyBlock
#endif
                    }},
                    {"GetMaterials", new MemberRegisterInfo { Name = "GetMaterials", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Renderer_Wrap.M_GetMaterials
#endif
                    }},
                    {"GetSharedMaterials", new MemberRegisterInfo { Name = "GetSharedMaterials", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Renderer_Wrap.M_GetSharedMaterials
#endif
                    }},
                    {"GetClosestReflectionProbes", new MemberRegisterInfo { Name = "GetClosestReflectionProbes", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Renderer_Wrap.M_GetClosestReflectionProbes
#endif
                    }},
                    {"UpdateGIMaterials", new MemberRegisterInfo { Name = "UpdateGIMaterials", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Renderer_Wrap.M_UpdateGIMaterials
#endif
                    }},
                    {"bounds", new MemberRegisterInfo { Name = "bounds", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_bounds
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_enabled, PropertySetter = UnityEngine_Renderer_Wrap.S_enabled
#endif
                    }},
                    {"isVisible", new MemberRegisterInfo { Name = "isVisible", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_isVisible
#endif
                    }},
                    {"shadowCastingMode", new MemberRegisterInfo { Name = "shadowCastingMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_shadowCastingMode, PropertySetter = UnityEngine_Renderer_Wrap.S_shadowCastingMode
#endif
                    }},
                    {"receiveShadows", new MemberRegisterInfo { Name = "receiveShadows", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_receiveShadows, PropertySetter = UnityEngine_Renderer_Wrap.S_receiveShadows
#endif
                    }},
                    {"forceRenderingOff", new MemberRegisterInfo { Name = "forceRenderingOff", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_forceRenderingOff, PropertySetter = UnityEngine_Renderer_Wrap.S_forceRenderingOff
#endif
                    }},
                    {"motionVectorGenerationMode", new MemberRegisterInfo { Name = "motionVectorGenerationMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_motionVectorGenerationMode, PropertySetter = UnityEngine_Renderer_Wrap.S_motionVectorGenerationMode
#endif
                    }},
                    {"lightProbeUsage", new MemberRegisterInfo { Name = "lightProbeUsage", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_lightProbeUsage, PropertySetter = UnityEngine_Renderer_Wrap.S_lightProbeUsage
#endif
                    }},
                    {"reflectionProbeUsage", new MemberRegisterInfo { Name = "reflectionProbeUsage", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_reflectionProbeUsage, PropertySetter = UnityEngine_Renderer_Wrap.S_reflectionProbeUsage
#endif
                    }},
                    {"renderingLayerMask", new MemberRegisterInfo { Name = "renderingLayerMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_renderingLayerMask, PropertySetter = UnityEngine_Renderer_Wrap.S_renderingLayerMask
#endif
                    }},
                    {"rendererPriority", new MemberRegisterInfo { Name = "rendererPriority", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_rendererPriority, PropertySetter = UnityEngine_Renderer_Wrap.S_rendererPriority
#endif
                    }},
                    {"rayTracingMode", new MemberRegisterInfo { Name = "rayTracingMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_rayTracingMode, PropertySetter = UnityEngine_Renderer_Wrap.S_rayTracingMode
#endif
                    }},
                    {"sortingLayerName", new MemberRegisterInfo { Name = "sortingLayerName", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_sortingLayerName, PropertySetter = UnityEngine_Renderer_Wrap.S_sortingLayerName
#endif
                    }},
                    {"sortingLayerID", new MemberRegisterInfo { Name = "sortingLayerID", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_sortingLayerID, PropertySetter = UnityEngine_Renderer_Wrap.S_sortingLayerID
#endif
                    }},
                    {"sortingOrder", new MemberRegisterInfo { Name = "sortingOrder", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_sortingOrder, PropertySetter = UnityEngine_Renderer_Wrap.S_sortingOrder
#endif
                    }},
                    {"allowOcclusionWhenDynamic", new MemberRegisterInfo { Name = "allowOcclusionWhenDynamic", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_allowOcclusionWhenDynamic, PropertySetter = UnityEngine_Renderer_Wrap.S_allowOcclusionWhenDynamic
#endif
                    }},
                    {"isPartOfStaticBatch", new MemberRegisterInfo { Name = "isPartOfStaticBatch", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_isPartOfStaticBatch
#endif
                    }},
                    {"worldToLocalMatrix", new MemberRegisterInfo { Name = "worldToLocalMatrix", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_worldToLocalMatrix
#endif
                    }},
                    {"localToWorldMatrix", new MemberRegisterInfo { Name = "localToWorldMatrix", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_localToWorldMatrix
#endif
                    }},
                    {"lightProbeProxyVolumeOverride", new MemberRegisterInfo { Name = "lightProbeProxyVolumeOverride", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_lightProbeProxyVolumeOverride, PropertySetter = UnityEngine_Renderer_Wrap.S_lightProbeProxyVolumeOverride
#endif
                    }},
                    {"probeAnchor", new MemberRegisterInfo { Name = "probeAnchor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_probeAnchor, PropertySetter = UnityEngine_Renderer_Wrap.S_probeAnchor
#endif
                    }},
                    {"lightmapIndex", new MemberRegisterInfo { Name = "lightmapIndex", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_lightmapIndex, PropertySetter = UnityEngine_Renderer_Wrap.S_lightmapIndex
#endif
                    }},
                    {"realtimeLightmapIndex", new MemberRegisterInfo { Name = "realtimeLightmapIndex", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_realtimeLightmapIndex, PropertySetter = UnityEngine_Renderer_Wrap.S_realtimeLightmapIndex
#endif
                    }},
                    {"lightmapScaleOffset", new MemberRegisterInfo { Name = "lightmapScaleOffset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_lightmapScaleOffset, PropertySetter = UnityEngine_Renderer_Wrap.S_lightmapScaleOffset
#endif
                    }},
                    {"realtimeLightmapScaleOffset", new MemberRegisterInfo { Name = "realtimeLightmapScaleOffset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_realtimeLightmapScaleOffset, PropertySetter = UnityEngine_Renderer_Wrap.S_realtimeLightmapScaleOffset
#endif
                    }},
                    {"materials", new MemberRegisterInfo { Name = "materials", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_materials, PropertySetter = UnityEngine_Renderer_Wrap.S_materials
#endif
                    }},
                    {"material", new MemberRegisterInfo { Name = "material", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_material, PropertySetter = UnityEngine_Renderer_Wrap.S_material
#endif
                    }},
                    {"sharedMaterial", new MemberRegisterInfo { Name = "sharedMaterial", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_sharedMaterial, PropertySetter = UnityEngine_Renderer_Wrap.S_sharedMaterial
#endif
                    }},
                    {"sharedMaterials", new MemberRegisterInfo { Name = "sharedMaterials", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Renderer_Wrap.G_sharedMaterials, PropertySetter = UnityEngine_Renderer_Wrap.S_sharedMaterials
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Projector_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Projector_Wrap.Constructor
#endif
                    }},
                    {"nearClipPlane", new MemberRegisterInfo { Name = "nearClipPlane", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Projector_Wrap.G_nearClipPlane, PropertySetter = UnityEngine_Projector_Wrap.S_nearClipPlane
#endif
                    }},
                    {"farClipPlane", new MemberRegisterInfo { Name = "farClipPlane", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Projector_Wrap.G_farClipPlane, PropertySetter = UnityEngine_Projector_Wrap.S_farClipPlane
#endif
                    }},
                    {"fieldOfView", new MemberRegisterInfo { Name = "fieldOfView", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Projector_Wrap.G_fieldOfView, PropertySetter = UnityEngine_Projector_Wrap.S_fieldOfView
#endif
                    }},
                    {"aspectRatio", new MemberRegisterInfo { Name = "aspectRatio", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Projector_Wrap.G_aspectRatio, PropertySetter = UnityEngine_Projector_Wrap.S_aspectRatio
#endif
                    }},
                    {"orthographic", new MemberRegisterInfo { Name = "orthographic", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Projector_Wrap.G_orthographic, PropertySetter = UnityEngine_Projector_Wrap.S_orthographic
#endif
                    }},
                    {"orthographicSize", new MemberRegisterInfo { Name = "orthographicSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Projector_Wrap.G_orthographicSize, PropertySetter = UnityEngine_Projector_Wrap.S_orthographicSize
#endif
                    }},
                    {"ignoreLayers", new MemberRegisterInfo { Name = "ignoreLayers", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Projector_Wrap.G_ignoreLayers, PropertySetter = UnityEngine_Projector_Wrap.S_ignoreLayers
#endif
                    }},
                    {"material", new MemberRegisterInfo { Name = "material", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Projector_Wrap.G_material, PropertySetter = UnityEngine_Projector_Wrap.S_material
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Shader_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"GetDependency", new MemberRegisterInfo { Name = "GetDependency", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.M_GetDependency
#endif
                    }},
                    {"FindPassTagValue", new MemberRegisterInfo { Name = "FindPassTagValue", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.M_FindPassTagValue
#endif
                    }},
                    {"GetPropertyCount", new MemberRegisterInfo { Name = "GetPropertyCount", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.M_GetPropertyCount
#endif
                    }},
                    {"FindPropertyIndex", new MemberRegisterInfo { Name = "FindPropertyIndex", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.M_FindPropertyIndex
#endif
                    }},
                    {"GetPropertyName", new MemberRegisterInfo { Name = "GetPropertyName", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.M_GetPropertyName
#endif
                    }},
                    {"GetPropertyNameId", new MemberRegisterInfo { Name = "GetPropertyNameId", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.M_GetPropertyNameId
#endif
                    }},
                    {"GetPropertyType", new MemberRegisterInfo { Name = "GetPropertyType", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.M_GetPropertyType
#endif
                    }},
                    {"GetPropertyDescription", new MemberRegisterInfo { Name = "GetPropertyDescription", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.M_GetPropertyDescription
#endif
                    }},
                    {"GetPropertyFlags", new MemberRegisterInfo { Name = "GetPropertyFlags", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.M_GetPropertyFlags
#endif
                    }},
                    {"GetPropertyAttributes", new MemberRegisterInfo { Name = "GetPropertyAttributes", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.M_GetPropertyAttributes
#endif
                    }},
                    {"GetPropertyDefaultFloatValue", new MemberRegisterInfo { Name = "GetPropertyDefaultFloatValue", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.M_GetPropertyDefaultFloatValue
#endif
                    }},
                    {"GetPropertyDefaultVectorValue", new MemberRegisterInfo { Name = "GetPropertyDefaultVectorValue", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.M_GetPropertyDefaultVectorValue
#endif
                    }},
                    {"GetPropertyRangeLimits", new MemberRegisterInfo { Name = "GetPropertyRangeLimits", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.M_GetPropertyRangeLimits
#endif
                    }},
                    {"GetPropertyTextureDimension", new MemberRegisterInfo { Name = "GetPropertyTextureDimension", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.M_GetPropertyTextureDimension
#endif
                    }},
                    {"GetPropertyTextureDefaultName", new MemberRegisterInfo { Name = "GetPropertyTextureDefaultName", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.M_GetPropertyTextureDefaultName
#endif
                    }},
                    {"FindTextureStack", new MemberRegisterInfo { Name = "FindTextureStack", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.M_FindTextureStack
#endif
                    }},
                    {"maximumLOD", new MemberRegisterInfo { Name = "maximumLOD", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Shader_Wrap.G_maximumLOD, PropertySetter = UnityEngine_Shader_Wrap.S_maximumLOD
#endif
                    }},
                    {"isSupported", new MemberRegisterInfo { Name = "isSupported", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Shader_Wrap.G_isSupported
#endif
                    }},
                    {"renderQueue", new MemberRegisterInfo { Name = "renderQueue", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Shader_Wrap.G_renderQueue
#endif
                    }},
                    {"passCount", new MemberRegisterInfo { Name = "passCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Shader_Wrap.G_passCount
#endif
                    }},
                    {"Find_static", new MemberRegisterInfo { Name = "Find", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_Find
#endif
                    }},
                    {"EnableKeyword_static", new MemberRegisterInfo { Name = "EnableKeyword", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_EnableKeyword
#endif
                    }},
                    {"DisableKeyword_static", new MemberRegisterInfo { Name = "DisableKeyword", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_DisableKeyword
#endif
                    }},
                    {"IsKeywordEnabled_static", new MemberRegisterInfo { Name = "IsKeywordEnabled", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_IsKeywordEnabled
#endif
                    }},
                    {"WarmupAllShaders_static", new MemberRegisterInfo { Name = "WarmupAllShaders", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_WarmupAllShaders
#endif
                    }},
                    {"PropertyToID_static", new MemberRegisterInfo { Name = "PropertyToID", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_PropertyToID
#endif
                    }},
                    {"SetGlobalFloat_static", new MemberRegisterInfo { Name = "SetGlobalFloat", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_SetGlobalFloat
#endif
                    }},
                    {"SetGlobalInt_static", new MemberRegisterInfo { Name = "SetGlobalInt", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_SetGlobalInt
#endif
                    }},
                    {"SetGlobalVector_static", new MemberRegisterInfo { Name = "SetGlobalVector", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_SetGlobalVector
#endif
                    }},
                    {"SetGlobalColor_static", new MemberRegisterInfo { Name = "SetGlobalColor", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_SetGlobalColor
#endif
                    }},
                    {"SetGlobalMatrix_static", new MemberRegisterInfo { Name = "SetGlobalMatrix", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_SetGlobalMatrix
#endif
                    }},
                    {"SetGlobalTexture_static", new MemberRegisterInfo { Name = "SetGlobalTexture", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_SetGlobalTexture
#endif
                    }},
                    {"SetGlobalBuffer_static", new MemberRegisterInfo { Name = "SetGlobalBuffer", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_SetGlobalBuffer
#endif
                    }},
                    {"SetGlobalConstantBuffer_static", new MemberRegisterInfo { Name = "SetGlobalConstantBuffer", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_SetGlobalConstantBuffer
#endif
                    }},
                    {"SetGlobalFloatArray_static", new MemberRegisterInfo { Name = "SetGlobalFloatArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_SetGlobalFloatArray
#endif
                    }},
                    {"SetGlobalVectorArray_static", new MemberRegisterInfo { Name = "SetGlobalVectorArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_SetGlobalVectorArray
#endif
                    }},
                    {"SetGlobalMatrixArray_static", new MemberRegisterInfo { Name = "SetGlobalMatrixArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_SetGlobalMatrixArray
#endif
                    }},
                    {"GetGlobalFloat_static", new MemberRegisterInfo { Name = "GetGlobalFloat", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_GetGlobalFloat
#endif
                    }},
                    {"GetGlobalInt_static", new MemberRegisterInfo { Name = "GetGlobalInt", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_GetGlobalInt
#endif
                    }},
                    {"GetGlobalVector_static", new MemberRegisterInfo { Name = "GetGlobalVector", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_GetGlobalVector
#endif
                    }},
                    {"GetGlobalColor_static", new MemberRegisterInfo { Name = "GetGlobalColor", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_GetGlobalColor
#endif
                    }},
                    {"GetGlobalMatrix_static", new MemberRegisterInfo { Name = "GetGlobalMatrix", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_GetGlobalMatrix
#endif
                    }},
                    {"GetGlobalTexture_static", new MemberRegisterInfo { Name = "GetGlobalTexture", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_GetGlobalTexture
#endif
                    }},
                    {"GetGlobalFloatArray_static", new MemberRegisterInfo { Name = "GetGlobalFloatArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_GetGlobalFloatArray
#endif
                    }},
                    {"GetGlobalVectorArray_static", new MemberRegisterInfo { Name = "GetGlobalVectorArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_GetGlobalVectorArray
#endif
                    }},
                    {"GetGlobalMatrixArray_static", new MemberRegisterInfo { Name = "GetGlobalMatrixArray", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Shader_Wrap.F_GetGlobalMatrixArray
#endif
                    }},
                    {"globalMaximumLOD_static", new MemberRegisterInfo { Name = "globalMaximumLOD", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Shader_Wrap.G_globalMaximumLOD, PropertySetter = UnityEngine_Shader_Wrap.S_globalMaximumLOD
#endif
                    }},
                    {"globalRenderPipeline_static", new MemberRegisterInfo { Name = "globalRenderPipeline", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Shader_Wrap.G_globalRenderPipeline, PropertySetter = UnityEngine_Shader_Wrap.S_globalRenderPipeline
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_TrailRenderer_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_TrailRenderer_Wrap.Constructor
#endif
                    }},
                    {"SetPosition", new MemberRegisterInfo { Name = "SetPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TrailRenderer_Wrap.M_SetPosition
#endif
                    }},
                    {"GetPosition", new MemberRegisterInfo { Name = "GetPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TrailRenderer_Wrap.M_GetPosition
#endif
                    }},
                    {"Clear", new MemberRegisterInfo { Name = "Clear", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TrailRenderer_Wrap.M_Clear
#endif
                    }},
                    {"BakeMesh", new MemberRegisterInfo { Name = "BakeMesh", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TrailRenderer_Wrap.M_BakeMesh
#endif
                    }},
                    {"GetPositions", new MemberRegisterInfo { Name = "GetPositions", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TrailRenderer_Wrap.M_GetPositions
#endif
                    }},
                    {"SetPositions", new MemberRegisterInfo { Name = "SetPositions", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TrailRenderer_Wrap.M_SetPositions
#endif
                    }},
                    {"AddPosition", new MemberRegisterInfo { Name = "AddPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TrailRenderer_Wrap.M_AddPosition
#endif
                    }},
                    {"AddPositions", new MemberRegisterInfo { Name = "AddPositions", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TrailRenderer_Wrap.M_AddPositions
#endif
                    }},
                    {"time", new MemberRegisterInfo { Name = "time", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TrailRenderer_Wrap.G_time, PropertySetter = UnityEngine_TrailRenderer_Wrap.S_time
#endif
                    }},
                    {"startWidth", new MemberRegisterInfo { Name = "startWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TrailRenderer_Wrap.G_startWidth, PropertySetter = UnityEngine_TrailRenderer_Wrap.S_startWidth
#endif
                    }},
                    {"endWidth", new MemberRegisterInfo { Name = "endWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TrailRenderer_Wrap.G_endWidth, PropertySetter = UnityEngine_TrailRenderer_Wrap.S_endWidth
#endif
                    }},
                    {"widthMultiplier", new MemberRegisterInfo { Name = "widthMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TrailRenderer_Wrap.G_widthMultiplier, PropertySetter = UnityEngine_TrailRenderer_Wrap.S_widthMultiplier
#endif
                    }},
                    {"autodestruct", new MemberRegisterInfo { Name = "autodestruct", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TrailRenderer_Wrap.G_autodestruct, PropertySetter = UnityEngine_TrailRenderer_Wrap.S_autodestruct
#endif
                    }},
                    {"emitting", new MemberRegisterInfo { Name = "emitting", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TrailRenderer_Wrap.G_emitting, PropertySetter = UnityEngine_TrailRenderer_Wrap.S_emitting
#endif
                    }},
                    {"numCornerVertices", new MemberRegisterInfo { Name = "numCornerVertices", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TrailRenderer_Wrap.G_numCornerVertices, PropertySetter = UnityEngine_TrailRenderer_Wrap.S_numCornerVertices
#endif
                    }},
                    {"numCapVertices", new MemberRegisterInfo { Name = "numCapVertices", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TrailRenderer_Wrap.G_numCapVertices, PropertySetter = UnityEngine_TrailRenderer_Wrap.S_numCapVertices
#endif
                    }},
                    {"minVertexDistance", new MemberRegisterInfo { Name = "minVertexDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TrailRenderer_Wrap.G_minVertexDistance, PropertySetter = UnityEngine_TrailRenderer_Wrap.S_minVertexDistance
#endif
                    }},
                    {"startColor", new MemberRegisterInfo { Name = "startColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TrailRenderer_Wrap.G_startColor, PropertySetter = UnityEngine_TrailRenderer_Wrap.S_startColor
#endif
                    }},
                    {"endColor", new MemberRegisterInfo { Name = "endColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TrailRenderer_Wrap.G_endColor, PropertySetter = UnityEngine_TrailRenderer_Wrap.S_endColor
#endif
                    }},
                    {"positionCount", new MemberRegisterInfo { Name = "positionCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TrailRenderer_Wrap.G_positionCount
#endif
                    }},
                    {"shadowBias", new MemberRegisterInfo { Name = "shadowBias", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TrailRenderer_Wrap.G_shadowBias, PropertySetter = UnityEngine_TrailRenderer_Wrap.S_shadowBias
#endif
                    }},
                    {"generateLightingData", new MemberRegisterInfo { Name = "generateLightingData", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TrailRenderer_Wrap.G_generateLightingData, PropertySetter = UnityEngine_TrailRenderer_Wrap.S_generateLightingData
#endif
                    }},
                    {"textureMode", new MemberRegisterInfo { Name = "textureMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TrailRenderer_Wrap.G_textureMode, PropertySetter = UnityEngine_TrailRenderer_Wrap.S_textureMode
#endif
                    }},
                    {"alignment", new MemberRegisterInfo { Name = "alignment", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TrailRenderer_Wrap.G_alignment, PropertySetter = UnityEngine_TrailRenderer_Wrap.S_alignment
#endif
                    }},
                    {"widthCurve", new MemberRegisterInfo { Name = "widthCurve", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TrailRenderer_Wrap.G_widthCurve, PropertySetter = UnityEngine_TrailRenderer_Wrap.S_widthCurve
#endif
                    }},
                    {"colorGradient", new MemberRegisterInfo { Name = "colorGradient", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TrailRenderer_Wrap.G_colorGradient, PropertySetter = UnityEngine_TrailRenderer_Wrap.S_colorGradient
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_LineRenderer_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_LineRenderer_Wrap.Constructor
#endif
                    }},
                    {"SetPosition", new MemberRegisterInfo { Name = "SetPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LineRenderer_Wrap.M_SetPosition
#endif
                    }},
                    {"GetPosition", new MemberRegisterInfo { Name = "GetPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LineRenderer_Wrap.M_GetPosition
#endif
                    }},
                    {"Simplify", new MemberRegisterInfo { Name = "Simplify", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LineRenderer_Wrap.M_Simplify
#endif
                    }},
                    {"BakeMesh", new MemberRegisterInfo { Name = "BakeMesh", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LineRenderer_Wrap.M_BakeMesh
#endif
                    }},
                    {"GetPositions", new MemberRegisterInfo { Name = "GetPositions", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LineRenderer_Wrap.M_GetPositions
#endif
                    }},
                    {"SetPositions", new MemberRegisterInfo { Name = "SetPositions", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LineRenderer_Wrap.M_SetPositions
#endif
                    }},
                    {"startWidth", new MemberRegisterInfo { Name = "startWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LineRenderer_Wrap.G_startWidth, PropertySetter = UnityEngine_LineRenderer_Wrap.S_startWidth
#endif
                    }},
                    {"endWidth", new MemberRegisterInfo { Name = "endWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LineRenderer_Wrap.G_endWidth, PropertySetter = UnityEngine_LineRenderer_Wrap.S_endWidth
#endif
                    }},
                    {"widthMultiplier", new MemberRegisterInfo { Name = "widthMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LineRenderer_Wrap.G_widthMultiplier, PropertySetter = UnityEngine_LineRenderer_Wrap.S_widthMultiplier
#endif
                    }},
                    {"numCornerVertices", new MemberRegisterInfo { Name = "numCornerVertices", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LineRenderer_Wrap.G_numCornerVertices, PropertySetter = UnityEngine_LineRenderer_Wrap.S_numCornerVertices
#endif
                    }},
                    {"numCapVertices", new MemberRegisterInfo { Name = "numCapVertices", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LineRenderer_Wrap.G_numCapVertices, PropertySetter = UnityEngine_LineRenderer_Wrap.S_numCapVertices
#endif
                    }},
                    {"useWorldSpace", new MemberRegisterInfo { Name = "useWorldSpace", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LineRenderer_Wrap.G_useWorldSpace, PropertySetter = UnityEngine_LineRenderer_Wrap.S_useWorldSpace
#endif
                    }},
                    {"loop", new MemberRegisterInfo { Name = "loop", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LineRenderer_Wrap.G_loop, PropertySetter = UnityEngine_LineRenderer_Wrap.S_loop
#endif
                    }},
                    {"startColor", new MemberRegisterInfo { Name = "startColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LineRenderer_Wrap.G_startColor, PropertySetter = UnityEngine_LineRenderer_Wrap.S_startColor
#endif
                    }},
                    {"endColor", new MemberRegisterInfo { Name = "endColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LineRenderer_Wrap.G_endColor, PropertySetter = UnityEngine_LineRenderer_Wrap.S_endColor
#endif
                    }},
                    {"positionCount", new MemberRegisterInfo { Name = "positionCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LineRenderer_Wrap.G_positionCount, PropertySetter = UnityEngine_LineRenderer_Wrap.S_positionCount
#endif
                    }},
                    {"shadowBias", new MemberRegisterInfo { Name = "shadowBias", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LineRenderer_Wrap.G_shadowBias, PropertySetter = UnityEngine_LineRenderer_Wrap.S_shadowBias
#endif
                    }},
                    {"generateLightingData", new MemberRegisterInfo { Name = "generateLightingData", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LineRenderer_Wrap.G_generateLightingData, PropertySetter = UnityEngine_LineRenderer_Wrap.S_generateLightingData
#endif
                    }},
                    {"textureMode", new MemberRegisterInfo { Name = "textureMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LineRenderer_Wrap.G_textureMode, PropertySetter = UnityEngine_LineRenderer_Wrap.S_textureMode
#endif
                    }},
                    {"alignment", new MemberRegisterInfo { Name = "alignment", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LineRenderer_Wrap.G_alignment, PropertySetter = UnityEngine_LineRenderer_Wrap.S_alignment
#endif
                    }},
                    {"widthCurve", new MemberRegisterInfo { Name = "widthCurve", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LineRenderer_Wrap.G_widthCurve, PropertySetter = UnityEngine_LineRenderer_Wrap.S_widthCurve
#endif
                    }},
                    {"colorGradient", new MemberRegisterInfo { Name = "colorGradient", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LineRenderer_Wrap.G_colorGradient, PropertySetter = UnityEngine_LineRenderer_Wrap.S_colorGradient
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_MaterialPropertyBlock_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_MaterialPropertyBlock_Wrap.Constructor
#endif
                    }},
                    {"Clear", new MemberRegisterInfo { Name = "Clear", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_Clear
#endif
                    }},
                    {"SetFloat", new MemberRegisterInfo { Name = "SetFloat", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_SetFloat
#endif
                    }},
                    {"SetInt", new MemberRegisterInfo { Name = "SetInt", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_SetInt
#endif
                    }},
                    {"SetVector", new MemberRegisterInfo { Name = "SetVector", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_SetVector
#endif
                    }},
                    {"SetColor", new MemberRegisterInfo { Name = "SetColor", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_SetColor
#endif
                    }},
                    {"SetMatrix", new MemberRegisterInfo { Name = "SetMatrix", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_SetMatrix
#endif
                    }},
                    {"SetBuffer", new MemberRegisterInfo { Name = "SetBuffer", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_SetBuffer
#endif
                    }},
                    {"SetTexture", new MemberRegisterInfo { Name = "SetTexture", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_SetTexture
#endif
                    }},
                    {"SetConstantBuffer", new MemberRegisterInfo { Name = "SetConstantBuffer", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_SetConstantBuffer
#endif
                    }},
                    {"SetFloatArray", new MemberRegisterInfo { Name = "SetFloatArray", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_SetFloatArray
#endif
                    }},
                    {"SetVectorArray", new MemberRegisterInfo { Name = "SetVectorArray", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_SetVectorArray
#endif
                    }},
                    {"SetMatrixArray", new MemberRegisterInfo { Name = "SetMatrixArray", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_SetMatrixArray
#endif
                    }},
                    {"GetFloat", new MemberRegisterInfo { Name = "GetFloat", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_GetFloat
#endif
                    }},
                    {"GetInt", new MemberRegisterInfo { Name = "GetInt", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_GetInt
#endif
                    }},
                    {"GetVector", new MemberRegisterInfo { Name = "GetVector", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_GetVector
#endif
                    }},
                    {"GetColor", new MemberRegisterInfo { Name = "GetColor", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_GetColor
#endif
                    }},
                    {"GetMatrix", new MemberRegisterInfo { Name = "GetMatrix", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_GetMatrix
#endif
                    }},
                    {"GetTexture", new MemberRegisterInfo { Name = "GetTexture", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_GetTexture
#endif
                    }},
                    {"GetFloatArray", new MemberRegisterInfo { Name = "GetFloatArray", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_GetFloatArray
#endif
                    }},
                    {"GetVectorArray", new MemberRegisterInfo { Name = "GetVectorArray", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_GetVectorArray
#endif
                    }},
                    {"GetMatrixArray", new MemberRegisterInfo { Name = "GetMatrixArray", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_GetMatrixArray
#endif
                    }},
                    {"CopySHCoefficientArraysFrom", new MemberRegisterInfo { Name = "CopySHCoefficientArraysFrom", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_CopySHCoefficientArraysFrom
#endif
                    }},
                    {"CopyProbeOcclusionArrayFrom", new MemberRegisterInfo { Name = "CopyProbeOcclusionArrayFrom", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_MaterialPropertyBlock_Wrap.M_CopyProbeOcclusionArrayFrom
#endif
                    }},
                    {"isEmpty", new MemberRegisterInfo { Name = "isEmpty", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_MaterialPropertyBlock_Wrap.G_isEmpty
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RenderSettings_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"fog_static", new MemberRegisterInfo { Name = "fog", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_fog, PropertySetter = UnityEngine_RenderSettings_Wrap.S_fog
#endif
                    }},
                    {"fogStartDistance_static", new MemberRegisterInfo { Name = "fogStartDistance", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_fogStartDistance, PropertySetter = UnityEngine_RenderSettings_Wrap.S_fogStartDistance
#endif
                    }},
                    {"fogEndDistance_static", new MemberRegisterInfo { Name = "fogEndDistance", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_fogEndDistance, PropertySetter = UnityEngine_RenderSettings_Wrap.S_fogEndDistance
#endif
                    }},
                    {"fogMode_static", new MemberRegisterInfo { Name = "fogMode", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_fogMode, PropertySetter = UnityEngine_RenderSettings_Wrap.S_fogMode
#endif
                    }},
                    {"fogColor_static", new MemberRegisterInfo { Name = "fogColor", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_fogColor, PropertySetter = UnityEngine_RenderSettings_Wrap.S_fogColor
#endif
                    }},
                    {"fogDensity_static", new MemberRegisterInfo { Name = "fogDensity", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_fogDensity, PropertySetter = UnityEngine_RenderSettings_Wrap.S_fogDensity
#endif
                    }},
                    {"ambientMode_static", new MemberRegisterInfo { Name = "ambientMode", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_ambientMode, PropertySetter = UnityEngine_RenderSettings_Wrap.S_ambientMode
#endif
                    }},
                    {"ambientSkyColor_static", new MemberRegisterInfo { Name = "ambientSkyColor", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_ambientSkyColor, PropertySetter = UnityEngine_RenderSettings_Wrap.S_ambientSkyColor
#endif
                    }},
                    {"ambientEquatorColor_static", new MemberRegisterInfo { Name = "ambientEquatorColor", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_ambientEquatorColor, PropertySetter = UnityEngine_RenderSettings_Wrap.S_ambientEquatorColor
#endif
                    }},
                    {"ambientGroundColor_static", new MemberRegisterInfo { Name = "ambientGroundColor", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_ambientGroundColor, PropertySetter = UnityEngine_RenderSettings_Wrap.S_ambientGroundColor
#endif
                    }},
                    {"ambientIntensity_static", new MemberRegisterInfo { Name = "ambientIntensity", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_ambientIntensity, PropertySetter = UnityEngine_RenderSettings_Wrap.S_ambientIntensity
#endif
                    }},
                    {"ambientLight_static", new MemberRegisterInfo { Name = "ambientLight", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_ambientLight, PropertySetter = UnityEngine_RenderSettings_Wrap.S_ambientLight
#endif
                    }},
                    {"subtractiveShadowColor_static", new MemberRegisterInfo { Name = "subtractiveShadowColor", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_subtractiveShadowColor, PropertySetter = UnityEngine_RenderSettings_Wrap.S_subtractiveShadowColor
#endif
                    }},
                    {"skybox_static", new MemberRegisterInfo { Name = "skybox", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_skybox, PropertySetter = UnityEngine_RenderSettings_Wrap.S_skybox
#endif
                    }},
                    {"sun_static", new MemberRegisterInfo { Name = "sun", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_sun, PropertySetter = UnityEngine_RenderSettings_Wrap.S_sun
#endif
                    }},
                    {"ambientProbe_static", new MemberRegisterInfo { Name = "ambientProbe", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_ambientProbe, PropertySetter = UnityEngine_RenderSettings_Wrap.S_ambientProbe
#endif
                    }},
                    {"customReflection_static", new MemberRegisterInfo { Name = "customReflection", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_customReflection, PropertySetter = UnityEngine_RenderSettings_Wrap.S_customReflection
#endif
                    }},
                    {"reflectionIntensity_static", new MemberRegisterInfo { Name = "reflectionIntensity", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_reflectionIntensity, PropertySetter = UnityEngine_RenderSettings_Wrap.S_reflectionIntensity
#endif
                    }},
                    {"reflectionBounces_static", new MemberRegisterInfo { Name = "reflectionBounces", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_reflectionBounces, PropertySetter = UnityEngine_RenderSettings_Wrap.S_reflectionBounces
#endif
                    }},
                    {"defaultReflectionMode_static", new MemberRegisterInfo { Name = "defaultReflectionMode", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_defaultReflectionMode, PropertySetter = UnityEngine_RenderSettings_Wrap.S_defaultReflectionMode
#endif
                    }},
                    {"defaultReflectionResolution_static", new MemberRegisterInfo { Name = "defaultReflectionResolution", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_defaultReflectionResolution, PropertySetter = UnityEngine_RenderSettings_Wrap.S_defaultReflectionResolution
#endif
                    }},
                    {"haloStrength_static", new MemberRegisterInfo { Name = "haloStrength", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_haloStrength, PropertySetter = UnityEngine_RenderSettings_Wrap.S_haloStrength
#endif
                    }},
                    {"flareStrength_static", new MemberRegisterInfo { Name = "flareStrength", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_flareStrength, PropertySetter = UnityEngine_RenderSettings_Wrap.S_flareStrength
#endif
                    }},
                    {"flareFadeSpeed_static", new MemberRegisterInfo { Name = "flareFadeSpeed", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderSettings_Wrap.G_flareFadeSpeed, PropertySetter = UnityEngine_RenderSettings_Wrap.S_flareFadeSpeed
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Material_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Material_Wrap.Constructor
#endif
                    }},
                    {"HasProperty", new MemberRegisterInfo { Name = "HasProperty", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_HasProperty
#endif
                    }},
                    {"EnableKeyword", new MemberRegisterInfo { Name = "EnableKeyword", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_EnableKeyword
#endif
                    }},
                    {"DisableKeyword", new MemberRegisterInfo { Name = "DisableKeyword", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_DisableKeyword
#endif
                    }},
                    {"IsKeywordEnabled", new MemberRegisterInfo { Name = "IsKeywordEnabled", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_IsKeywordEnabled
#endif
                    }},
                    {"SetShaderPassEnabled", new MemberRegisterInfo { Name = "SetShaderPassEnabled", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_SetShaderPassEnabled
#endif
                    }},
                    {"GetShaderPassEnabled", new MemberRegisterInfo { Name = "GetShaderPassEnabled", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_GetShaderPassEnabled
#endif
                    }},
                    {"GetPassName", new MemberRegisterInfo { Name = "GetPassName", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_GetPassName
#endif
                    }},
                    {"FindPass", new MemberRegisterInfo { Name = "FindPass", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_FindPass
#endif
                    }},
                    {"SetOverrideTag", new MemberRegisterInfo { Name = "SetOverrideTag", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_SetOverrideTag
#endif
                    }},
                    {"GetTag", new MemberRegisterInfo { Name = "GetTag", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_GetTag
#endif
                    }},
                    {"Lerp", new MemberRegisterInfo { Name = "Lerp", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_Lerp
#endif
                    }},
                    {"SetPass", new MemberRegisterInfo { Name = "SetPass", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_SetPass
#endif
                    }},
                    {"CopyPropertiesFromMaterial", new MemberRegisterInfo { Name = "CopyPropertiesFromMaterial", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_CopyPropertiesFromMaterial
#endif
                    }},
                    {"ComputeCRC", new MemberRegisterInfo { Name = "ComputeCRC", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_ComputeCRC
#endif
                    }},
                    {"GetTexturePropertyNames", new MemberRegisterInfo { Name = "GetTexturePropertyNames", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_GetTexturePropertyNames
#endif
                    }},
                    {"GetTexturePropertyNameIDs", new MemberRegisterInfo { Name = "GetTexturePropertyNameIDs", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_GetTexturePropertyNameIDs
#endif
                    }},
                    {"SetFloat", new MemberRegisterInfo { Name = "SetFloat", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_SetFloat
#endif
                    }},
                    {"SetInt", new MemberRegisterInfo { Name = "SetInt", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_SetInt
#endif
                    }},
                    {"SetColor", new MemberRegisterInfo { Name = "SetColor", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_SetColor
#endif
                    }},
                    {"SetVector", new MemberRegisterInfo { Name = "SetVector", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_SetVector
#endif
                    }},
                    {"SetMatrix", new MemberRegisterInfo { Name = "SetMatrix", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_SetMatrix
#endif
                    }},
                    {"SetTexture", new MemberRegisterInfo { Name = "SetTexture", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_SetTexture
#endif
                    }},
                    {"SetBuffer", new MemberRegisterInfo { Name = "SetBuffer", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_SetBuffer
#endif
                    }},
                    {"SetConstantBuffer", new MemberRegisterInfo { Name = "SetConstantBuffer", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_SetConstantBuffer
#endif
                    }},
                    {"SetFloatArray", new MemberRegisterInfo { Name = "SetFloatArray", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_SetFloatArray
#endif
                    }},
                    {"SetColorArray", new MemberRegisterInfo { Name = "SetColorArray", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_SetColorArray
#endif
                    }},
                    {"SetVectorArray", new MemberRegisterInfo { Name = "SetVectorArray", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_SetVectorArray
#endif
                    }},
                    {"SetMatrixArray", new MemberRegisterInfo { Name = "SetMatrixArray", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_SetMatrixArray
#endif
                    }},
                    {"GetFloat", new MemberRegisterInfo { Name = "GetFloat", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_GetFloat
#endif
                    }},
                    {"GetInt", new MemberRegisterInfo { Name = "GetInt", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_GetInt
#endif
                    }},
                    {"GetColor", new MemberRegisterInfo { Name = "GetColor", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_GetColor
#endif
                    }},
                    {"GetVector", new MemberRegisterInfo { Name = "GetVector", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_GetVector
#endif
                    }},
                    {"GetMatrix", new MemberRegisterInfo { Name = "GetMatrix", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_GetMatrix
#endif
                    }},
                    {"GetTexture", new MemberRegisterInfo { Name = "GetTexture", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_GetTexture
#endif
                    }},
                    {"GetFloatArray", new MemberRegisterInfo { Name = "GetFloatArray", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_GetFloatArray
#endif
                    }},
                    {"GetColorArray", new MemberRegisterInfo { Name = "GetColorArray", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_GetColorArray
#endif
                    }},
                    {"GetVectorArray", new MemberRegisterInfo { Name = "GetVectorArray", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_GetVectorArray
#endif
                    }},
                    {"GetMatrixArray", new MemberRegisterInfo { Name = "GetMatrixArray", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_GetMatrixArray
#endif
                    }},
                    {"SetTextureOffset", new MemberRegisterInfo { Name = "SetTextureOffset", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_SetTextureOffset
#endif
                    }},
                    {"SetTextureScale", new MemberRegisterInfo { Name = "SetTextureScale", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_SetTextureScale
#endif
                    }},
                    {"GetTextureOffset", new MemberRegisterInfo { Name = "GetTextureOffset", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_GetTextureOffset
#endif
                    }},
                    {"GetTextureScale", new MemberRegisterInfo { Name = "GetTextureScale", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Material_Wrap.M_GetTextureScale
#endif
                    }},
                    {"shader", new MemberRegisterInfo { Name = "shader", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Material_Wrap.G_shader, PropertySetter = UnityEngine_Material_Wrap.S_shader
#endif
                    }},
                    {"color", new MemberRegisterInfo { Name = "color", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Material_Wrap.G_color, PropertySetter = UnityEngine_Material_Wrap.S_color
#endif
                    }},
                    {"mainTexture", new MemberRegisterInfo { Name = "mainTexture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Material_Wrap.G_mainTexture, PropertySetter = UnityEngine_Material_Wrap.S_mainTexture
#endif
                    }},
                    {"mainTextureOffset", new MemberRegisterInfo { Name = "mainTextureOffset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Material_Wrap.G_mainTextureOffset, PropertySetter = UnityEngine_Material_Wrap.S_mainTextureOffset
#endif
                    }},
                    {"mainTextureScale", new MemberRegisterInfo { Name = "mainTextureScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Material_Wrap.G_mainTextureScale, PropertySetter = UnityEngine_Material_Wrap.S_mainTextureScale
#endif
                    }},
                    {"renderQueue", new MemberRegisterInfo { Name = "renderQueue", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Material_Wrap.G_renderQueue, PropertySetter = UnityEngine_Material_Wrap.S_renderQueue
#endif
                    }},
                    {"globalIlluminationFlags", new MemberRegisterInfo { Name = "globalIlluminationFlags", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Material_Wrap.G_globalIlluminationFlags, PropertySetter = UnityEngine_Material_Wrap.S_globalIlluminationFlags
#endif
                    }},
                    {"doubleSidedGI", new MemberRegisterInfo { Name = "doubleSidedGI", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Material_Wrap.G_doubleSidedGI, PropertySetter = UnityEngine_Material_Wrap.S_doubleSidedGI
#endif
                    }},
                    {"enableInstancing", new MemberRegisterInfo { Name = "enableInstancing", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Material_Wrap.G_enableInstancing, PropertySetter = UnityEngine_Material_Wrap.S_enableInstancing
#endif
                    }},
                    {"passCount", new MemberRegisterInfo { Name = "passCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Material_Wrap.G_passCount
#endif
                    }},
                    {"shaderKeywords", new MemberRegisterInfo { Name = "shaderKeywords", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Material_Wrap.G_shaderKeywords, PropertySetter = UnityEngine_Material_Wrap.S_shaderKeywords
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_GraphicsBuffer_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_GraphicsBuffer_Wrap.Constructor
#endif
                    }},
                    {"Dispose", new MemberRegisterInfo { Name = "Dispose", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GraphicsBuffer_Wrap.M_Dispose
#endif
                    }},
                    {"Release", new MemberRegisterInfo { Name = "Release", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GraphicsBuffer_Wrap.M_Release
#endif
                    }},
                    {"IsValid", new MemberRegisterInfo { Name = "IsValid", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GraphicsBuffer_Wrap.M_IsValid
#endif
                    }},
                    {"SetData", new MemberRegisterInfo { Name = "SetData", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GraphicsBuffer_Wrap.M_SetData
#endif
                    }},
                    {"GetData", new MemberRegisterInfo { Name = "GetData", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GraphicsBuffer_Wrap.M_GetData
#endif
                    }},
                    {"GetNativeBufferPtr", new MemberRegisterInfo { Name = "GetNativeBufferPtr", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GraphicsBuffer_Wrap.M_GetNativeBufferPtr
#endif
                    }},
                    {"SetCounterValue", new MemberRegisterInfo { Name = "SetCounterValue", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GraphicsBuffer_Wrap.M_SetCounterValue
#endif
                    }},
                    {"count", new MemberRegisterInfo { Name = "count", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GraphicsBuffer_Wrap.G_count
#endif
                    }},
                    {"stride", new MemberRegisterInfo { Name = "stride", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GraphicsBuffer_Wrap.G_stride
#endif
                    }},
                    {"CopyCount_static", new MemberRegisterInfo { Name = "CopyCount", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GraphicsBuffer_Wrap.F_CopyCount
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_OcclusionPortal_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_OcclusionPortal_Wrap.Constructor
#endif
                    }},
                    {"open", new MemberRegisterInfo { Name = "open", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_OcclusionPortal_Wrap.G_open, PropertySetter = UnityEngine_OcclusionPortal_Wrap.S_open
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_OcclusionArea_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_OcclusionArea_Wrap.Constructor
#endif
                    }},
                    {"center", new MemberRegisterInfo { Name = "center", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_OcclusionArea_Wrap.G_center, PropertySetter = UnityEngine_OcclusionArea_Wrap.S_center
#endif
                    }},
                    {"size", new MemberRegisterInfo { Name = "size", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_OcclusionArea_Wrap.G_size, PropertySetter = UnityEngine_OcclusionArea_Wrap.S_size
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Flare_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Flare_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_LensFlare_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_LensFlare_Wrap.Constructor
#endif
                    }},
                    {"brightness", new MemberRegisterInfo { Name = "brightness", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LensFlare_Wrap.G_brightness, PropertySetter = UnityEngine_LensFlare_Wrap.S_brightness
#endif
                    }},
                    {"fadeSpeed", new MemberRegisterInfo { Name = "fadeSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LensFlare_Wrap.G_fadeSpeed, PropertySetter = UnityEngine_LensFlare_Wrap.S_fadeSpeed
#endif
                    }},
                    {"color", new MemberRegisterInfo { Name = "color", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LensFlare_Wrap.G_color, PropertySetter = UnityEngine_LensFlare_Wrap.S_color
#endif
                    }},
                    {"flare", new MemberRegisterInfo { Name = "flare", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LensFlare_Wrap.G_flare, PropertySetter = UnityEngine_LensFlare_Wrap.S_flare
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_LightBakingOutput_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_LightBakingOutput_Wrap.Constructor
#endif
                    }},
                    {"probeOcclusionLightIndex", new MemberRegisterInfo { Name = "probeOcclusionLightIndex", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightBakingOutput_Wrap.G_probeOcclusionLightIndex, PropertySetter = UnityEngine_LightBakingOutput_Wrap.S_probeOcclusionLightIndex
#endif
                    }},
                    {"occlusionMaskChannel", new MemberRegisterInfo { Name = "occlusionMaskChannel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightBakingOutput_Wrap.G_occlusionMaskChannel, PropertySetter = UnityEngine_LightBakingOutput_Wrap.S_occlusionMaskChannel
#endif
                    }},
                    {"lightmapBakeType", new MemberRegisterInfo { Name = "lightmapBakeType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightBakingOutput_Wrap.G_lightmapBakeType, PropertySetter = UnityEngine_LightBakingOutput_Wrap.S_lightmapBakeType
#endif
                    }},
                    {"mixedLightingMode", new MemberRegisterInfo { Name = "mixedLightingMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightBakingOutput_Wrap.G_mixedLightingMode, PropertySetter = UnityEngine_LightBakingOutput_Wrap.S_mixedLightingMode
#endif
                    }},
                    {"isBaked", new MemberRegisterInfo { Name = "isBaked", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightBakingOutput_Wrap.G_isBaked, PropertySetter = UnityEngine_LightBakingOutput_Wrap.S_isBaked
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Light_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Light_Wrap.Constructor
#endif
                    }},
                    {"Reset", new MemberRegisterInfo { Name = "Reset", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Light_Wrap.M_Reset
#endif
                    }},
                    {"SetLightDirty", new MemberRegisterInfo { Name = "SetLightDirty", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"AddCommandBuffer", new MemberRegisterInfo { Name = "AddCommandBuffer", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Light_Wrap.M_AddCommandBuffer
#endif
                    }},
                    {"AddCommandBufferAsync", new MemberRegisterInfo { Name = "AddCommandBufferAsync", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Light_Wrap.M_AddCommandBufferAsync
#endif
                    }},
                    {"RemoveCommandBuffer", new MemberRegisterInfo { Name = "RemoveCommandBuffer", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Light_Wrap.M_RemoveCommandBuffer
#endif
                    }},
                    {"RemoveCommandBuffers", new MemberRegisterInfo { Name = "RemoveCommandBuffers", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Light_Wrap.M_RemoveCommandBuffers
#endif
                    }},
                    {"RemoveAllCommandBuffers", new MemberRegisterInfo { Name = "RemoveAllCommandBuffers", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Light_Wrap.M_RemoveAllCommandBuffers
#endif
                    }},
                    {"GetCommandBuffers", new MemberRegisterInfo { Name = "GetCommandBuffers", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Light_Wrap.M_GetCommandBuffers
#endif
                    }},
                    {"type", new MemberRegisterInfo { Name = "type", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_type, PropertySetter = UnityEngine_Light_Wrap.S_type
#endif
                    }},
                    {"shape", new MemberRegisterInfo { Name = "shape", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_shape, PropertySetter = UnityEngine_Light_Wrap.S_shape
#endif
                    }},
                    {"spotAngle", new MemberRegisterInfo { Name = "spotAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_spotAngle, PropertySetter = UnityEngine_Light_Wrap.S_spotAngle
#endif
                    }},
                    {"innerSpotAngle", new MemberRegisterInfo { Name = "innerSpotAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_innerSpotAngle, PropertySetter = UnityEngine_Light_Wrap.S_innerSpotAngle
#endif
                    }},
                    {"color", new MemberRegisterInfo { Name = "color", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_color, PropertySetter = UnityEngine_Light_Wrap.S_color
#endif
                    }},
                    {"colorTemperature", new MemberRegisterInfo { Name = "colorTemperature", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_colorTemperature, PropertySetter = UnityEngine_Light_Wrap.S_colorTemperature
#endif
                    }},
                    {"useColorTemperature", new MemberRegisterInfo { Name = "useColorTemperature", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_useColorTemperature, PropertySetter = UnityEngine_Light_Wrap.S_useColorTemperature
#endif
                    }},
                    {"intensity", new MemberRegisterInfo { Name = "intensity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_intensity, PropertySetter = UnityEngine_Light_Wrap.S_intensity
#endif
                    }},
                    {"bounceIntensity", new MemberRegisterInfo { Name = "bounceIntensity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_bounceIntensity, PropertySetter = UnityEngine_Light_Wrap.S_bounceIntensity
#endif
                    }},
                    {"useBoundingSphereOverride", new MemberRegisterInfo { Name = "useBoundingSphereOverride", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_useBoundingSphereOverride, PropertySetter = UnityEngine_Light_Wrap.S_useBoundingSphereOverride
#endif
                    }},
                    {"boundingSphereOverride", new MemberRegisterInfo { Name = "boundingSphereOverride", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_boundingSphereOverride, PropertySetter = UnityEngine_Light_Wrap.S_boundingSphereOverride
#endif
                    }},
                    {"useViewFrustumForShadowCasterCull", new MemberRegisterInfo { Name = "useViewFrustumForShadowCasterCull", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_useViewFrustumForShadowCasterCull, PropertySetter = UnityEngine_Light_Wrap.S_useViewFrustumForShadowCasterCull
#endif
                    }},
                    {"shadowCustomResolution", new MemberRegisterInfo { Name = "shadowCustomResolution", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_shadowCustomResolution, PropertySetter = UnityEngine_Light_Wrap.S_shadowCustomResolution
#endif
                    }},
                    {"shadowBias", new MemberRegisterInfo { Name = "shadowBias", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_shadowBias, PropertySetter = UnityEngine_Light_Wrap.S_shadowBias
#endif
                    }},
                    {"shadowNormalBias", new MemberRegisterInfo { Name = "shadowNormalBias", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_shadowNormalBias, PropertySetter = UnityEngine_Light_Wrap.S_shadowNormalBias
#endif
                    }},
                    {"shadowNearPlane", new MemberRegisterInfo { Name = "shadowNearPlane", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_shadowNearPlane, PropertySetter = UnityEngine_Light_Wrap.S_shadowNearPlane
#endif
                    }},
                    {"useShadowMatrixOverride", new MemberRegisterInfo { Name = "useShadowMatrixOverride", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_useShadowMatrixOverride, PropertySetter = UnityEngine_Light_Wrap.S_useShadowMatrixOverride
#endif
                    }},
                    {"shadowMatrixOverride", new MemberRegisterInfo { Name = "shadowMatrixOverride", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_shadowMatrixOverride, PropertySetter = UnityEngine_Light_Wrap.S_shadowMatrixOverride
#endif
                    }},
                    {"range", new MemberRegisterInfo { Name = "range", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_range, PropertySetter = UnityEngine_Light_Wrap.S_range
#endif
                    }},
                    {"flare", new MemberRegisterInfo { Name = "flare", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_flare, PropertySetter = UnityEngine_Light_Wrap.S_flare
#endif
                    }},
                    {"bakingOutput", new MemberRegisterInfo { Name = "bakingOutput", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_bakingOutput, PropertySetter = UnityEngine_Light_Wrap.S_bakingOutput
#endif
                    }},
                    {"cullingMask", new MemberRegisterInfo { Name = "cullingMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_cullingMask, PropertySetter = UnityEngine_Light_Wrap.S_cullingMask
#endif
                    }},
                    {"renderingLayerMask", new MemberRegisterInfo { Name = "renderingLayerMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_renderingLayerMask, PropertySetter = UnityEngine_Light_Wrap.S_renderingLayerMask
#endif
                    }},
                    {"lightShadowCasterMode", new MemberRegisterInfo { Name = "lightShadowCasterMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_lightShadowCasterMode, PropertySetter = UnityEngine_Light_Wrap.S_lightShadowCasterMode
#endif
                    }},
                    {"shadowRadius", new MemberRegisterInfo { Name = "shadowRadius", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"shadowAngle", new MemberRegisterInfo { Name = "shadowAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"shadows", new MemberRegisterInfo { Name = "shadows", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_shadows, PropertySetter = UnityEngine_Light_Wrap.S_shadows
#endif
                    }},
                    {"shadowStrength", new MemberRegisterInfo { Name = "shadowStrength", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_shadowStrength, PropertySetter = UnityEngine_Light_Wrap.S_shadowStrength
#endif
                    }},
                    {"shadowResolution", new MemberRegisterInfo { Name = "shadowResolution", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_shadowResolution, PropertySetter = UnityEngine_Light_Wrap.S_shadowResolution
#endif
                    }},
                    {"layerShadowCullDistances", new MemberRegisterInfo { Name = "layerShadowCullDistances", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_layerShadowCullDistances, PropertySetter = UnityEngine_Light_Wrap.S_layerShadowCullDistances
#endif
                    }},
                    {"cookieSize", new MemberRegisterInfo { Name = "cookieSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_cookieSize, PropertySetter = UnityEngine_Light_Wrap.S_cookieSize
#endif
                    }},
                    {"cookie", new MemberRegisterInfo { Name = "cookie", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_cookie, PropertySetter = UnityEngine_Light_Wrap.S_cookie
#endif
                    }},
                    {"renderMode", new MemberRegisterInfo { Name = "renderMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_renderMode, PropertySetter = UnityEngine_Light_Wrap.S_renderMode
#endif
                    }},
                    {"areaSize", new MemberRegisterInfo { Name = "areaSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"lightmapBakeType", new MemberRegisterInfo { Name = "lightmapBakeType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"commandBufferCount", new MemberRegisterInfo { Name = "commandBufferCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Light_Wrap.G_commandBufferCount
#endif
                    }},
                    {"GetLights_static", new MemberRegisterInfo { Name = "GetLights", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Light_Wrap.F_GetLights
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Skybox_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Skybox_Wrap.Constructor
#endif
                    }},
                    {"material", new MemberRegisterInfo { Name = "material", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Skybox_Wrap.G_material, PropertySetter = UnityEngine_Skybox_Wrap.S_material
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_MeshFilter_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_MeshFilter_Wrap.Constructor
#endif
                    }},
                    {"sharedMesh", new MemberRegisterInfo { Name = "sharedMesh", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_MeshFilter_Wrap.G_sharedMesh, PropertySetter = UnityEngine_MeshFilter_Wrap.S_sharedMesh
#endif
                    }},
                    {"mesh", new MemberRegisterInfo { Name = "mesh", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_MeshFilter_Wrap.G_mesh, PropertySetter = UnityEngine_MeshFilter_Wrap.S_mesh
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_LightProbeProxyVolume_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_LightProbeProxyVolume_Wrap.Constructor
#endif
                    }},
                    {"Update", new MemberRegisterInfo { Name = "Update", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LightProbeProxyVolume_Wrap.M_Update
#endif
                    }},
                    {"boundsGlobal", new MemberRegisterInfo { Name = "boundsGlobal", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightProbeProxyVolume_Wrap.G_boundsGlobal
#endif
                    }},
                    {"sizeCustom", new MemberRegisterInfo { Name = "sizeCustom", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightProbeProxyVolume_Wrap.G_sizeCustom, PropertySetter = UnityEngine_LightProbeProxyVolume_Wrap.S_sizeCustom
#endif
                    }},
                    {"originCustom", new MemberRegisterInfo { Name = "originCustom", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightProbeProxyVolume_Wrap.G_originCustom, PropertySetter = UnityEngine_LightProbeProxyVolume_Wrap.S_originCustom
#endif
                    }},
                    {"probeDensity", new MemberRegisterInfo { Name = "probeDensity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightProbeProxyVolume_Wrap.G_probeDensity, PropertySetter = UnityEngine_LightProbeProxyVolume_Wrap.S_probeDensity
#endif
                    }},
                    {"gridResolutionX", new MemberRegisterInfo { Name = "gridResolutionX", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightProbeProxyVolume_Wrap.G_gridResolutionX, PropertySetter = UnityEngine_LightProbeProxyVolume_Wrap.S_gridResolutionX
#endif
                    }},
                    {"gridResolutionY", new MemberRegisterInfo { Name = "gridResolutionY", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightProbeProxyVolume_Wrap.G_gridResolutionY, PropertySetter = UnityEngine_LightProbeProxyVolume_Wrap.S_gridResolutionY
#endif
                    }},
                    {"gridResolutionZ", new MemberRegisterInfo { Name = "gridResolutionZ", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightProbeProxyVolume_Wrap.G_gridResolutionZ, PropertySetter = UnityEngine_LightProbeProxyVolume_Wrap.S_gridResolutionZ
#endif
                    }},
                    {"boundingBoxMode", new MemberRegisterInfo { Name = "boundingBoxMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightProbeProxyVolume_Wrap.G_boundingBoxMode, PropertySetter = UnityEngine_LightProbeProxyVolume_Wrap.S_boundingBoxMode
#endif
                    }},
                    {"resolutionMode", new MemberRegisterInfo { Name = "resolutionMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightProbeProxyVolume_Wrap.G_resolutionMode, PropertySetter = UnityEngine_LightProbeProxyVolume_Wrap.S_resolutionMode
#endif
                    }},
                    {"probePositionMode", new MemberRegisterInfo { Name = "probePositionMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightProbeProxyVolume_Wrap.G_probePositionMode, PropertySetter = UnityEngine_LightProbeProxyVolume_Wrap.S_probePositionMode
#endif
                    }},
                    {"refreshMode", new MemberRegisterInfo { Name = "refreshMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightProbeProxyVolume_Wrap.G_refreshMode, PropertySetter = UnityEngine_LightProbeProxyVolume_Wrap.S_refreshMode
#endif
                    }},
                    {"qualityMode", new MemberRegisterInfo { Name = "qualityMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightProbeProxyVolume_Wrap.G_qualityMode, PropertySetter = UnityEngine_LightProbeProxyVolume_Wrap.S_qualityMode
#endif
                    }},
                    {"dataFormat", new MemberRegisterInfo { Name = "dataFormat", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightProbeProxyVolume_Wrap.G_dataFormat, PropertySetter = UnityEngine_LightProbeProxyVolume_Wrap.S_dataFormat
#endif
                    }},
                    {"isFeatureSupported_static", new MemberRegisterInfo { Name = "isFeatureSupported", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LightProbeProxyVolume_Wrap.G_isFeatureSupported
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SkinnedMeshRenderer_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SkinnedMeshRenderer_Wrap.Constructor
#endif
                    }},
                    {"GetBlendShapeWeight", new MemberRegisterInfo { Name = "GetBlendShapeWeight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SkinnedMeshRenderer_Wrap.M_GetBlendShapeWeight
#endif
                    }},
                    {"SetBlendShapeWeight", new MemberRegisterInfo { Name = "SetBlendShapeWeight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SkinnedMeshRenderer_Wrap.M_SetBlendShapeWeight
#endif
                    }},
                    {"BakeMesh", new MemberRegisterInfo { Name = "BakeMesh", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SkinnedMeshRenderer_Wrap.M_BakeMesh
#endif
                    }},
                    {"quality", new MemberRegisterInfo { Name = "quality", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SkinnedMeshRenderer_Wrap.G_quality, PropertySetter = UnityEngine_SkinnedMeshRenderer_Wrap.S_quality
#endif
                    }},
                    {"updateWhenOffscreen", new MemberRegisterInfo { Name = "updateWhenOffscreen", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SkinnedMeshRenderer_Wrap.G_updateWhenOffscreen, PropertySetter = UnityEngine_SkinnedMeshRenderer_Wrap.S_updateWhenOffscreen
#endif
                    }},
                    {"forceMatrixRecalculationPerRender", new MemberRegisterInfo { Name = "forceMatrixRecalculationPerRender", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SkinnedMeshRenderer_Wrap.G_forceMatrixRecalculationPerRender, PropertySetter = UnityEngine_SkinnedMeshRenderer_Wrap.S_forceMatrixRecalculationPerRender
#endif
                    }},
                    {"rootBone", new MemberRegisterInfo { Name = "rootBone", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SkinnedMeshRenderer_Wrap.G_rootBone, PropertySetter = UnityEngine_SkinnedMeshRenderer_Wrap.S_rootBone
#endif
                    }},
                    {"bones", new MemberRegisterInfo { Name = "bones", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SkinnedMeshRenderer_Wrap.G_bones, PropertySetter = UnityEngine_SkinnedMeshRenderer_Wrap.S_bones
#endif
                    }},
                    {"sharedMesh", new MemberRegisterInfo { Name = "sharedMesh", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SkinnedMeshRenderer_Wrap.G_sharedMesh, PropertySetter = UnityEngine_SkinnedMeshRenderer_Wrap.S_sharedMesh
#endif
                    }},
                    {"skinnedMotionVectors", new MemberRegisterInfo { Name = "skinnedMotionVectors", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SkinnedMeshRenderer_Wrap.G_skinnedMotionVectors, PropertySetter = UnityEngine_SkinnedMeshRenderer_Wrap.S_skinnedMotionVectors
#endif
                    }},
                    {"localBounds", new MemberRegisterInfo { Name = "localBounds", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SkinnedMeshRenderer_Wrap.G_localBounds, PropertySetter = UnityEngine_SkinnedMeshRenderer_Wrap.S_localBounds
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_LightProbeGroup_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_LightProbeGroup_Wrap.Constructor
#endif
                    }},
                    {"probePositions", new MemberRegisterInfo { Name = "probePositions", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"dering", new MemberRegisterInfo { Name = "dering", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_LineUtility_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_LineUtility_Wrap.Constructor
#endif
                    }},
                    {"Simplify_static", new MemberRegisterInfo { Name = "Simplify", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LineUtility_Wrap.F_Simplify
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_LOD_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_LOD_Wrap.Constructor
#endif
                    }},
                    {"screenRelativeTransitionHeight", new MemberRegisterInfo { Name = "screenRelativeTransitionHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LOD_Wrap.G_screenRelativeTransitionHeight, PropertySetter = UnityEngine_LOD_Wrap.S_screenRelativeTransitionHeight
#endif
                    }},
                    {"fadeTransitionWidth", new MemberRegisterInfo { Name = "fadeTransitionWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LOD_Wrap.G_fadeTransitionWidth, PropertySetter = UnityEngine_LOD_Wrap.S_fadeTransitionWidth
#endif
                    }},
                    {"renderers", new MemberRegisterInfo { Name = "renderers", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LOD_Wrap.G_renderers, PropertySetter = UnityEngine_LOD_Wrap.S_renderers
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_LODGroup_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_LODGroup_Wrap.Constructor
#endif
                    }},
                    {"RecalculateBounds", new MemberRegisterInfo { Name = "RecalculateBounds", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LODGroup_Wrap.M_RecalculateBounds
#endif
                    }},
                    {"GetLODs", new MemberRegisterInfo { Name = "GetLODs", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LODGroup_Wrap.M_GetLODs
#endif
                    }},
                    {"SetLODs", new MemberRegisterInfo { Name = "SetLODs", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LODGroup_Wrap.M_SetLODs
#endif
                    }},
                    {"ForceLOD", new MemberRegisterInfo { Name = "ForceLOD", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LODGroup_Wrap.M_ForceLOD
#endif
                    }},
                    {"localReferencePoint", new MemberRegisterInfo { Name = "localReferencePoint", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LODGroup_Wrap.G_localReferencePoint, PropertySetter = UnityEngine_LODGroup_Wrap.S_localReferencePoint
#endif
                    }},
                    {"size", new MemberRegisterInfo { Name = "size", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LODGroup_Wrap.G_size, PropertySetter = UnityEngine_LODGroup_Wrap.S_size
#endif
                    }},
                    {"lodCount", new MemberRegisterInfo { Name = "lodCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LODGroup_Wrap.G_lodCount
#endif
                    }},
                    {"fadeMode", new MemberRegisterInfo { Name = "fadeMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LODGroup_Wrap.G_fadeMode, PropertySetter = UnityEngine_LODGroup_Wrap.S_fadeMode
#endif
                    }},
                    {"animateCrossFading", new MemberRegisterInfo { Name = "animateCrossFading", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LODGroup_Wrap.G_animateCrossFading, PropertySetter = UnityEngine_LODGroup_Wrap.S_animateCrossFading
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LODGroup_Wrap.G_enabled, PropertySetter = UnityEngine_LODGroup_Wrap.S_enabled
#endif
                    }},
                    {"crossFadeAnimationDuration_static", new MemberRegisterInfo { Name = "crossFadeAnimationDuration", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LODGroup_Wrap.G_crossFadeAnimationDuration, PropertySetter = UnityEngine_LODGroup_Wrap.S_crossFadeAnimationDuration
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_BoneWeight_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_BoneWeight_Wrap.Constructor
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BoneWeight_Wrap.M_GetHashCode
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BoneWeight_Wrap.M_Equals
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BoneWeight_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BoneWeight_Wrap.O_op_Inequality
#endif
                    }},
                    {"weight0", new MemberRegisterInfo { Name = "weight0", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoneWeight_Wrap.G_weight0, PropertySetter = UnityEngine_BoneWeight_Wrap.S_weight0
#endif
                    }},
                    {"weight1", new MemberRegisterInfo { Name = "weight1", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoneWeight_Wrap.G_weight1, PropertySetter = UnityEngine_BoneWeight_Wrap.S_weight1
#endif
                    }},
                    {"weight2", new MemberRegisterInfo { Name = "weight2", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoneWeight_Wrap.G_weight2, PropertySetter = UnityEngine_BoneWeight_Wrap.S_weight2
#endif
                    }},
                    {"weight3", new MemberRegisterInfo { Name = "weight3", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoneWeight_Wrap.G_weight3, PropertySetter = UnityEngine_BoneWeight_Wrap.S_weight3
#endif
                    }},
                    {"boneIndex0", new MemberRegisterInfo { Name = "boneIndex0", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoneWeight_Wrap.G_boneIndex0, PropertySetter = UnityEngine_BoneWeight_Wrap.S_boneIndex0
#endif
                    }},
                    {"boneIndex1", new MemberRegisterInfo { Name = "boneIndex1", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoneWeight_Wrap.G_boneIndex1, PropertySetter = UnityEngine_BoneWeight_Wrap.S_boneIndex1
#endif
                    }},
                    {"boneIndex2", new MemberRegisterInfo { Name = "boneIndex2", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoneWeight_Wrap.G_boneIndex2, PropertySetter = UnityEngine_BoneWeight_Wrap.S_boneIndex2
#endif
                    }},
                    {"boneIndex3", new MemberRegisterInfo { Name = "boneIndex3", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoneWeight_Wrap.G_boneIndex3, PropertySetter = UnityEngine_BoneWeight_Wrap.S_boneIndex3
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_BoneWeight1_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_BoneWeight1_Wrap.Constructor
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BoneWeight1_Wrap.M_Equals
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BoneWeight1_Wrap.M_GetHashCode
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BoneWeight1_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BoneWeight1_Wrap.O_op_Inequality
#endif
                    }},
                    {"weight", new MemberRegisterInfo { Name = "weight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoneWeight1_Wrap.G_weight, PropertySetter = UnityEngine_BoneWeight1_Wrap.S_weight
#endif
                    }},
                    {"boneIndex", new MemberRegisterInfo { Name = "boneIndex", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoneWeight1_Wrap.G_boneIndex, PropertySetter = UnityEngine_BoneWeight1_Wrap.S_boneIndex
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CombineInstance_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_CombineInstance_Wrap.Constructor
#endif
                    }},
                    {"mesh", new MemberRegisterInfo { Name = "mesh", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CombineInstance_Wrap.G_mesh, PropertySetter = UnityEngine_CombineInstance_Wrap.S_mesh
#endif
                    }},
                    {"subMeshIndex", new MemberRegisterInfo { Name = "subMeshIndex", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CombineInstance_Wrap.G_subMeshIndex, PropertySetter = UnityEngine_CombineInstance_Wrap.S_subMeshIndex
#endif
                    }},
                    {"transform", new MemberRegisterInfo { Name = "transform", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CombineInstance_Wrap.G_transform, PropertySetter = UnityEngine_CombineInstance_Wrap.S_transform
#endif
                    }},
                    {"lightmapScaleOffset", new MemberRegisterInfo { Name = "lightmapScaleOffset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CombineInstance_Wrap.G_lightmapScaleOffset, PropertySetter = UnityEngine_CombineInstance_Wrap.S_lightmapScaleOffset
#endif
                    }},
                    {"realtimeLightmapScaleOffset", new MemberRegisterInfo { Name = "realtimeLightmapScaleOffset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CombineInstance_Wrap.G_realtimeLightmapScaleOffset, PropertySetter = UnityEngine_CombineInstance_Wrap.S_realtimeLightmapScaleOffset
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Texture_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"GetNativeTexturePtr", new MemberRegisterInfo { Name = "GetNativeTexturePtr", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture_Wrap.M_GetNativeTexturePtr
#endif
                    }},
                    {"IncrementUpdateCount", new MemberRegisterInfo { Name = "IncrementUpdateCount", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture_Wrap.M_IncrementUpdateCount
#endif
                    }},
                    {"mipmapCount", new MemberRegisterInfo { Name = "mipmapCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_mipmapCount
#endif
                    }},
                    {"graphicsFormat", new MemberRegisterInfo { Name = "graphicsFormat", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_graphicsFormat
#endif
                    }},
                    {"width", new MemberRegisterInfo { Name = "width", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_width, PropertySetter = UnityEngine_Texture_Wrap.S_width
#endif
                    }},
                    {"height", new MemberRegisterInfo { Name = "height", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_height, PropertySetter = UnityEngine_Texture_Wrap.S_height
#endif
                    }},
                    {"dimension", new MemberRegisterInfo { Name = "dimension", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_dimension, PropertySetter = UnityEngine_Texture_Wrap.S_dimension
#endif
                    }},
                    {"isReadable", new MemberRegisterInfo { Name = "isReadable", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_isReadable
#endif
                    }},
                    {"wrapMode", new MemberRegisterInfo { Name = "wrapMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_wrapMode, PropertySetter = UnityEngine_Texture_Wrap.S_wrapMode
#endif
                    }},
                    {"wrapModeU", new MemberRegisterInfo { Name = "wrapModeU", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_wrapModeU, PropertySetter = UnityEngine_Texture_Wrap.S_wrapModeU
#endif
                    }},
                    {"wrapModeV", new MemberRegisterInfo { Name = "wrapModeV", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_wrapModeV, PropertySetter = UnityEngine_Texture_Wrap.S_wrapModeV
#endif
                    }},
                    {"wrapModeW", new MemberRegisterInfo { Name = "wrapModeW", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_wrapModeW, PropertySetter = UnityEngine_Texture_Wrap.S_wrapModeW
#endif
                    }},
                    {"filterMode", new MemberRegisterInfo { Name = "filterMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_filterMode, PropertySetter = UnityEngine_Texture_Wrap.S_filterMode
#endif
                    }},
                    {"anisoLevel", new MemberRegisterInfo { Name = "anisoLevel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_anisoLevel, PropertySetter = UnityEngine_Texture_Wrap.S_anisoLevel
#endif
                    }},
                    {"mipMapBias", new MemberRegisterInfo { Name = "mipMapBias", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_mipMapBias, PropertySetter = UnityEngine_Texture_Wrap.S_mipMapBias
#endif
                    }},
                    {"texelSize", new MemberRegisterInfo { Name = "texelSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_texelSize
#endif
                    }},
                    {"updateCount", new MemberRegisterInfo { Name = "updateCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_updateCount
#endif
                    }},
                    {"imageContentsHash", new MemberRegisterInfo { Name = "imageContentsHash", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"SetGlobalAnisotropicFilteringLimits_static", new MemberRegisterInfo { Name = "SetGlobalAnisotropicFilteringLimits", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture_Wrap.F_SetGlobalAnisotropicFilteringLimits
#endif
                    }},
                    {"SetStreamingTextureMaterialDebugProperties_static", new MemberRegisterInfo { Name = "SetStreamingTextureMaterialDebugProperties", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture_Wrap.F_SetStreamingTextureMaterialDebugProperties
#endif
                    }},
                    {"masterTextureLimit_static", new MemberRegisterInfo { Name = "masterTextureLimit", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_masterTextureLimit, PropertySetter = UnityEngine_Texture_Wrap.S_masterTextureLimit
#endif
                    }},
                    {"anisotropicFiltering_static", new MemberRegisterInfo { Name = "anisotropicFiltering", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_anisotropicFiltering, PropertySetter = UnityEngine_Texture_Wrap.S_anisotropicFiltering
#endif
                    }},
                    {"totalTextureMemory_static", new MemberRegisterInfo { Name = "totalTextureMemory", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_totalTextureMemory
#endif
                    }},
                    {"desiredTextureMemory_static", new MemberRegisterInfo { Name = "desiredTextureMemory", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_desiredTextureMemory
#endif
                    }},
                    {"targetTextureMemory_static", new MemberRegisterInfo { Name = "targetTextureMemory", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_targetTextureMemory
#endif
                    }},
                    {"currentTextureMemory_static", new MemberRegisterInfo { Name = "currentTextureMemory", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_currentTextureMemory
#endif
                    }},
                    {"nonStreamingTextureMemory_static", new MemberRegisterInfo { Name = "nonStreamingTextureMemory", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_nonStreamingTextureMemory
#endif
                    }},
                    {"streamingMipmapUploadCount_static", new MemberRegisterInfo { Name = "streamingMipmapUploadCount", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_streamingMipmapUploadCount
#endif
                    }},
                    {"streamingRendererCount_static", new MemberRegisterInfo { Name = "streamingRendererCount", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_streamingRendererCount
#endif
                    }},
                    {"streamingTextureCount_static", new MemberRegisterInfo { Name = "streamingTextureCount", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_streamingTextureCount
#endif
                    }},
                    {"nonStreamingTextureCount_static", new MemberRegisterInfo { Name = "nonStreamingTextureCount", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_nonStreamingTextureCount
#endif
                    }},
                    {"streamingTexturePendingLoadCount_static", new MemberRegisterInfo { Name = "streamingTexturePendingLoadCount", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_streamingTexturePendingLoadCount
#endif
                    }},
                    {"streamingTextureLoadingCount_static", new MemberRegisterInfo { Name = "streamingTextureLoadingCount", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_streamingTextureLoadingCount
#endif
                    }},
                    {"streamingTextureForceLoadAll_static", new MemberRegisterInfo { Name = "streamingTextureForceLoadAll", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_streamingTextureForceLoadAll, PropertySetter = UnityEngine_Texture_Wrap.S_streamingTextureForceLoadAll
#endif
                    }},
                    {"streamingTextureDiscardUnusedMips_static", new MemberRegisterInfo { Name = "streamingTextureDiscardUnusedMips", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_streamingTextureDiscardUnusedMips, PropertySetter = UnityEngine_Texture_Wrap.S_streamingTextureDiscardUnusedMips
#endif
                    }},
                    {"allowThreadedTextureCreation_static", new MemberRegisterInfo { Name = "allowThreadedTextureCreation", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_allowThreadedTextureCreation, PropertySetter = UnityEngine_Texture_Wrap.S_allowThreadedTextureCreation
#endif
                    }},
                    {"GenerateAllMips_static", new MemberRegisterInfo { Name = "GenerateAllMips", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture_Wrap.G_GenerateAllMips
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Texture2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Texture2D_Wrap.Constructor
#endif
                    }},
                    {"Compress", new MemberRegisterInfo { Name = "Compress", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_Compress
#endif
                    }},
                    {"ClearRequestedMipmapLevel", new MemberRegisterInfo { Name = "ClearRequestedMipmapLevel", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_ClearRequestedMipmapLevel
#endif
                    }},
                    {"IsRequestedMipmapLevelLoaded", new MemberRegisterInfo { Name = "IsRequestedMipmapLevelLoaded", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_IsRequestedMipmapLevelLoaded
#endif
                    }},
                    {"ClearMinimumMipmapLevel", new MemberRegisterInfo { Name = "ClearMinimumMipmapLevel", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_ClearMinimumMipmapLevel
#endif
                    }},
                    {"UpdateExternalTexture", new MemberRegisterInfo { Name = "UpdateExternalTexture", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_UpdateExternalTexture
#endif
                    }},
                    {"GetRawTextureData", new MemberRegisterInfo { Name = "GetRawTextureData", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_GetRawTextureData
#endif
                    }},
                    {"GetPixels", new MemberRegisterInfo { Name = "GetPixels", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_GetPixels
#endif
                    }},
                    {"GetPixels32", new MemberRegisterInfo { Name = "GetPixels32", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_GetPixels32
#endif
                    }},
                    {"PackTextures", new MemberRegisterInfo { Name = "PackTextures", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_PackTextures
#endif
                    }},
                    {"SetPixel", new MemberRegisterInfo { Name = "SetPixel", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_SetPixel
#endif
                    }},
                    {"SetPixels", new MemberRegisterInfo { Name = "SetPixels", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_SetPixels
#endif
                    }},
                    {"GetPixel", new MemberRegisterInfo { Name = "GetPixel", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_GetPixel
#endif
                    }},
                    {"GetPixelBilinear", new MemberRegisterInfo { Name = "GetPixelBilinear", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_GetPixelBilinear
#endif
                    }},
                    {"LoadRawTextureData", new MemberRegisterInfo { Name = "LoadRawTextureData", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_LoadRawTextureData
#endif
                    }},
                    {"Apply", new MemberRegisterInfo { Name = "Apply", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_Apply
#endif
                    }},
                    {"Resize", new MemberRegisterInfo { Name = "Resize", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_Resize
#endif
                    }},
                    {"ReadPixels", new MemberRegisterInfo { Name = "ReadPixels", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_ReadPixels
#endif
                    }},
                    {"SetPixels32", new MemberRegisterInfo { Name = "SetPixels32", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_SetPixels32
#endif
                    }},
                    {"EncodeToTGA", new MemberRegisterInfo { Name = "EncodeToTGA", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_EncodeToTGA
#endif
                    }},
                    {"EncodeToPNG", new MemberRegisterInfo { Name = "EncodeToPNG", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_EncodeToPNG
#endif
                    }},
                    {"EncodeToJPG", new MemberRegisterInfo { Name = "EncodeToJPG", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_EncodeToJPG
#endif
                    }},
                    {"EncodeToEXR", new MemberRegisterInfo { Name = "EncodeToEXR", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_EncodeToEXR
#endif
                    }},
                    {"LoadImage", new MemberRegisterInfo { Name = "LoadImage", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.M_LoadImage
#endif
                    }},
                    {"format", new MemberRegisterInfo { Name = "format", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2D_Wrap.G_format
#endif
                    }},
                    {"ignoreMipmapLimit", new MemberRegisterInfo { Name = "ignoreMipmapLimit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2D_Wrap.G_ignoreMipmapLimit, PropertySetter = UnityEngine_Texture2D_Wrap.S_ignoreMipmapLimit
#endif
                    }},
                    {"isReadable", new MemberRegisterInfo { Name = "isReadable", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2D_Wrap.G_isReadable
#endif
                    }},
                    {"vtOnly", new MemberRegisterInfo { Name = "vtOnly", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2D_Wrap.G_vtOnly
#endif
                    }},
                    {"streamingMipmaps", new MemberRegisterInfo { Name = "streamingMipmaps", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2D_Wrap.G_streamingMipmaps
#endif
                    }},
                    {"streamingMipmapsPriority", new MemberRegisterInfo { Name = "streamingMipmapsPriority", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2D_Wrap.G_streamingMipmapsPriority
#endif
                    }},
                    {"requestedMipmapLevel", new MemberRegisterInfo { Name = "requestedMipmapLevel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2D_Wrap.G_requestedMipmapLevel, PropertySetter = UnityEngine_Texture2D_Wrap.S_requestedMipmapLevel
#endif
                    }},
                    {"minimumMipmapLevel", new MemberRegisterInfo { Name = "minimumMipmapLevel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2D_Wrap.G_minimumMipmapLevel, PropertySetter = UnityEngine_Texture2D_Wrap.S_minimumMipmapLevel
#endif
                    }},
                    {"calculatedMipmapLevel", new MemberRegisterInfo { Name = "calculatedMipmapLevel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2D_Wrap.G_calculatedMipmapLevel
#endif
                    }},
                    {"desiredMipmapLevel", new MemberRegisterInfo { Name = "desiredMipmapLevel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2D_Wrap.G_desiredMipmapLevel
#endif
                    }},
                    {"loadingMipmapLevel", new MemberRegisterInfo { Name = "loadingMipmapLevel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2D_Wrap.G_loadingMipmapLevel
#endif
                    }},
                    {"loadedMipmapLevel", new MemberRegisterInfo { Name = "loadedMipmapLevel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2D_Wrap.G_loadedMipmapLevel
#endif
                    }},
                    {"alphaIsTransparency", new MemberRegisterInfo { Name = "alphaIsTransparency", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"CreateExternalTexture_static", new MemberRegisterInfo { Name = "CreateExternalTexture", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.F_CreateExternalTexture
#endif
                    }},
                    {"GenerateAtlas_static", new MemberRegisterInfo { Name = "GenerateAtlas", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2D_Wrap.F_GenerateAtlas
#endif
                    }},
                    {"whiteTexture_static", new MemberRegisterInfo { Name = "whiteTexture", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2D_Wrap.G_whiteTexture
#endif
                    }},
                    {"blackTexture_static", new MemberRegisterInfo { Name = "blackTexture", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2D_Wrap.G_blackTexture
#endif
                    }},
                    {"redTexture_static", new MemberRegisterInfo { Name = "redTexture", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2D_Wrap.G_redTexture
#endif
                    }},
                    {"grayTexture_static", new MemberRegisterInfo { Name = "grayTexture", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2D_Wrap.G_grayTexture
#endif
                    }},
                    {"linearGrayTexture_static", new MemberRegisterInfo { Name = "linearGrayTexture", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2D_Wrap.G_linearGrayTexture
#endif
                    }},
                    {"normalTexture_static", new MemberRegisterInfo { Name = "normalTexture", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2D_Wrap.G_normalTexture
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Cubemap_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Cubemap_Wrap.Constructor
#endif
                    }},
                    {"UpdateExternalTexture", new MemberRegisterInfo { Name = "UpdateExternalTexture", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cubemap_Wrap.M_UpdateExternalTexture
#endif
                    }},
                    {"SmoothEdges", new MemberRegisterInfo { Name = "SmoothEdges", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cubemap_Wrap.M_SmoothEdges
#endif
                    }},
                    {"GetPixels", new MemberRegisterInfo { Name = "GetPixels", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cubemap_Wrap.M_GetPixels
#endif
                    }},
                    {"SetPixels", new MemberRegisterInfo { Name = "SetPixels", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cubemap_Wrap.M_SetPixels
#endif
                    }},
                    {"ClearRequestedMipmapLevel", new MemberRegisterInfo { Name = "ClearRequestedMipmapLevel", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cubemap_Wrap.M_ClearRequestedMipmapLevel
#endif
                    }},
                    {"IsRequestedMipmapLevelLoaded", new MemberRegisterInfo { Name = "IsRequestedMipmapLevelLoaded", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cubemap_Wrap.M_IsRequestedMipmapLevelLoaded
#endif
                    }},
                    {"SetPixel", new MemberRegisterInfo { Name = "SetPixel", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cubemap_Wrap.M_SetPixel
#endif
                    }},
                    {"GetPixel", new MemberRegisterInfo { Name = "GetPixel", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cubemap_Wrap.M_GetPixel
#endif
                    }},
                    {"Apply", new MemberRegisterInfo { Name = "Apply", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cubemap_Wrap.M_Apply
#endif
                    }},
                    {"format", new MemberRegisterInfo { Name = "format", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cubemap_Wrap.G_format
#endif
                    }},
                    {"isReadable", new MemberRegisterInfo { Name = "isReadable", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cubemap_Wrap.G_isReadable
#endif
                    }},
                    {"streamingMipmaps", new MemberRegisterInfo { Name = "streamingMipmaps", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cubemap_Wrap.G_streamingMipmaps
#endif
                    }},
                    {"streamingMipmapsPriority", new MemberRegisterInfo { Name = "streamingMipmapsPriority", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cubemap_Wrap.G_streamingMipmapsPriority
#endif
                    }},
                    {"requestedMipmapLevel", new MemberRegisterInfo { Name = "requestedMipmapLevel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cubemap_Wrap.G_requestedMipmapLevel, PropertySetter = UnityEngine_Cubemap_Wrap.S_requestedMipmapLevel
#endif
                    }},
                    {"desiredMipmapLevel", new MemberRegisterInfo { Name = "desiredMipmapLevel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cubemap_Wrap.G_desiredMipmapLevel
#endif
                    }},
                    {"loadingMipmapLevel", new MemberRegisterInfo { Name = "loadingMipmapLevel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cubemap_Wrap.G_loadingMipmapLevel
#endif
                    }},
                    {"loadedMipmapLevel", new MemberRegisterInfo { Name = "loadedMipmapLevel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cubemap_Wrap.G_loadedMipmapLevel
#endif
                    }},
                    {"CreateExternalTexture_static", new MemberRegisterInfo { Name = "CreateExternalTexture", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cubemap_Wrap.F_CreateExternalTexture
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Texture3D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Texture3D_Wrap.Constructor
#endif
                    }},
                    {"UpdateExternalTexture", new MemberRegisterInfo { Name = "UpdateExternalTexture", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture3D_Wrap.M_UpdateExternalTexture
#endif
                    }},
                    {"GetPixels", new MemberRegisterInfo { Name = "GetPixels", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture3D_Wrap.M_GetPixels
#endif
                    }},
                    {"GetPixels32", new MemberRegisterInfo { Name = "GetPixels32", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture3D_Wrap.M_GetPixels32
#endif
                    }},
                    {"SetPixels", new MemberRegisterInfo { Name = "SetPixels", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture3D_Wrap.M_SetPixels
#endif
                    }},
                    {"SetPixels32", new MemberRegisterInfo { Name = "SetPixels32", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture3D_Wrap.M_SetPixels32
#endif
                    }},
                    {"Apply", new MemberRegisterInfo { Name = "Apply", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture3D_Wrap.M_Apply
#endif
                    }},
                    {"SetPixel", new MemberRegisterInfo { Name = "SetPixel", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture3D_Wrap.M_SetPixel
#endif
                    }},
                    {"GetPixel", new MemberRegisterInfo { Name = "GetPixel", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture3D_Wrap.M_GetPixel
#endif
                    }},
                    {"GetPixelBilinear", new MemberRegisterInfo { Name = "GetPixelBilinear", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture3D_Wrap.M_GetPixelBilinear
#endif
                    }},
                    {"depth", new MemberRegisterInfo { Name = "depth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture3D_Wrap.G_depth
#endif
                    }},
                    {"format", new MemberRegisterInfo { Name = "format", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture3D_Wrap.G_format
#endif
                    }},
                    {"isReadable", new MemberRegisterInfo { Name = "isReadable", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture3D_Wrap.G_isReadable
#endif
                    }},
                    {"CreateExternalTexture_static", new MemberRegisterInfo { Name = "CreateExternalTexture", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture3D_Wrap.F_CreateExternalTexture
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Texture2DArray_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Texture2DArray_Wrap.Constructor
#endif
                    }},
                    {"GetPixels", new MemberRegisterInfo { Name = "GetPixels", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2DArray_Wrap.M_GetPixels
#endif
                    }},
                    {"GetPixels32", new MemberRegisterInfo { Name = "GetPixels32", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2DArray_Wrap.M_GetPixels32
#endif
                    }},
                    {"SetPixels", new MemberRegisterInfo { Name = "SetPixels", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2DArray_Wrap.M_SetPixels
#endif
                    }},
                    {"SetPixels32", new MemberRegisterInfo { Name = "SetPixels32", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2DArray_Wrap.M_SetPixels32
#endif
                    }},
                    {"Apply", new MemberRegisterInfo { Name = "Apply", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Texture2DArray_Wrap.M_Apply
#endif
                    }},
                    {"depth", new MemberRegisterInfo { Name = "depth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2DArray_Wrap.G_depth
#endif
                    }},
                    {"format", new MemberRegisterInfo { Name = "format", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2DArray_Wrap.G_format
#endif
                    }},
                    {"isReadable", new MemberRegisterInfo { Name = "isReadable", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2DArray_Wrap.G_isReadable
#endif
                    }},
                    {"allSlices_static", new MemberRegisterInfo { Name = "allSlices", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Texture2DArray_Wrap.G_allSlices
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CubemapArray_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_CubemapArray_Wrap.Constructor
#endif
                    }},
                    {"GetPixels", new MemberRegisterInfo { Name = "GetPixels", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CubemapArray_Wrap.M_GetPixels
#endif
                    }},
                    {"GetPixels32", new MemberRegisterInfo { Name = "GetPixels32", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CubemapArray_Wrap.M_GetPixels32
#endif
                    }},
                    {"SetPixels", new MemberRegisterInfo { Name = "SetPixels", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CubemapArray_Wrap.M_SetPixels
#endif
                    }},
                    {"SetPixels32", new MemberRegisterInfo { Name = "SetPixels32", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CubemapArray_Wrap.M_SetPixels32
#endif
                    }},
                    {"Apply", new MemberRegisterInfo { Name = "Apply", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CubemapArray_Wrap.M_Apply
#endif
                    }},
                    {"cubemapCount", new MemberRegisterInfo { Name = "cubemapCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CubemapArray_Wrap.G_cubemapCount
#endif
                    }},
                    {"format", new MemberRegisterInfo { Name = "format", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CubemapArray_Wrap.G_format
#endif
                    }},
                    {"isReadable", new MemberRegisterInfo { Name = "isReadable", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CubemapArray_Wrap.G_isReadable
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SparseTexture_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SparseTexture_Wrap.Constructor
#endif
                    }},
                    {"UpdateTile", new MemberRegisterInfo { Name = "UpdateTile", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SparseTexture_Wrap.M_UpdateTile
#endif
                    }},
                    {"UpdateTileRaw", new MemberRegisterInfo { Name = "UpdateTileRaw", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SparseTexture_Wrap.M_UpdateTileRaw
#endif
                    }},
                    {"UnloadTile", new MemberRegisterInfo { Name = "UnloadTile", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SparseTexture_Wrap.M_UnloadTile
#endif
                    }},
                    {"tileWidth", new MemberRegisterInfo { Name = "tileWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SparseTexture_Wrap.G_tileWidth
#endif
                    }},
                    {"tileHeight", new MemberRegisterInfo { Name = "tileHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SparseTexture_Wrap.G_tileHeight
#endif
                    }},
                    {"isCreated", new MemberRegisterInfo { Name = "isCreated", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SparseTexture_Wrap.G_isCreated
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RenderTexture_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_RenderTexture_Wrap.Constructor
#endif
                    }},
                    {"GetNativeDepthBufferPtr", new MemberRegisterInfo { Name = "GetNativeDepthBufferPtr", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RenderTexture_Wrap.M_GetNativeDepthBufferPtr
#endif
                    }},
                    {"DiscardContents", new MemberRegisterInfo { Name = "DiscardContents", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RenderTexture_Wrap.M_DiscardContents
#endif
                    }},
                    {"MarkRestoreExpected", new MemberRegisterInfo { Name = "MarkRestoreExpected", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RenderTexture_Wrap.M_MarkRestoreExpected
#endif
                    }},
                    {"ResolveAntiAliasedSurface", new MemberRegisterInfo { Name = "ResolveAntiAliasedSurface", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RenderTexture_Wrap.M_ResolveAntiAliasedSurface
#endif
                    }},
                    {"SetGlobalShaderProperty", new MemberRegisterInfo { Name = "SetGlobalShaderProperty", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RenderTexture_Wrap.M_SetGlobalShaderProperty
#endif
                    }},
                    {"Create", new MemberRegisterInfo { Name = "Create", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RenderTexture_Wrap.M_Create
#endif
                    }},
                    {"Release", new MemberRegisterInfo { Name = "Release", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RenderTexture_Wrap.M_Release
#endif
                    }},
                    {"IsCreated", new MemberRegisterInfo { Name = "IsCreated", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RenderTexture_Wrap.M_IsCreated
#endif
                    }},
                    {"GenerateMips", new MemberRegisterInfo { Name = "GenerateMips", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RenderTexture_Wrap.M_GenerateMips
#endif
                    }},
                    {"ConvertToEquirect", new MemberRegisterInfo { Name = "ConvertToEquirect", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RenderTexture_Wrap.M_ConvertToEquirect
#endif
                    }},
                    {"width", new MemberRegisterInfo { Name = "width", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_width, PropertySetter = UnityEngine_RenderTexture_Wrap.S_width
#endif
                    }},
                    {"height", new MemberRegisterInfo { Name = "height", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_height, PropertySetter = UnityEngine_RenderTexture_Wrap.S_height
#endif
                    }},
                    {"dimension", new MemberRegisterInfo { Name = "dimension", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_dimension, PropertySetter = UnityEngine_RenderTexture_Wrap.S_dimension
#endif
                    }},
                    {"graphicsFormat", new MemberRegisterInfo { Name = "graphicsFormat", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_graphicsFormat, PropertySetter = UnityEngine_RenderTexture_Wrap.S_graphicsFormat
#endif
                    }},
                    {"useMipMap", new MemberRegisterInfo { Name = "useMipMap", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_useMipMap, PropertySetter = UnityEngine_RenderTexture_Wrap.S_useMipMap
#endif
                    }},
                    {"sRGB", new MemberRegisterInfo { Name = "sRGB", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_sRGB
#endif
                    }},
                    {"vrUsage", new MemberRegisterInfo { Name = "vrUsage", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_vrUsage, PropertySetter = UnityEngine_RenderTexture_Wrap.S_vrUsage
#endif
                    }},
                    {"memorylessMode", new MemberRegisterInfo { Name = "memorylessMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_memorylessMode, PropertySetter = UnityEngine_RenderTexture_Wrap.S_memorylessMode
#endif
                    }},
                    {"format", new MemberRegisterInfo { Name = "format", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_format, PropertySetter = UnityEngine_RenderTexture_Wrap.S_format
#endif
                    }},
                    {"stencilFormat", new MemberRegisterInfo { Name = "stencilFormat", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_stencilFormat, PropertySetter = UnityEngine_RenderTexture_Wrap.S_stencilFormat
#endif
                    }},
                    {"autoGenerateMips", new MemberRegisterInfo { Name = "autoGenerateMips", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_autoGenerateMips, PropertySetter = UnityEngine_RenderTexture_Wrap.S_autoGenerateMips
#endif
                    }},
                    {"volumeDepth", new MemberRegisterInfo { Name = "volumeDepth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_volumeDepth, PropertySetter = UnityEngine_RenderTexture_Wrap.S_volumeDepth
#endif
                    }},
                    {"antiAliasing", new MemberRegisterInfo { Name = "antiAliasing", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_antiAliasing, PropertySetter = UnityEngine_RenderTexture_Wrap.S_antiAliasing
#endif
                    }},
                    {"bindTextureMS", new MemberRegisterInfo { Name = "bindTextureMS", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_bindTextureMS, PropertySetter = UnityEngine_RenderTexture_Wrap.S_bindTextureMS
#endif
                    }},
                    {"enableRandomWrite", new MemberRegisterInfo { Name = "enableRandomWrite", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_enableRandomWrite, PropertySetter = UnityEngine_RenderTexture_Wrap.S_enableRandomWrite
#endif
                    }},
                    {"useDynamicScale", new MemberRegisterInfo { Name = "useDynamicScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_useDynamicScale, PropertySetter = UnityEngine_RenderTexture_Wrap.S_useDynamicScale
#endif
                    }},
                    {"isPowerOfTwo", new MemberRegisterInfo { Name = "isPowerOfTwo", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_isPowerOfTwo, PropertySetter = UnityEngine_RenderTexture_Wrap.S_isPowerOfTwo
#endif
                    }},
                    {"colorBuffer", new MemberRegisterInfo { Name = "colorBuffer", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_colorBuffer
#endif
                    }},
                    {"depthBuffer", new MemberRegisterInfo { Name = "depthBuffer", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_depthBuffer
#endif
                    }},
                    {"depth", new MemberRegisterInfo { Name = "depth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_depth, PropertySetter = UnityEngine_RenderTexture_Wrap.S_depth
#endif
                    }},
                    {"descriptor", new MemberRegisterInfo { Name = "descriptor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_descriptor, PropertySetter = UnityEngine_RenderTexture_Wrap.S_descriptor
#endif
                    }},
                    {"SupportsStencil_static", new MemberRegisterInfo { Name = "SupportsStencil", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RenderTexture_Wrap.F_SupportsStencil
#endif
                    }},
                    {"ReleaseTemporary_static", new MemberRegisterInfo { Name = "ReleaseTemporary", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RenderTexture_Wrap.F_ReleaseTemporary
#endif
                    }},
                    {"GetTemporary_static", new MemberRegisterInfo { Name = "GetTemporary", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RenderTexture_Wrap.F_GetTemporary
#endif
                    }},
                    {"active_static", new MemberRegisterInfo { Name = "active", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTexture_Wrap.G_active, PropertySetter = UnityEngine_RenderTexture_Wrap.S_active
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CustomRenderTextureUpdateZone_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_CustomRenderTextureUpdateZone_Wrap.Constructor
#endif
                    }},
                    {"updateZoneCenter", new MemberRegisterInfo { Name = "updateZoneCenter", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomRenderTextureUpdateZone_Wrap.G_updateZoneCenter, PropertySetter = UnityEngine_CustomRenderTextureUpdateZone_Wrap.S_updateZoneCenter
#endif
                    }},
                    {"updateZoneSize", new MemberRegisterInfo { Name = "updateZoneSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomRenderTextureUpdateZone_Wrap.G_updateZoneSize, PropertySetter = UnityEngine_CustomRenderTextureUpdateZone_Wrap.S_updateZoneSize
#endif
                    }},
                    {"rotation", new MemberRegisterInfo { Name = "rotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomRenderTextureUpdateZone_Wrap.G_rotation, PropertySetter = UnityEngine_CustomRenderTextureUpdateZone_Wrap.S_rotation
#endif
                    }},
                    {"passIndex", new MemberRegisterInfo { Name = "passIndex", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomRenderTextureUpdateZone_Wrap.G_passIndex, PropertySetter = UnityEngine_CustomRenderTextureUpdateZone_Wrap.S_passIndex
#endif
                    }},
                    {"needSwap", new MemberRegisterInfo { Name = "needSwap", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomRenderTextureUpdateZone_Wrap.G_needSwap, PropertySetter = UnityEngine_CustomRenderTextureUpdateZone_Wrap.S_needSwap
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CustomRenderTexture_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_CustomRenderTexture_Wrap.Constructor
#endif
                    }},
                    {"Update", new MemberRegisterInfo { Name = "Update", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CustomRenderTexture_Wrap.M_Update
#endif
                    }},
                    {"Initialize", new MemberRegisterInfo { Name = "Initialize", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CustomRenderTexture_Wrap.M_Initialize
#endif
                    }},
                    {"ClearUpdateZones", new MemberRegisterInfo { Name = "ClearUpdateZones", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CustomRenderTexture_Wrap.M_ClearUpdateZones
#endif
                    }},
                    {"GetUpdateZones", new MemberRegisterInfo { Name = "GetUpdateZones", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CustomRenderTexture_Wrap.M_GetUpdateZones
#endif
                    }},
                    {"GetDoubleBufferRenderTexture", new MemberRegisterInfo { Name = "GetDoubleBufferRenderTexture", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CustomRenderTexture_Wrap.M_GetDoubleBufferRenderTexture
#endif
                    }},
                    {"EnsureDoubleBufferConsistency", new MemberRegisterInfo { Name = "EnsureDoubleBufferConsistency", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CustomRenderTexture_Wrap.M_EnsureDoubleBufferConsistency
#endif
                    }},
                    {"SetUpdateZones", new MemberRegisterInfo { Name = "SetUpdateZones", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CustomRenderTexture_Wrap.M_SetUpdateZones
#endif
                    }},
                    {"material", new MemberRegisterInfo { Name = "material", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomRenderTexture_Wrap.G_material, PropertySetter = UnityEngine_CustomRenderTexture_Wrap.S_material
#endif
                    }},
                    {"initializationMaterial", new MemberRegisterInfo { Name = "initializationMaterial", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomRenderTexture_Wrap.G_initializationMaterial, PropertySetter = UnityEngine_CustomRenderTexture_Wrap.S_initializationMaterial
#endif
                    }},
                    {"initializationTexture", new MemberRegisterInfo { Name = "initializationTexture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomRenderTexture_Wrap.G_initializationTexture, PropertySetter = UnityEngine_CustomRenderTexture_Wrap.S_initializationTexture
#endif
                    }},
                    {"initializationSource", new MemberRegisterInfo { Name = "initializationSource", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomRenderTexture_Wrap.G_initializationSource, PropertySetter = UnityEngine_CustomRenderTexture_Wrap.S_initializationSource
#endif
                    }},
                    {"initializationColor", new MemberRegisterInfo { Name = "initializationColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomRenderTexture_Wrap.G_initializationColor, PropertySetter = UnityEngine_CustomRenderTexture_Wrap.S_initializationColor
#endif
                    }},
                    {"updateMode", new MemberRegisterInfo { Name = "updateMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomRenderTexture_Wrap.G_updateMode, PropertySetter = UnityEngine_CustomRenderTexture_Wrap.S_updateMode
#endif
                    }},
                    {"initializationMode", new MemberRegisterInfo { Name = "initializationMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomRenderTexture_Wrap.G_initializationMode, PropertySetter = UnityEngine_CustomRenderTexture_Wrap.S_initializationMode
#endif
                    }},
                    {"updateZoneSpace", new MemberRegisterInfo { Name = "updateZoneSpace", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomRenderTexture_Wrap.G_updateZoneSpace, PropertySetter = UnityEngine_CustomRenderTexture_Wrap.S_updateZoneSpace
#endif
                    }},
                    {"shaderPass", new MemberRegisterInfo { Name = "shaderPass", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomRenderTexture_Wrap.G_shaderPass, PropertySetter = UnityEngine_CustomRenderTexture_Wrap.S_shaderPass
#endif
                    }},
                    {"cubemapFaceMask", new MemberRegisterInfo { Name = "cubemapFaceMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomRenderTexture_Wrap.G_cubemapFaceMask, PropertySetter = UnityEngine_CustomRenderTexture_Wrap.S_cubemapFaceMask
#endif
                    }},
                    {"doubleBuffered", new MemberRegisterInfo { Name = "doubleBuffered", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomRenderTexture_Wrap.G_doubleBuffered, PropertySetter = UnityEngine_CustomRenderTexture_Wrap.S_doubleBuffered
#endif
                    }},
                    {"wrapUpdateZones", new MemberRegisterInfo { Name = "wrapUpdateZones", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomRenderTexture_Wrap.G_wrapUpdateZones, PropertySetter = UnityEngine_CustomRenderTexture_Wrap.S_wrapUpdateZones
#endif
                    }},
                    {"updatePeriod", new MemberRegisterInfo { Name = "updatePeriod", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomRenderTexture_Wrap.G_updatePeriod, PropertySetter = UnityEngine_CustomRenderTexture_Wrap.S_updatePeriod
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RenderTextureDescriptor_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_RenderTextureDescriptor_Wrap.Constructor
#endif
                    }},
                    {"width", new MemberRegisterInfo { Name = "width", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTextureDescriptor_Wrap.G_width, PropertySetter = UnityEngine_RenderTextureDescriptor_Wrap.S_width
#endif
                    }},
                    {"height", new MemberRegisterInfo { Name = "height", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTextureDescriptor_Wrap.G_height, PropertySetter = UnityEngine_RenderTextureDescriptor_Wrap.S_height
#endif
                    }},
                    {"msaaSamples", new MemberRegisterInfo { Name = "msaaSamples", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTextureDescriptor_Wrap.G_msaaSamples, PropertySetter = UnityEngine_RenderTextureDescriptor_Wrap.S_msaaSamples
#endif
                    }},
                    {"volumeDepth", new MemberRegisterInfo { Name = "volumeDepth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTextureDescriptor_Wrap.G_volumeDepth, PropertySetter = UnityEngine_RenderTextureDescriptor_Wrap.S_volumeDepth
#endif
                    }},
                    {"mipCount", new MemberRegisterInfo { Name = "mipCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTextureDescriptor_Wrap.G_mipCount, PropertySetter = UnityEngine_RenderTextureDescriptor_Wrap.S_mipCount
#endif
                    }},
                    {"graphicsFormat", new MemberRegisterInfo { Name = "graphicsFormat", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTextureDescriptor_Wrap.G_graphicsFormat, PropertySetter = UnityEngine_RenderTextureDescriptor_Wrap.S_graphicsFormat
#endif
                    }},
                    {"stencilFormat", new MemberRegisterInfo { Name = "stencilFormat", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTextureDescriptor_Wrap.G_stencilFormat, PropertySetter = UnityEngine_RenderTextureDescriptor_Wrap.S_stencilFormat
#endif
                    }},
                    {"colorFormat", new MemberRegisterInfo { Name = "colorFormat", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTextureDescriptor_Wrap.G_colorFormat, PropertySetter = UnityEngine_RenderTextureDescriptor_Wrap.S_colorFormat
#endif
                    }},
                    {"sRGB", new MemberRegisterInfo { Name = "sRGB", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTextureDescriptor_Wrap.G_sRGB, PropertySetter = UnityEngine_RenderTextureDescriptor_Wrap.S_sRGB
#endif
                    }},
                    {"depthBufferBits", new MemberRegisterInfo { Name = "depthBufferBits", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTextureDescriptor_Wrap.G_depthBufferBits, PropertySetter = UnityEngine_RenderTextureDescriptor_Wrap.S_depthBufferBits
#endif
                    }},
                    {"dimension", new MemberRegisterInfo { Name = "dimension", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTextureDescriptor_Wrap.G_dimension, PropertySetter = UnityEngine_RenderTextureDescriptor_Wrap.S_dimension
#endif
                    }},
                    {"shadowSamplingMode", new MemberRegisterInfo { Name = "shadowSamplingMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTextureDescriptor_Wrap.G_shadowSamplingMode, PropertySetter = UnityEngine_RenderTextureDescriptor_Wrap.S_shadowSamplingMode
#endif
                    }},
                    {"vrUsage", new MemberRegisterInfo { Name = "vrUsage", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTextureDescriptor_Wrap.G_vrUsage, PropertySetter = UnityEngine_RenderTextureDescriptor_Wrap.S_vrUsage
#endif
                    }},
                    {"flags", new MemberRegisterInfo { Name = "flags", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTextureDescriptor_Wrap.G_flags
#endif
                    }},
                    {"memoryless", new MemberRegisterInfo { Name = "memoryless", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTextureDescriptor_Wrap.G_memoryless, PropertySetter = UnityEngine_RenderTextureDescriptor_Wrap.S_memoryless
#endif
                    }},
                    {"useMipMap", new MemberRegisterInfo { Name = "useMipMap", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTextureDescriptor_Wrap.G_useMipMap, PropertySetter = UnityEngine_RenderTextureDescriptor_Wrap.S_useMipMap
#endif
                    }},
                    {"autoGenerateMips", new MemberRegisterInfo { Name = "autoGenerateMips", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTextureDescriptor_Wrap.G_autoGenerateMips, PropertySetter = UnityEngine_RenderTextureDescriptor_Wrap.S_autoGenerateMips
#endif
                    }},
                    {"enableRandomWrite", new MemberRegisterInfo { Name = "enableRandomWrite", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTextureDescriptor_Wrap.G_enableRandomWrite, PropertySetter = UnityEngine_RenderTextureDescriptor_Wrap.S_enableRandomWrite
#endif
                    }},
                    {"bindMS", new MemberRegisterInfo { Name = "bindMS", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTextureDescriptor_Wrap.G_bindMS, PropertySetter = UnityEngine_RenderTextureDescriptor_Wrap.S_bindMS
#endif
                    }},
                    {"useDynamicScale", new MemberRegisterInfo { Name = "useDynamicScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RenderTextureDescriptor_Wrap.G_useDynamicScale, PropertySetter = UnityEngine_RenderTextureDescriptor_Wrap.S_useDynamicScale
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Hash128_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Hash128_Wrap.Constructor
#endif
                    }},
                    {"CompareTo", new MemberRegisterInfo { Name = "CompareTo", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Hash128_Wrap.M_CompareTo
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Hash128_Wrap.M_ToString
#endif
                    }},
                    {"Append", new MemberRegisterInfo { Name = "Append", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Hash128_Wrap.M_Append
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Hash128_Wrap.M_Equals
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Hash128_Wrap.M_GetHashCode
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Hash128_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Hash128_Wrap.O_op_Inequality
#endif
                    }},
                    {"op_LessThan_static", new MemberRegisterInfo { Name = "op_LessThan", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Hash128_Wrap.O_op_LessThan
#endif
                    }},
                    {"op_GreaterThan_static", new MemberRegisterInfo { Name = "op_GreaterThan", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Hash128_Wrap.O_op_GreaterThan
#endif
                    }},
                    {"isValid", new MemberRegisterInfo { Name = "isValid", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Hash128_Wrap.G_isValid
#endif
                    }},
                    {"Parse_static", new MemberRegisterInfo { Name = "Parse", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Hash128_Wrap.F_Parse
#endif
                    }},
                    {"Compute_static", new MemberRegisterInfo { Name = "Compute", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Hash128_Wrap.F_Compute
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_HashUtilities_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"AppendHash_static", new MemberRegisterInfo { Name = "AppendHash", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_HashUtilities_Wrap.F_AppendHash
#endif
                    }},
                    {"QuantisedMatrixHash_static", new MemberRegisterInfo { Name = "QuantisedMatrixHash", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_HashUtilities_Wrap.F_QuantisedMatrixHash
#endif
                    }},
                    {"QuantisedVectorHash_static", new MemberRegisterInfo { Name = "QuantisedVectorHash", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_HashUtilities_Wrap.F_QuantisedVectorHash
#endif
                    }},
                    {"ComputeHash128_static", new MemberRegisterInfo { Name = "ComputeHash128", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_HashUtilities_Wrap.F_ComputeHash128
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_HashUnsafeUtilities_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Cursor_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Cursor_Wrap.Constructor
#endif
                    }},
                    {"SetCursor_static", new MemberRegisterInfo { Name = "SetCursor", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Cursor_Wrap.F_SetCursor
#endif
                    }},
                    {"visible_static", new MemberRegisterInfo { Name = "visible", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cursor_Wrap.G_visible, PropertySetter = UnityEngine_Cursor_Wrap.S_visible
#endif
                    }},
                    {"lockState_static", new MemberRegisterInfo { Name = "lockState", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Cursor_Wrap.G_lockState, PropertySetter = UnityEngine_Cursor_Wrap.S_lockState
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ILogger_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"IsLogTypeAllowed", new MemberRegisterInfo { Name = "IsLogTypeAllowed", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ILogger_Wrap.M_IsLogTypeAllowed
#endif
                    }},
                    {"Log", new MemberRegisterInfo { Name = "Log", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ILogger_Wrap.M_Log
#endif
                    }},
                    {"LogWarning", new MemberRegisterInfo { Name = "LogWarning", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ILogger_Wrap.M_LogWarning
#endif
                    }},
                    {"LogError", new MemberRegisterInfo { Name = "LogError", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ILogger_Wrap.M_LogError
#endif
                    }},
                    {"LogFormat", new MemberRegisterInfo { Name = "LogFormat", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ILogger_Wrap.M_LogFormat
#endif
                    }},
                    {"LogException", new MemberRegisterInfo { Name = "LogException", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ILogger_Wrap.M_LogException
#endif
                    }},
                    {"logHandler", new MemberRegisterInfo { Name = "logHandler", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ILogger_Wrap.G_logHandler, PropertySetter = UnityEngine_ILogger_Wrap.S_logHandler
#endif
                    }},
                    {"logEnabled", new MemberRegisterInfo { Name = "logEnabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ILogger_Wrap.G_logEnabled, PropertySetter = UnityEngine_ILogger_Wrap.S_logEnabled
#endif
                    }},
                    {"filterLogType", new MemberRegisterInfo { Name = "filterLogType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ILogger_Wrap.G_filterLogType, PropertySetter = UnityEngine_ILogger_Wrap.S_filterLogType
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ILogHandler_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"LogFormat", new MemberRegisterInfo { Name = "LogFormat", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ILogHandler_Wrap.M_LogFormat
#endif
                    }},
                    {"LogException", new MemberRegisterInfo { Name = "LogException", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ILogHandler_Wrap.M_LogException
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Logger_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Logger_Wrap.Constructor
#endif
                    }},
                    {"IsLogTypeAllowed", new MemberRegisterInfo { Name = "IsLogTypeAllowed", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Logger_Wrap.M_IsLogTypeAllowed
#endif
                    }},
                    {"Log", new MemberRegisterInfo { Name = "Log", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Logger_Wrap.M_Log
#endif
                    }},
                    {"LogWarning", new MemberRegisterInfo { Name = "LogWarning", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Logger_Wrap.M_LogWarning
#endif
                    }},
                    {"LogError", new MemberRegisterInfo { Name = "LogError", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Logger_Wrap.M_LogError
#endif
                    }},
                    {"LogException", new MemberRegisterInfo { Name = "LogException", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Logger_Wrap.M_LogException
#endif
                    }},
                    {"LogFormat", new MemberRegisterInfo { Name = "LogFormat", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Logger_Wrap.M_LogFormat
#endif
                    }},
                    {"logHandler", new MemberRegisterInfo { Name = "logHandler", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Logger_Wrap.G_logHandler, PropertySetter = UnityEngine_Logger_Wrap.S_logHandler
#endif
                    }},
                    {"logEnabled", new MemberRegisterInfo { Name = "logEnabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Logger_Wrap.G_logEnabled, PropertySetter = UnityEngine_Logger_Wrap.S_logEnabled
#endif
                    }},
                    {"filterLogType", new MemberRegisterInfo { Name = "filterLogType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Logger_Wrap.G_filterLogType, PropertySetter = UnityEngine_Logger_Wrap.S_filterLogType
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Color_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Color_Wrap.Constructor
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Color_Wrap.M_ToString
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Color_Wrap.M_GetHashCode
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Color_Wrap.M_Equals
#endif
                    }},
                    {"op_Addition_static", new MemberRegisterInfo { Name = "op_Addition", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Color_Wrap.O_op_Addition
#endif
                    }},
                    {"op_Subtraction_static", new MemberRegisterInfo { Name = "op_Subtraction", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Color_Wrap.O_op_Subtraction
#endif
                    }},
                    {"op_Multiply_static", new MemberRegisterInfo { Name = "op_Multiply", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Color_Wrap.O_op_Multiply
#endif
                    }},
                    {"op_Division_static", new MemberRegisterInfo { Name = "op_Division", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Color_Wrap.O_op_Division
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Color_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Color_Wrap.O_op_Inequality
#endif
                    }},
                    {"grayscale", new MemberRegisterInfo { Name = "grayscale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color_Wrap.G_grayscale
#endif
                    }},
                    {"linear", new MemberRegisterInfo { Name = "linear", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color_Wrap.G_linear
#endif
                    }},
                    {"gamma", new MemberRegisterInfo { Name = "gamma", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color_Wrap.G_gamma
#endif
                    }},
                    {"maxColorComponent", new MemberRegisterInfo { Name = "maxColorComponent", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color_Wrap.G_maxColorComponent
#endif
                    }},
                    {"get_Item", new MemberRegisterInfo { Name = "get_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Color_Wrap.GetItem
#endif
                    }},
                    {"set_Item", new MemberRegisterInfo { Name = "set_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Color_Wrap.SetItem
#endif
                    }},
                    {"r", new MemberRegisterInfo { Name = "r", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color_Wrap.G_r, PropertySetter = UnityEngine_Color_Wrap.S_r
#endif
                    }},
                    {"g", new MemberRegisterInfo { Name = "g", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color_Wrap.G_g, PropertySetter = UnityEngine_Color_Wrap.S_g
#endif
                    }},
                    {"b", new MemberRegisterInfo { Name = "b", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color_Wrap.G_b, PropertySetter = UnityEngine_Color_Wrap.S_b
#endif
                    }},
                    {"a", new MemberRegisterInfo { Name = "a", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color_Wrap.G_a, PropertySetter = UnityEngine_Color_Wrap.S_a
#endif
                    }},
                    {"Lerp_static", new MemberRegisterInfo { Name = "Lerp", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Color_Wrap.F_Lerp
#endif
                    }},
                    {"LerpUnclamped_static", new MemberRegisterInfo { Name = "LerpUnclamped", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Color_Wrap.F_LerpUnclamped
#endif
                    }},
                    {"RGBToHSV_static", new MemberRegisterInfo { Name = "RGBToHSV", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Color_Wrap.F_RGBToHSV
#endif
                    }},
                    {"HSVToRGB_static", new MemberRegisterInfo { Name = "HSVToRGB", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Color_Wrap.F_HSVToRGB
#endif
                    }},
                    {"red_static", new MemberRegisterInfo { Name = "red", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color_Wrap.G_red
#endif
                    }},
                    {"green_static", new MemberRegisterInfo { Name = "green", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color_Wrap.G_green
#endif
                    }},
                    {"blue_static", new MemberRegisterInfo { Name = "blue", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color_Wrap.G_blue
#endif
                    }},
                    {"white_static", new MemberRegisterInfo { Name = "white", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color_Wrap.G_white
#endif
                    }},
                    {"black_static", new MemberRegisterInfo { Name = "black", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color_Wrap.G_black
#endif
                    }},
                    {"yellow_static", new MemberRegisterInfo { Name = "yellow", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color_Wrap.G_yellow
#endif
                    }},
                    {"cyan_static", new MemberRegisterInfo { Name = "cyan", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color_Wrap.G_cyan
#endif
                    }},
                    {"magenta_static", new MemberRegisterInfo { Name = "magenta", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color_Wrap.G_magenta
#endif
                    }},
                    {"gray_static", new MemberRegisterInfo { Name = "gray", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color_Wrap.G_gray
#endif
                    }},
                    {"grey_static", new MemberRegisterInfo { Name = "grey", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color_Wrap.G_grey
#endif
                    }},
                    {"clear_static", new MemberRegisterInfo { Name = "clear", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color_Wrap.G_clear
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Color32_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Color32_Wrap.Constructor
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Color32_Wrap.M_ToString
#endif
                    }},
                    {"get_Item", new MemberRegisterInfo { Name = "get_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Color32_Wrap.GetItem
#endif
                    }},
                    {"set_Item", new MemberRegisterInfo { Name = "set_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Color32_Wrap.SetItem
#endif
                    }},
                    {"r", new MemberRegisterInfo { Name = "r", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color32_Wrap.G_r, PropertySetter = UnityEngine_Color32_Wrap.S_r
#endif
                    }},
                    {"g", new MemberRegisterInfo { Name = "g", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color32_Wrap.G_g, PropertySetter = UnityEngine_Color32_Wrap.S_g
#endif
                    }},
                    {"b", new MemberRegisterInfo { Name = "b", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color32_Wrap.G_b, PropertySetter = UnityEngine_Color32_Wrap.S_b
#endif
                    }},
                    {"a", new MemberRegisterInfo { Name = "a", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Color32_Wrap.G_a, PropertySetter = UnityEngine_Color32_Wrap.S_a
#endif
                    }},
                    {"Lerp_static", new MemberRegisterInfo { Name = "Lerp", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Color32_Wrap.F_Lerp
#endif
                    }},
                    {"LerpUnclamped_static", new MemberRegisterInfo { Name = "LerpUnclamped", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Color32_Wrap.F_LerpUnclamped
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ColorUtility_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ColorUtility_Wrap.Constructor
#endif
                    }},
                    {"TryParseHtmlString_static", new MemberRegisterInfo { Name = "TryParseHtmlString", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ColorUtility_Wrap.F_TryParseHtmlString
#endif
                    }},
                    {"ToHtmlStringRGB_static", new MemberRegisterInfo { Name = "ToHtmlStringRGB", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ColorUtility_Wrap.F_ToHtmlStringRGB
#endif
                    }},
                    {"ToHtmlStringRGBA_static", new MemberRegisterInfo { Name = "ToHtmlStringRGBA", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ColorUtility_Wrap.F_ToHtmlStringRGBA
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_GradientColorKey_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_GradientColorKey_Wrap.Constructor
#endif
                    }},
                    {"color", new MemberRegisterInfo { Name = "color", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GradientColorKey_Wrap.G_color, PropertySetter = UnityEngine_GradientColorKey_Wrap.S_color
#endif
                    }},
                    {"time", new MemberRegisterInfo { Name = "time", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GradientColorKey_Wrap.G_time, PropertySetter = UnityEngine_GradientColorKey_Wrap.S_time
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_GradientAlphaKey_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_GradientAlphaKey_Wrap.Constructor
#endif
                    }},
                    {"alpha", new MemberRegisterInfo { Name = "alpha", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GradientAlphaKey_Wrap.G_alpha, PropertySetter = UnityEngine_GradientAlphaKey_Wrap.S_alpha
#endif
                    }},
                    {"time", new MemberRegisterInfo { Name = "time", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GradientAlphaKey_Wrap.G_time, PropertySetter = UnityEngine_GradientAlphaKey_Wrap.S_time
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Gradient_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Gradient_Wrap.Constructor
#endif
                    }},
                    {"Evaluate", new MemberRegisterInfo { Name = "Evaluate", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Gradient_Wrap.M_Evaluate
#endif
                    }},
                    {"SetKeys", new MemberRegisterInfo { Name = "SetKeys", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Gradient_Wrap.M_SetKeys
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Gradient_Wrap.M_Equals
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Gradient_Wrap.M_GetHashCode
#endif
                    }},
                    {"colorKeys", new MemberRegisterInfo { Name = "colorKeys", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Gradient_Wrap.G_colorKeys, PropertySetter = UnityEngine_Gradient_Wrap.S_colorKeys
#endif
                    }},
                    {"alphaKeys", new MemberRegisterInfo { Name = "alphaKeys", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Gradient_Wrap.G_alphaKeys, PropertySetter = UnityEngine_Gradient_Wrap.S_alphaKeys
#endif
                    }},
                    {"mode", new MemberRegisterInfo { Name = "mode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Gradient_Wrap.G_mode, PropertySetter = UnityEngine_Gradient_Wrap.S_mode
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_FrustumPlanes_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_FrustumPlanes_Wrap.Constructor
#endif
                    }},
                    {"left", new MemberRegisterInfo { Name = "left", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_FrustumPlanes_Wrap.G_left, PropertySetter = UnityEngine_FrustumPlanes_Wrap.S_left
#endif
                    }},
                    {"right", new MemberRegisterInfo { Name = "right", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_FrustumPlanes_Wrap.G_right, PropertySetter = UnityEngine_FrustumPlanes_Wrap.S_right
#endif
                    }},
                    {"bottom", new MemberRegisterInfo { Name = "bottom", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_FrustumPlanes_Wrap.G_bottom, PropertySetter = UnityEngine_FrustumPlanes_Wrap.S_bottom
#endif
                    }},
                    {"top", new MemberRegisterInfo { Name = "top", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_FrustumPlanes_Wrap.G_top, PropertySetter = UnityEngine_FrustumPlanes_Wrap.S_top
#endif
                    }},
                    {"zNear", new MemberRegisterInfo { Name = "zNear", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_FrustumPlanes_Wrap.G_zNear, PropertySetter = UnityEngine_FrustumPlanes_Wrap.S_zNear
#endif
                    }},
                    {"zFar", new MemberRegisterInfo { Name = "zFar", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_FrustumPlanes_Wrap.G_zFar, PropertySetter = UnityEngine_FrustumPlanes_Wrap.S_zFar
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Matrix4x4_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Matrix4x4_Wrap.Constructor
#endif
                    }},
                    {"ValidTRS", new MemberRegisterInfo { Name = "ValidTRS", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.M_ValidTRS
#endif
                    }},
                    {"SetTRS", new MemberRegisterInfo { Name = "SetTRS", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.M_SetTRS
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.M_GetHashCode
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.M_Equals
#endif
                    }},
                    {"op_Multiply_static", new MemberRegisterInfo { Name = "op_Multiply", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.O_op_Multiply
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.O_op_Inequality
#endif
                    }},
                    {"GetColumn", new MemberRegisterInfo { Name = "GetColumn", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.M_GetColumn
#endif
                    }},
                    {"GetRow", new MemberRegisterInfo { Name = "GetRow", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.M_GetRow
#endif
                    }},
                    {"SetColumn", new MemberRegisterInfo { Name = "SetColumn", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.M_SetColumn
#endif
                    }},
                    {"SetRow", new MemberRegisterInfo { Name = "SetRow", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.M_SetRow
#endif
                    }},
                    {"MultiplyPoint", new MemberRegisterInfo { Name = "MultiplyPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.M_MultiplyPoint
#endif
                    }},
                    {"MultiplyPoint3x4", new MemberRegisterInfo { Name = "MultiplyPoint3x4", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.M_MultiplyPoint3x4
#endif
                    }},
                    {"MultiplyVector", new MemberRegisterInfo { Name = "MultiplyVector", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.M_MultiplyVector
#endif
                    }},
                    {"TransformPlane", new MemberRegisterInfo { Name = "TransformPlane", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.M_TransformPlane
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.M_ToString
#endif
                    }},
                    {"rotation", new MemberRegisterInfo { Name = "rotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_rotation
#endif
                    }},
                    {"lossyScale", new MemberRegisterInfo { Name = "lossyScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_lossyScale
#endif
                    }},
                    {"isIdentity", new MemberRegisterInfo { Name = "isIdentity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_isIdentity
#endif
                    }},
                    {"determinant", new MemberRegisterInfo { Name = "determinant", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_determinant
#endif
                    }},
                    {"decomposeProjection", new MemberRegisterInfo { Name = "decomposeProjection", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_decomposeProjection
#endif
                    }},
                    {"inverse", new MemberRegisterInfo { Name = "inverse", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_inverse
#endif
                    }},
                    {"transpose", new MemberRegisterInfo { Name = "transpose", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_transpose
#endif
                    }},
                    {"get_Item", new MemberRegisterInfo { Name = "get_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.GetItem
#endif
                    }},
                    {"set_Item", new MemberRegisterInfo { Name = "set_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.SetItem
#endif
                    }},
                    {"m00", new MemberRegisterInfo { Name = "m00", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_m00, PropertySetter = UnityEngine_Matrix4x4_Wrap.S_m00
#endif
                    }},
                    {"m10", new MemberRegisterInfo { Name = "m10", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_m10, PropertySetter = UnityEngine_Matrix4x4_Wrap.S_m10
#endif
                    }},
                    {"m20", new MemberRegisterInfo { Name = "m20", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_m20, PropertySetter = UnityEngine_Matrix4x4_Wrap.S_m20
#endif
                    }},
                    {"m30", new MemberRegisterInfo { Name = "m30", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_m30, PropertySetter = UnityEngine_Matrix4x4_Wrap.S_m30
#endif
                    }},
                    {"m01", new MemberRegisterInfo { Name = "m01", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_m01, PropertySetter = UnityEngine_Matrix4x4_Wrap.S_m01
#endif
                    }},
                    {"m11", new MemberRegisterInfo { Name = "m11", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_m11, PropertySetter = UnityEngine_Matrix4x4_Wrap.S_m11
#endif
                    }},
                    {"m21", new MemberRegisterInfo { Name = "m21", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_m21, PropertySetter = UnityEngine_Matrix4x4_Wrap.S_m21
#endif
                    }},
                    {"m31", new MemberRegisterInfo { Name = "m31", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_m31, PropertySetter = UnityEngine_Matrix4x4_Wrap.S_m31
#endif
                    }},
                    {"m02", new MemberRegisterInfo { Name = "m02", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_m02, PropertySetter = UnityEngine_Matrix4x4_Wrap.S_m02
#endif
                    }},
                    {"m12", new MemberRegisterInfo { Name = "m12", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_m12, PropertySetter = UnityEngine_Matrix4x4_Wrap.S_m12
#endif
                    }},
                    {"m22", new MemberRegisterInfo { Name = "m22", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_m22, PropertySetter = UnityEngine_Matrix4x4_Wrap.S_m22
#endif
                    }},
                    {"m32", new MemberRegisterInfo { Name = "m32", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_m32, PropertySetter = UnityEngine_Matrix4x4_Wrap.S_m32
#endif
                    }},
                    {"m03", new MemberRegisterInfo { Name = "m03", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_m03, PropertySetter = UnityEngine_Matrix4x4_Wrap.S_m03
#endif
                    }},
                    {"m13", new MemberRegisterInfo { Name = "m13", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_m13, PropertySetter = UnityEngine_Matrix4x4_Wrap.S_m13
#endif
                    }},
                    {"m23", new MemberRegisterInfo { Name = "m23", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_m23, PropertySetter = UnityEngine_Matrix4x4_Wrap.S_m23
#endif
                    }},
                    {"m33", new MemberRegisterInfo { Name = "m33", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_m33, PropertySetter = UnityEngine_Matrix4x4_Wrap.S_m33
#endif
                    }},
                    {"Determinant_static", new MemberRegisterInfo { Name = "Determinant", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.F_Determinant
#endif
                    }},
                    {"TRS_static", new MemberRegisterInfo { Name = "TRS", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.F_TRS
#endif
                    }},
                    {"Inverse3DAffine_static", new MemberRegisterInfo { Name = "Inverse3DAffine", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.F_Inverse3DAffine
#endif
                    }},
                    {"Inverse_static", new MemberRegisterInfo { Name = "Inverse", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.F_Inverse
#endif
                    }},
                    {"Transpose_static", new MemberRegisterInfo { Name = "Transpose", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.F_Transpose
#endif
                    }},
                    {"Ortho_static", new MemberRegisterInfo { Name = "Ortho", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.F_Ortho
#endif
                    }},
                    {"Perspective_static", new MemberRegisterInfo { Name = "Perspective", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.F_Perspective
#endif
                    }},
                    {"LookAt_static", new MemberRegisterInfo { Name = "LookAt", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.F_LookAt
#endif
                    }},
                    {"Frustum_static", new MemberRegisterInfo { Name = "Frustum", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.F_Frustum
#endif
                    }},
                    {"Scale_static", new MemberRegisterInfo { Name = "Scale", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.F_Scale
#endif
                    }},
                    {"Translate_static", new MemberRegisterInfo { Name = "Translate", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.F_Translate
#endif
                    }},
                    {"Rotate_static", new MemberRegisterInfo { Name = "Rotate", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Matrix4x4_Wrap.F_Rotate
#endif
                    }},
                    {"zero_static", new MemberRegisterInfo { Name = "zero", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_zero
#endif
                    }},
                    {"identity_static", new MemberRegisterInfo { Name = "identity", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Matrix4x4_Wrap.G_identity
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Quaternion_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Quaternion_Wrap.Constructor
#endif
                    }},
                    {"Set", new MemberRegisterInfo { Name = "Set", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.M_Set
#endif
                    }},
                    {"op_Multiply_static", new MemberRegisterInfo { Name = "op_Multiply", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.O_op_Multiply
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.O_op_Inequality
#endif
                    }},
                    {"SetLookRotation", new MemberRegisterInfo { Name = "SetLookRotation", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.M_SetLookRotation
#endif
                    }},
                    {"ToAngleAxis", new MemberRegisterInfo { Name = "ToAngleAxis", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.M_ToAngleAxis
#endif
                    }},
                    {"SetFromToRotation", new MemberRegisterInfo { Name = "SetFromToRotation", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.M_SetFromToRotation
#endif
                    }},
                    {"Normalize", new MemberRegisterInfo { Name = "Normalize", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.M_Normalize
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.M_GetHashCode
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.M_Equals
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.M_ToString
#endif
                    }},
                    {"get_Item", new MemberRegisterInfo { Name = "get_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.GetItem
#endif
                    }},
                    {"set_Item", new MemberRegisterInfo { Name = "set_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.SetItem
#endif
                    }},
                    {"eulerAngles", new MemberRegisterInfo { Name = "eulerAngles", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Quaternion_Wrap.G_eulerAngles, PropertySetter = UnityEngine_Quaternion_Wrap.S_eulerAngles
#endif
                    }},
                    {"normalized", new MemberRegisterInfo { Name = "normalized", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Quaternion_Wrap.G_normalized
#endif
                    }},
                    {"x", new MemberRegisterInfo { Name = "x", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Quaternion_Wrap.G_x, PropertySetter = UnityEngine_Quaternion_Wrap.S_x
#endif
                    }},
                    {"y", new MemberRegisterInfo { Name = "y", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Quaternion_Wrap.G_y, PropertySetter = UnityEngine_Quaternion_Wrap.S_y
#endif
                    }},
                    {"z", new MemberRegisterInfo { Name = "z", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Quaternion_Wrap.G_z, PropertySetter = UnityEngine_Quaternion_Wrap.S_z
#endif
                    }},
                    {"w", new MemberRegisterInfo { Name = "w", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Quaternion_Wrap.G_w, PropertySetter = UnityEngine_Quaternion_Wrap.S_w
#endif
                    }},
                    {"FromToRotation_static", new MemberRegisterInfo { Name = "FromToRotation", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.F_FromToRotation
#endif
                    }},
                    {"Inverse_static", new MemberRegisterInfo { Name = "Inverse", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.F_Inverse
#endif
                    }},
                    {"Slerp_static", new MemberRegisterInfo { Name = "Slerp", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.F_Slerp
#endif
                    }},
                    {"SlerpUnclamped_static", new MemberRegisterInfo { Name = "SlerpUnclamped", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.F_SlerpUnclamped
#endif
                    }},
                    {"Lerp_static", new MemberRegisterInfo { Name = "Lerp", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.F_Lerp
#endif
                    }},
                    {"LerpUnclamped_static", new MemberRegisterInfo { Name = "LerpUnclamped", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.F_LerpUnclamped
#endif
                    }},
                    {"AngleAxis_static", new MemberRegisterInfo { Name = "AngleAxis", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.F_AngleAxis
#endif
                    }},
                    {"LookRotation_static", new MemberRegisterInfo { Name = "LookRotation", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.F_LookRotation
#endif
                    }},
                    {"Dot_static", new MemberRegisterInfo { Name = "Dot", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.F_Dot
#endif
                    }},
                    {"Angle_static", new MemberRegisterInfo { Name = "Angle", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.F_Angle
#endif
                    }},
                    {"Euler_static", new MemberRegisterInfo { Name = "Euler", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.F_Euler
#endif
                    }},
                    {"RotateTowards_static", new MemberRegisterInfo { Name = "RotateTowards", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.F_RotateTowards
#endif
                    }},
                    {"Normalize_static", new MemberRegisterInfo { Name = "Normalize", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Quaternion_Wrap.F_Normalize
#endif
                    }},
                    {"identity_static", new MemberRegisterInfo { Name = "identity", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Quaternion_Wrap.G_identity
#endif
                    }},
                    {"kEpsilon_static", new MemberRegisterInfo { Name = "kEpsilon", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Quaternion_Wrap.G_kEpsilon
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Mathf_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Mathf_Wrap.Constructor
#endif
                    }},
                    {"ClosestPowerOfTwo_static", new MemberRegisterInfo { Name = "ClosestPowerOfTwo", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_ClosestPowerOfTwo
#endif
                    }},
                    {"IsPowerOfTwo_static", new MemberRegisterInfo { Name = "IsPowerOfTwo", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_IsPowerOfTwo
#endif
                    }},
                    {"NextPowerOfTwo_static", new MemberRegisterInfo { Name = "NextPowerOfTwo", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_NextPowerOfTwo
#endif
                    }},
                    {"GammaToLinearSpace_static", new MemberRegisterInfo { Name = "GammaToLinearSpace", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_GammaToLinearSpace
#endif
                    }},
                    {"LinearToGammaSpace_static", new MemberRegisterInfo { Name = "LinearToGammaSpace", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_LinearToGammaSpace
#endif
                    }},
                    {"CorrelatedColorTemperatureToRGB_static", new MemberRegisterInfo { Name = "CorrelatedColorTemperatureToRGB", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_CorrelatedColorTemperatureToRGB
#endif
                    }},
                    {"FloatToHalf_static", new MemberRegisterInfo { Name = "FloatToHalf", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_FloatToHalf
#endif
                    }},
                    {"HalfToFloat_static", new MemberRegisterInfo { Name = "HalfToFloat", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_HalfToFloat
#endif
                    }},
                    {"PerlinNoise_static", new MemberRegisterInfo { Name = "PerlinNoise", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_PerlinNoise
#endif
                    }},
                    {"Sin_static", new MemberRegisterInfo { Name = "Sin", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Sin
#endif
                    }},
                    {"Cos_static", new MemberRegisterInfo { Name = "Cos", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Cos
#endif
                    }},
                    {"Tan_static", new MemberRegisterInfo { Name = "Tan", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Tan
#endif
                    }},
                    {"Asin_static", new MemberRegisterInfo { Name = "Asin", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Asin
#endif
                    }},
                    {"Acos_static", new MemberRegisterInfo { Name = "Acos", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Acos
#endif
                    }},
                    {"Atan_static", new MemberRegisterInfo { Name = "Atan", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Atan
#endif
                    }},
                    {"Atan2_static", new MemberRegisterInfo { Name = "Atan2", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Atan2
#endif
                    }},
                    {"Sqrt_static", new MemberRegisterInfo { Name = "Sqrt", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Sqrt
#endif
                    }},
                    {"Abs_static", new MemberRegisterInfo { Name = "Abs", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Abs
#endif
                    }},
                    {"Min_static", new MemberRegisterInfo { Name = "Min", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Min
#endif
                    }},
                    {"Max_static", new MemberRegisterInfo { Name = "Max", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Max
#endif
                    }},
                    {"Pow_static", new MemberRegisterInfo { Name = "Pow", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Pow
#endif
                    }},
                    {"Exp_static", new MemberRegisterInfo { Name = "Exp", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Exp
#endif
                    }},
                    {"Log_static", new MemberRegisterInfo { Name = "Log", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Log
#endif
                    }},
                    {"Log10_static", new MemberRegisterInfo { Name = "Log10", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Log10
#endif
                    }},
                    {"Ceil_static", new MemberRegisterInfo { Name = "Ceil", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Ceil
#endif
                    }},
                    {"Floor_static", new MemberRegisterInfo { Name = "Floor", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Floor
#endif
                    }},
                    {"Round_static", new MemberRegisterInfo { Name = "Round", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Round
#endif
                    }},
                    {"CeilToInt_static", new MemberRegisterInfo { Name = "CeilToInt", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_CeilToInt
#endif
                    }},
                    {"FloorToInt_static", new MemberRegisterInfo { Name = "FloorToInt", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_FloorToInt
#endif
                    }},
                    {"RoundToInt_static", new MemberRegisterInfo { Name = "RoundToInt", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_RoundToInt
#endif
                    }},
                    {"Sign_static", new MemberRegisterInfo { Name = "Sign", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Sign
#endif
                    }},
                    {"Clamp_static", new MemberRegisterInfo { Name = "Clamp", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Clamp
#endif
                    }},
                    {"Clamp01_static", new MemberRegisterInfo { Name = "Clamp01", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Clamp01
#endif
                    }},
                    {"Lerp_static", new MemberRegisterInfo { Name = "Lerp", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Lerp
#endif
                    }},
                    {"LerpUnclamped_static", new MemberRegisterInfo { Name = "LerpUnclamped", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_LerpUnclamped
#endif
                    }},
                    {"LerpAngle_static", new MemberRegisterInfo { Name = "LerpAngle", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_LerpAngle
#endif
                    }},
                    {"MoveTowards_static", new MemberRegisterInfo { Name = "MoveTowards", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_MoveTowards
#endif
                    }},
                    {"MoveTowardsAngle_static", new MemberRegisterInfo { Name = "MoveTowardsAngle", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_MoveTowardsAngle
#endif
                    }},
                    {"SmoothStep_static", new MemberRegisterInfo { Name = "SmoothStep", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_SmoothStep
#endif
                    }},
                    {"Gamma_static", new MemberRegisterInfo { Name = "Gamma", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Gamma
#endif
                    }},
                    {"Approximately_static", new MemberRegisterInfo { Name = "Approximately", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Approximately
#endif
                    }},
                    {"SmoothDamp_static", new MemberRegisterInfo { Name = "SmoothDamp", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_SmoothDamp
#endif
                    }},
                    {"SmoothDampAngle_static", new MemberRegisterInfo { Name = "SmoothDampAngle", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_SmoothDampAngle
#endif
                    }},
                    {"Repeat_static", new MemberRegisterInfo { Name = "Repeat", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_Repeat
#endif
                    }},
                    {"PingPong_static", new MemberRegisterInfo { Name = "PingPong", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_PingPong
#endif
                    }},
                    {"InverseLerp_static", new MemberRegisterInfo { Name = "InverseLerp", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_InverseLerp
#endif
                    }},
                    {"DeltaAngle_static", new MemberRegisterInfo { Name = "DeltaAngle", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Mathf_Wrap.F_DeltaAngle
#endif
                    }},
                    {"PI_static", new MemberRegisterInfo { Name = "PI", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mathf_Wrap.G_PI
#endif
                    }},
                    {"Infinity_static", new MemberRegisterInfo { Name = "Infinity", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mathf_Wrap.G_Infinity
#endif
                    }},
                    {"NegativeInfinity_static", new MemberRegisterInfo { Name = "NegativeInfinity", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mathf_Wrap.G_NegativeInfinity
#endif
                    }},
                    {"Deg2Rad_static", new MemberRegisterInfo { Name = "Deg2Rad", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mathf_Wrap.G_Deg2Rad
#endif
                    }},
                    {"Rad2Deg_static", new MemberRegisterInfo { Name = "Rad2Deg", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mathf_Wrap.G_Rad2Deg
#endif
                    }},
                    {"Epsilon_static", new MemberRegisterInfo { Name = "Epsilon", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Mathf_Wrap.G_Epsilon
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Vector2_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Vector2_Wrap.Constructor
#endif
                    }},
                    {"Set", new MemberRegisterInfo { Name = "Set", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.M_Set
#endif
                    }},
                    {"Scale", new MemberRegisterInfo { Name = "Scale", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.M_Scale
#endif
                    }},
                    {"Normalize", new MemberRegisterInfo { Name = "Normalize", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.M_Normalize
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.M_ToString
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.M_GetHashCode
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.M_Equals
#endif
                    }},
                    {"SqrMagnitude", new MemberRegisterInfo { Name = "SqrMagnitude", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.M_SqrMagnitude
#endif
                    }},
                    {"op_Addition_static", new MemberRegisterInfo { Name = "op_Addition", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.O_op_Addition
#endif
                    }},
                    {"op_Subtraction_static", new MemberRegisterInfo { Name = "op_Subtraction", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.O_op_Subtraction
#endif
                    }},
                    {"op_Multiply_static", new MemberRegisterInfo { Name = "op_Multiply", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.O_op_Multiply
#endif
                    }},
                    {"op_Division_static", new MemberRegisterInfo { Name = "op_Division", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.O_op_Division
#endif
                    }},
                    {"op_UnaryNegation_static", new MemberRegisterInfo { Name = "op_UnaryNegation", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.O_op_UnaryNegation
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.O_op_Inequality
#endif
                    }},
                    {"get_Item", new MemberRegisterInfo { Name = "get_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.GetItem
#endif
                    }},
                    {"set_Item", new MemberRegisterInfo { Name = "set_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.SetItem
#endif
                    }},
                    {"normalized", new MemberRegisterInfo { Name = "normalized", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2_Wrap.G_normalized
#endif
                    }},
                    {"magnitude", new MemberRegisterInfo { Name = "magnitude", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2_Wrap.G_magnitude
#endif
                    }},
                    {"sqrMagnitude", new MemberRegisterInfo { Name = "sqrMagnitude", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2_Wrap.G_sqrMagnitude
#endif
                    }},
                    {"x", new MemberRegisterInfo { Name = "x", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2_Wrap.G_x, PropertySetter = UnityEngine_Vector2_Wrap.S_x
#endif
                    }},
                    {"y", new MemberRegisterInfo { Name = "y", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2_Wrap.G_y, PropertySetter = UnityEngine_Vector2_Wrap.S_y
#endif
                    }},
                    {"Lerp_static", new MemberRegisterInfo { Name = "Lerp", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.F_Lerp
#endif
                    }},
                    {"LerpUnclamped_static", new MemberRegisterInfo { Name = "LerpUnclamped", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.F_LerpUnclamped
#endif
                    }},
                    {"MoveTowards_static", new MemberRegisterInfo { Name = "MoveTowards", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.F_MoveTowards
#endif
                    }},
                    {"Scale_static", new MemberRegisterInfo { Name = "Scale", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.F_Scale
#endif
                    }},
                    {"Reflect_static", new MemberRegisterInfo { Name = "Reflect", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.F_Reflect
#endif
                    }},
                    {"Perpendicular_static", new MemberRegisterInfo { Name = "Perpendicular", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.F_Perpendicular
#endif
                    }},
                    {"Dot_static", new MemberRegisterInfo { Name = "Dot", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.F_Dot
#endif
                    }},
                    {"Angle_static", new MemberRegisterInfo { Name = "Angle", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.F_Angle
#endif
                    }},
                    {"SignedAngle_static", new MemberRegisterInfo { Name = "SignedAngle", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.F_SignedAngle
#endif
                    }},
                    {"Distance_static", new MemberRegisterInfo { Name = "Distance", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.F_Distance
#endif
                    }},
                    {"ClampMagnitude_static", new MemberRegisterInfo { Name = "ClampMagnitude", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.F_ClampMagnitude
#endif
                    }},
                    {"SqrMagnitude_static", new MemberRegisterInfo { Name = "SqrMagnitude", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.F_SqrMagnitude
#endif
                    }},
                    {"Min_static", new MemberRegisterInfo { Name = "Min", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.F_Min
#endif
                    }},
                    {"Max_static", new MemberRegisterInfo { Name = "Max", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.F_Max
#endif
                    }},
                    {"SmoothDamp_static", new MemberRegisterInfo { Name = "SmoothDamp", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2_Wrap.F_SmoothDamp
#endif
                    }},
                    {"zero_static", new MemberRegisterInfo { Name = "zero", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2_Wrap.G_zero
#endif
                    }},
                    {"one_static", new MemberRegisterInfo { Name = "one", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2_Wrap.G_one
#endif
                    }},
                    {"up_static", new MemberRegisterInfo { Name = "up", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2_Wrap.G_up
#endif
                    }},
                    {"down_static", new MemberRegisterInfo { Name = "down", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2_Wrap.G_down
#endif
                    }},
                    {"left_static", new MemberRegisterInfo { Name = "left", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2_Wrap.G_left
#endif
                    }},
                    {"right_static", new MemberRegisterInfo { Name = "right", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2_Wrap.G_right
#endif
                    }},
                    {"positiveInfinity_static", new MemberRegisterInfo { Name = "positiveInfinity", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2_Wrap.G_positiveInfinity
#endif
                    }},
                    {"negativeInfinity_static", new MemberRegisterInfo { Name = "negativeInfinity", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2_Wrap.G_negativeInfinity
#endif
                    }},
                    {"kEpsilon_static", new MemberRegisterInfo { Name = "kEpsilon", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2_Wrap.G_kEpsilon
#endif
                    }},
                    {"kEpsilonNormalSqrt_static", new MemberRegisterInfo { Name = "kEpsilonNormalSqrt", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2_Wrap.G_kEpsilonNormalSqrt
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Vector2Int_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Vector2Int_Wrap.Constructor
#endif
                    }},
                    {"Set", new MemberRegisterInfo { Name = "Set", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.M_Set
#endif
                    }},
                    {"Scale", new MemberRegisterInfo { Name = "Scale", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.M_Scale
#endif
                    }},
                    {"Clamp", new MemberRegisterInfo { Name = "Clamp", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.M_Clamp
#endif
                    }},
                    {"op_UnaryNegation_static", new MemberRegisterInfo { Name = "op_UnaryNegation", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.O_op_UnaryNegation
#endif
                    }},
                    {"op_Addition_static", new MemberRegisterInfo { Name = "op_Addition", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.O_op_Addition
#endif
                    }},
                    {"op_Subtraction_static", new MemberRegisterInfo { Name = "op_Subtraction", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.O_op_Subtraction
#endif
                    }},
                    {"op_Multiply_static", new MemberRegisterInfo { Name = "op_Multiply", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.O_op_Multiply
#endif
                    }},
                    {"op_Division_static", new MemberRegisterInfo { Name = "op_Division", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.O_op_Division
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.O_op_Inequality
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.M_Equals
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.M_GetHashCode
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.M_ToString
#endif
                    }},
                    {"x", new MemberRegisterInfo { Name = "x", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2Int_Wrap.G_x, PropertySetter = UnityEngine_Vector2Int_Wrap.S_x
#endif
                    }},
                    {"y", new MemberRegisterInfo { Name = "y", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2Int_Wrap.G_y, PropertySetter = UnityEngine_Vector2Int_Wrap.S_y
#endif
                    }},
                    {"get_Item", new MemberRegisterInfo { Name = "get_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.GetItem
#endif
                    }},
                    {"set_Item", new MemberRegisterInfo { Name = "set_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.SetItem
#endif
                    }},
                    {"magnitude", new MemberRegisterInfo { Name = "magnitude", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2Int_Wrap.G_magnitude
#endif
                    }},
                    {"sqrMagnitude", new MemberRegisterInfo { Name = "sqrMagnitude", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2Int_Wrap.G_sqrMagnitude
#endif
                    }},
                    {"Distance_static", new MemberRegisterInfo { Name = "Distance", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.F_Distance
#endif
                    }},
                    {"Min_static", new MemberRegisterInfo { Name = "Min", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.F_Min
#endif
                    }},
                    {"Max_static", new MemberRegisterInfo { Name = "Max", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.F_Max
#endif
                    }},
                    {"Scale_static", new MemberRegisterInfo { Name = "Scale", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.F_Scale
#endif
                    }},
                    {"FloorToInt_static", new MemberRegisterInfo { Name = "FloorToInt", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.F_FloorToInt
#endif
                    }},
                    {"CeilToInt_static", new MemberRegisterInfo { Name = "CeilToInt", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.F_CeilToInt
#endif
                    }},
                    {"RoundToInt_static", new MemberRegisterInfo { Name = "RoundToInt", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector2Int_Wrap.F_RoundToInt
#endif
                    }},
                    {"zero_static", new MemberRegisterInfo { Name = "zero", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2Int_Wrap.G_zero
#endif
                    }},
                    {"one_static", new MemberRegisterInfo { Name = "one", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2Int_Wrap.G_one
#endif
                    }},
                    {"up_static", new MemberRegisterInfo { Name = "up", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2Int_Wrap.G_up
#endif
                    }},
                    {"down_static", new MemberRegisterInfo { Name = "down", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2Int_Wrap.G_down
#endif
                    }},
                    {"left_static", new MemberRegisterInfo { Name = "left", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2Int_Wrap.G_left
#endif
                    }},
                    {"right_static", new MemberRegisterInfo { Name = "right", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector2Int_Wrap.G_right
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Vector3Int_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Vector3Int_Wrap.Constructor
#endif
                    }},
                    {"Set", new MemberRegisterInfo { Name = "Set", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.M_Set
#endif
                    }},
                    {"Scale", new MemberRegisterInfo { Name = "Scale", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.M_Scale
#endif
                    }},
                    {"Clamp", new MemberRegisterInfo { Name = "Clamp", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.M_Clamp
#endif
                    }},
                    {"op_Addition_static", new MemberRegisterInfo { Name = "op_Addition", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.O_op_Addition
#endif
                    }},
                    {"op_Subtraction_static", new MemberRegisterInfo { Name = "op_Subtraction", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.O_op_Subtraction
#endif
                    }},
                    {"op_Multiply_static", new MemberRegisterInfo { Name = "op_Multiply", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.O_op_Multiply
#endif
                    }},
                    {"op_UnaryNegation_static", new MemberRegisterInfo { Name = "op_UnaryNegation", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.O_op_UnaryNegation
#endif
                    }},
                    {"op_Division_static", new MemberRegisterInfo { Name = "op_Division", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.O_op_Division
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.O_op_Inequality
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.M_Equals
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.M_GetHashCode
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.M_ToString
#endif
                    }},
                    {"x", new MemberRegisterInfo { Name = "x", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3Int_Wrap.G_x, PropertySetter = UnityEngine_Vector3Int_Wrap.S_x
#endif
                    }},
                    {"y", new MemberRegisterInfo { Name = "y", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3Int_Wrap.G_y, PropertySetter = UnityEngine_Vector3Int_Wrap.S_y
#endif
                    }},
                    {"z", new MemberRegisterInfo { Name = "z", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3Int_Wrap.G_z, PropertySetter = UnityEngine_Vector3Int_Wrap.S_z
#endif
                    }},
                    {"get_Item", new MemberRegisterInfo { Name = "get_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.GetItem
#endif
                    }},
                    {"set_Item", new MemberRegisterInfo { Name = "set_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.SetItem
#endif
                    }},
                    {"magnitude", new MemberRegisterInfo { Name = "magnitude", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3Int_Wrap.G_magnitude
#endif
                    }},
                    {"sqrMagnitude", new MemberRegisterInfo { Name = "sqrMagnitude", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3Int_Wrap.G_sqrMagnitude
#endif
                    }},
                    {"Distance_static", new MemberRegisterInfo { Name = "Distance", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.F_Distance
#endif
                    }},
                    {"Min_static", new MemberRegisterInfo { Name = "Min", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.F_Min
#endif
                    }},
                    {"Max_static", new MemberRegisterInfo { Name = "Max", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.F_Max
#endif
                    }},
                    {"Scale_static", new MemberRegisterInfo { Name = "Scale", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.F_Scale
#endif
                    }},
                    {"FloorToInt_static", new MemberRegisterInfo { Name = "FloorToInt", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.F_FloorToInt
#endif
                    }},
                    {"CeilToInt_static", new MemberRegisterInfo { Name = "CeilToInt", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.F_CeilToInt
#endif
                    }},
                    {"RoundToInt_static", new MemberRegisterInfo { Name = "RoundToInt", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector3Int_Wrap.F_RoundToInt
#endif
                    }},
                    {"zero_static", new MemberRegisterInfo { Name = "zero", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3Int_Wrap.G_zero
#endif
                    }},
                    {"one_static", new MemberRegisterInfo { Name = "one", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3Int_Wrap.G_one
#endif
                    }},
                    {"up_static", new MemberRegisterInfo { Name = "up", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3Int_Wrap.G_up
#endif
                    }},
                    {"down_static", new MemberRegisterInfo { Name = "down", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3Int_Wrap.G_down
#endif
                    }},
                    {"left_static", new MemberRegisterInfo { Name = "left", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3Int_Wrap.G_left
#endif
                    }},
                    {"right_static", new MemberRegisterInfo { Name = "right", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3Int_Wrap.G_right
#endif
                    }},
                    {"forward_static", new MemberRegisterInfo { Name = "forward", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3Int_Wrap.G_forward
#endif
                    }},
                    {"back_static", new MemberRegisterInfo { Name = "back", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector3Int_Wrap.G_back
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Vector4_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Vector4_Wrap.Constructor
#endif
                    }},
                    {"Set", new MemberRegisterInfo { Name = "Set", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.M_Set
#endif
                    }},
                    {"Scale", new MemberRegisterInfo { Name = "Scale", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.M_Scale
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.M_GetHashCode
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.M_Equals
#endif
                    }},
                    {"Normalize", new MemberRegisterInfo { Name = "Normalize", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.M_Normalize
#endif
                    }},
                    {"op_Addition_static", new MemberRegisterInfo { Name = "op_Addition", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.O_op_Addition
#endif
                    }},
                    {"op_Subtraction_static", new MemberRegisterInfo { Name = "op_Subtraction", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.O_op_Subtraction
#endif
                    }},
                    {"op_UnaryNegation_static", new MemberRegisterInfo { Name = "op_UnaryNegation", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.O_op_UnaryNegation
#endif
                    }},
                    {"op_Multiply_static", new MemberRegisterInfo { Name = "op_Multiply", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.O_op_Multiply
#endif
                    }},
                    {"op_Division_static", new MemberRegisterInfo { Name = "op_Division", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.O_op_Division
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.O_op_Inequality
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.M_ToString
#endif
                    }},
                    {"SqrMagnitude", new MemberRegisterInfo { Name = "SqrMagnitude", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.M_SqrMagnitude
#endif
                    }},
                    {"get_Item", new MemberRegisterInfo { Name = "get_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.GetItem
#endif
                    }},
                    {"set_Item", new MemberRegisterInfo { Name = "set_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.SetItem
#endif
                    }},
                    {"normalized", new MemberRegisterInfo { Name = "normalized", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector4_Wrap.G_normalized
#endif
                    }},
                    {"magnitude", new MemberRegisterInfo { Name = "magnitude", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector4_Wrap.G_magnitude
#endif
                    }},
                    {"sqrMagnitude", new MemberRegisterInfo { Name = "sqrMagnitude", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector4_Wrap.G_sqrMagnitude
#endif
                    }},
                    {"x", new MemberRegisterInfo { Name = "x", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector4_Wrap.G_x, PropertySetter = UnityEngine_Vector4_Wrap.S_x
#endif
                    }},
                    {"y", new MemberRegisterInfo { Name = "y", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector4_Wrap.G_y, PropertySetter = UnityEngine_Vector4_Wrap.S_y
#endif
                    }},
                    {"z", new MemberRegisterInfo { Name = "z", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector4_Wrap.G_z, PropertySetter = UnityEngine_Vector4_Wrap.S_z
#endif
                    }},
                    {"w", new MemberRegisterInfo { Name = "w", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector4_Wrap.G_w, PropertySetter = UnityEngine_Vector4_Wrap.S_w
#endif
                    }},
                    {"Lerp_static", new MemberRegisterInfo { Name = "Lerp", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.F_Lerp
#endif
                    }},
                    {"LerpUnclamped_static", new MemberRegisterInfo { Name = "LerpUnclamped", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.F_LerpUnclamped
#endif
                    }},
                    {"MoveTowards_static", new MemberRegisterInfo { Name = "MoveTowards", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.F_MoveTowards
#endif
                    }},
                    {"Scale_static", new MemberRegisterInfo { Name = "Scale", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.F_Scale
#endif
                    }},
                    {"Normalize_static", new MemberRegisterInfo { Name = "Normalize", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.F_Normalize
#endif
                    }},
                    {"Dot_static", new MemberRegisterInfo { Name = "Dot", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.F_Dot
#endif
                    }},
                    {"Project_static", new MemberRegisterInfo { Name = "Project", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.F_Project
#endif
                    }},
                    {"Distance_static", new MemberRegisterInfo { Name = "Distance", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.F_Distance
#endif
                    }},
                    {"Magnitude_static", new MemberRegisterInfo { Name = "Magnitude", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.F_Magnitude
#endif
                    }},
                    {"Min_static", new MemberRegisterInfo { Name = "Min", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.F_Min
#endif
                    }},
                    {"Max_static", new MemberRegisterInfo { Name = "Max", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.F_Max
#endif
                    }},
                    {"SqrMagnitude_static", new MemberRegisterInfo { Name = "SqrMagnitude", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Vector4_Wrap.F_SqrMagnitude
#endif
                    }},
                    {"zero_static", new MemberRegisterInfo { Name = "zero", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector4_Wrap.G_zero
#endif
                    }},
                    {"one_static", new MemberRegisterInfo { Name = "one", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector4_Wrap.G_one
#endif
                    }},
                    {"positiveInfinity_static", new MemberRegisterInfo { Name = "positiveInfinity", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector4_Wrap.G_positiveInfinity
#endif
                    }},
                    {"negativeInfinity_static", new MemberRegisterInfo { Name = "negativeInfinity", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector4_Wrap.G_negativeInfinity
#endif
                    }},
                    {"kEpsilon_static", new MemberRegisterInfo { Name = "kEpsilon", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Vector4_Wrap.G_kEpsilon
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Ping_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Ping_Wrap.Constructor
#endif
                    }},
                    {"DestroyPing", new MemberRegisterInfo { Name = "DestroyPing", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Ping_Wrap.M_DestroyPing
#endif
                    }},
                    {"isDone", new MemberRegisterInfo { Name = "isDone", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Ping_Wrap.G_isDone
#endif
                    }},
                    {"time", new MemberRegisterInfo { Name = "time", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Ping_Wrap.G_time
#endif
                    }},
                    {"ip", new MemberRegisterInfo { Name = "ip", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Ping_Wrap.G_ip
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_PlayerPrefsException_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_PlayerPrefsException_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_PlayerPrefs_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_PlayerPrefs_Wrap.Constructor
#endif
                    }},
                    {"SetInt_static", new MemberRegisterInfo { Name = "SetInt", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PlayerPrefs_Wrap.F_SetInt
#endif
                    }},
                    {"GetInt_static", new MemberRegisterInfo { Name = "GetInt", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PlayerPrefs_Wrap.F_GetInt
#endif
                    }},
                    {"SetFloat_static", new MemberRegisterInfo { Name = "SetFloat", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PlayerPrefs_Wrap.F_SetFloat
#endif
                    }},
                    {"GetFloat_static", new MemberRegisterInfo { Name = "GetFloat", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PlayerPrefs_Wrap.F_GetFloat
#endif
                    }},
                    {"SetString_static", new MemberRegisterInfo { Name = "SetString", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PlayerPrefs_Wrap.F_SetString
#endif
                    }},
                    {"GetString_static", new MemberRegisterInfo { Name = "GetString", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PlayerPrefs_Wrap.F_GetString
#endif
                    }},
                    {"HasKey_static", new MemberRegisterInfo { Name = "HasKey", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PlayerPrefs_Wrap.F_HasKey
#endif
                    }},
                    {"DeleteKey_static", new MemberRegisterInfo { Name = "DeleteKey", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PlayerPrefs_Wrap.F_DeleteKey
#endif
                    }},
                    {"DeleteAll_static", new MemberRegisterInfo { Name = "DeleteAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PlayerPrefs_Wrap.F_DeleteAll
#endif
                    }},
                    {"Save_static", new MemberRegisterInfo { Name = "Save", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PlayerPrefs_Wrap.F_Save
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_PropertyAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"order", new MemberRegisterInfo { Name = "order", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PropertyAttribute_Wrap.G_order, PropertySetter = UnityEngine_PropertyAttribute_Wrap.S_order
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ContextMenuItemAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ContextMenuItemAttribute_Wrap.Constructor
#endif
                    }},
                    {"name", new MemberRegisterInfo { Name = "name", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContextMenuItemAttribute_Wrap.G_name
#endif
                    }},
                    {"function", new MemberRegisterInfo { Name = "function", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContextMenuItemAttribute_Wrap.G_function
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_InspectorNameAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_InspectorNameAttribute_Wrap.Constructor
#endif
                    }},
                    {"displayName", new MemberRegisterInfo { Name = "displayName", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_InspectorNameAttribute_Wrap.G_displayName
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_TooltipAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_TooltipAttribute_Wrap.Constructor
#endif
                    }},
                    {"tooltip", new MemberRegisterInfo { Name = "tooltip", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TooltipAttribute_Wrap.G_tooltip
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SpaceAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SpaceAttribute_Wrap.Constructor
#endif
                    }},
                    {"height", new MemberRegisterInfo { Name = "height", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpaceAttribute_Wrap.G_height
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_HeaderAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_HeaderAttribute_Wrap.Constructor
#endif
                    }},
                    {"header", new MemberRegisterInfo { Name = "header", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HeaderAttribute_Wrap.G_header
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RangeAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_RangeAttribute_Wrap.Constructor
#endif
                    }},
                    {"min", new MemberRegisterInfo { Name = "min", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RangeAttribute_Wrap.G_min
#endif
                    }},
                    {"max", new MemberRegisterInfo { Name = "max", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RangeAttribute_Wrap.G_max
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_MinAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_MinAttribute_Wrap.Constructor
#endif
                    }},
                    {"min", new MemberRegisterInfo { Name = "min", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_MinAttribute_Wrap.G_min
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_MultilineAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_MultilineAttribute_Wrap.Constructor
#endif
                    }},
                    {"lines", new MemberRegisterInfo { Name = "lines", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_MultilineAttribute_Wrap.G_lines
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_TextAreaAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_TextAreaAttribute_Wrap.Constructor
#endif
                    }},
                    {"minLines", new MemberRegisterInfo { Name = "minLines", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextAreaAttribute_Wrap.G_minLines
#endif
                    }},
                    {"maxLines", new MemberRegisterInfo { Name = "maxLines", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextAreaAttribute_Wrap.G_maxLines
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ColorUsageAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ColorUsageAttribute_Wrap.Constructor
#endif
                    }},
                    {"showAlpha", new MemberRegisterInfo { Name = "showAlpha", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ColorUsageAttribute_Wrap.G_showAlpha
#endif
                    }},
                    {"hdr", new MemberRegisterInfo { Name = "hdr", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ColorUsageAttribute_Wrap.G_hdr
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_GradientUsageAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_GradientUsageAttribute_Wrap.Constructor
#endif
                    }},
                    {"hdr", new MemberRegisterInfo { Name = "hdr", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GradientUsageAttribute_Wrap.G_hdr
#endif
                    }},
                    {"colorSpace", new MemberRegisterInfo { Name = "colorSpace", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GradientUsageAttribute_Wrap.G_colorSpace
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_DelayedAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_DelayedAttribute_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_NonReorderableAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_NonReorderableAttribute_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_PropertyName_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_PropertyName_Wrap.Constructor
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PropertyName_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PropertyName_Wrap.O_op_Inequality
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PropertyName_Wrap.M_GetHashCode
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PropertyName_Wrap.M_Equals
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PropertyName_Wrap.M_ToString
#endif
                    }},
                    {"IsNullOrEmpty_static", new MemberRegisterInfo { Name = "IsNullOrEmpty", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PropertyName_Wrap.F_IsNullOrEmpty
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Random_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"InitState_static", new MemberRegisterInfo { Name = "InitState", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Random_Wrap.F_InitState
#endif
                    }},
                    {"Range_static", new MemberRegisterInfo { Name = "Range", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Random_Wrap.F_Range
#endif
                    }},
                    {"ColorHSV_static", new MemberRegisterInfo { Name = "ColorHSV", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Random_Wrap.F_ColorHSV
#endif
                    }},
                    {"state_static", new MemberRegisterInfo { Name = "state", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Random_Wrap.G_state, PropertySetter = UnityEngine_Random_Wrap.S_state
#endif
                    }},
                    {"value_static", new MemberRegisterInfo { Name = "value", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Random_Wrap.G_value
#endif
                    }},
                    {"insideUnitSphere_static", new MemberRegisterInfo { Name = "insideUnitSphere", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Random_Wrap.G_insideUnitSphere
#endif
                    }},
                    {"insideUnitCircle_static", new MemberRegisterInfo { Name = "insideUnitCircle", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Random_Wrap.G_insideUnitCircle
#endif
                    }},
                    {"onUnitSphere_static", new MemberRegisterInfo { Name = "onUnitSphere", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Random_Wrap.G_onUnitSphere
#endif
                    }},
                    {"rotation_static", new MemberRegisterInfo { Name = "rotation", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Random_Wrap.G_rotation
#endif
                    }},
                    {"rotationUniform_static", new MemberRegisterInfo { Name = "rotationUniform", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Random_Wrap.G_rotationUniform
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Random_State_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Random_State_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ResourceRequest_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ResourceRequest_Wrap.Constructor
#endif
                    }},
                    {"asset", new MemberRegisterInfo { Name = "asset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ResourceRequest_Wrap.G_asset
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ResourcesAPI_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"overrideAPI_static", new MemberRegisterInfo { Name = "overrideAPI", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ResourcesAPI_Wrap.G_overrideAPI, PropertySetter = UnityEngine_ResourcesAPI_Wrap.S_overrideAPI
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Resources_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Resources_Wrap.Constructor
#endif
                    }},
                    {"FindObjectsOfTypeAll_static", new MemberRegisterInfo { Name = "FindObjectsOfTypeAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Resources_Wrap.F_FindObjectsOfTypeAll
#endif
                    }},
                    {"Load_static", new MemberRegisterInfo { Name = "Load", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Resources_Wrap.F_Load
#endif
                    }},
                    {"LoadAsync_static", new MemberRegisterInfo { Name = "LoadAsync", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Resources_Wrap.F_LoadAsync
#endif
                    }},
                    {"LoadAll_static", new MemberRegisterInfo { Name = "LoadAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Resources_Wrap.F_LoadAll
#endif
                    }},
                    {"GetBuiltinResource_static", new MemberRegisterInfo { Name = "GetBuiltinResource", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Resources_Wrap.F_GetBuiltinResource
#endif
                    }},
                    {"UnloadAsset_static", new MemberRegisterInfo { Name = "UnloadAsset", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Resources_Wrap.F_UnloadAsset
#endif
                    }},
                    {"UnloadUnusedAssets_static", new MemberRegisterInfo { Name = "UnloadUnusedAssets", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Resources_Wrap.F_UnloadUnusedAssets
#endif
                    }},
                    {"InstanceIDToObject_static", new MemberRegisterInfo { Name = "InstanceIDToObject", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Resources_Wrap.F_InstanceIDToObject
#endif
                    }},
                    {"InstanceIDToObjectList_static", new MemberRegisterInfo { Name = "InstanceIDToObjectList", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Resources_Wrap.F_InstanceIDToObjectList
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AsyncOperation_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AsyncOperation_Wrap.Constructor
#endif
                    }},
                    {"add_completed", new MemberRegisterInfo { Name = "add_completed", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AsyncOperation_Wrap.A_completed
#endif
                    }},
                    {"remove_completed", new MemberRegisterInfo { Name = "remove_completed", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_AsyncOperation_Wrap.R_completed
#endif
                    }},
                    {"isDone", new MemberRegisterInfo { Name = "isDone", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AsyncOperation_Wrap.G_isDone
#endif
                    }},
                    {"progress", new MemberRegisterInfo { Name = "progress", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AsyncOperation_Wrap.G_progress
#endif
                    }},
                    {"priority", new MemberRegisterInfo { Name = "priority", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AsyncOperation_Wrap.G_priority, PropertySetter = UnityEngine_AsyncOperation_Wrap.S_priority
#endif
                    }},
                    {"allowSceneActivation", new MemberRegisterInfo { Name = "allowSceneActivation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AsyncOperation_Wrap.G_allowSceneActivation, PropertySetter = UnityEngine_AsyncOperation_Wrap.S_allowSceneActivation
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_DisallowMultipleComponent_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_DisallowMultipleComponent_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RequireComponent_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_RequireComponent_Wrap.Constructor
#endif
                    }},
                    {"m_Type0", new MemberRegisterInfo { Name = "m_Type0", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RequireComponent_Wrap.G_m_Type0, PropertySetter = UnityEngine_RequireComponent_Wrap.S_m_Type0
#endif
                    }},
                    {"m_Type1", new MemberRegisterInfo { Name = "m_Type1", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RequireComponent_Wrap.G_m_Type1, PropertySetter = UnityEngine_RequireComponent_Wrap.S_m_Type1
#endif
                    }},
                    {"m_Type2", new MemberRegisterInfo { Name = "m_Type2", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RequireComponent_Wrap.G_m_Type2, PropertySetter = UnityEngine_RequireComponent_Wrap.S_m_Type2
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AddComponentMenu_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AddComponentMenu_Wrap.Constructor
#endif
                    }},
                    {"componentMenu", new MemberRegisterInfo { Name = "componentMenu", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AddComponentMenu_Wrap.G_componentMenu
#endif
                    }},
                    {"componentOrder", new MemberRegisterInfo { Name = "componentOrder", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AddComponentMenu_Wrap.G_componentOrder
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CreateAssetMenuAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_CreateAssetMenuAttribute_Wrap.Constructor
#endif
                    }},
                    {"menuName", new MemberRegisterInfo { Name = "menuName", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CreateAssetMenuAttribute_Wrap.G_menuName, PropertySetter = UnityEngine_CreateAssetMenuAttribute_Wrap.S_menuName
#endif
                    }},
                    {"fileName", new MemberRegisterInfo { Name = "fileName", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CreateAssetMenuAttribute_Wrap.G_fileName, PropertySetter = UnityEngine_CreateAssetMenuAttribute_Wrap.S_fileName
#endif
                    }},
                    {"order", new MemberRegisterInfo { Name = "order", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CreateAssetMenuAttribute_Wrap.G_order, PropertySetter = UnityEngine_CreateAssetMenuAttribute_Wrap.S_order
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ContextMenu_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ContextMenu_Wrap.Constructor
#endif
                    }},
                    {"menuItem", new MemberRegisterInfo { Name = "menuItem", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContextMenu_Wrap.G_menuItem
#endif
                    }},
                    {"validate", new MemberRegisterInfo { Name = "validate", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContextMenu_Wrap.G_validate
#endif
                    }},
                    {"priority", new MemberRegisterInfo { Name = "priority", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContextMenu_Wrap.G_priority
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ExecuteInEditMode_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ExecuteInEditMode_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ExecuteAlways_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ExecuteAlways_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_HideInInspector_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_HideInInspector_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_HelpURLAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_HelpURLAttribute_Wrap.Constructor
#endif
                    }},
                    {"URL", new MemberRegisterInfo { Name = "URL", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HelpURLAttribute_Wrap.G_URL
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_DefaultExecutionOrder_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_DefaultExecutionOrder_Wrap.Constructor
#endif
                    }},
                    {"order", new MemberRegisterInfo { Name = "order", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_DefaultExecutionOrder_Wrap.G_order
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AssemblyIsEditorAssembly_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AssemblyIsEditorAssembly_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ExcludeFromPresetAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ExcludeFromPresetAttribute_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Coroutine_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CustomYieldInstruction_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"MoveNext", new MemberRegisterInfo { Name = "MoveNext", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CustomYieldInstruction_Wrap.M_MoveNext
#endif
                    }},
                    {"Reset", new MemberRegisterInfo { Name = "Reset", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CustomYieldInstruction_Wrap.M_Reset
#endif
                    }},
                    {"keepWaiting", new MemberRegisterInfo { Name = "keepWaiting", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomYieldInstruction_Wrap.G_keepWaiting
#endif
                    }},
                    {"Current", new MemberRegisterInfo { Name = "Current", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomYieldInstruction_Wrap.G_Current
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ExcludeFromObjectFactoryAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ExcludeFromObjectFactoryAttribute_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_LayerMask_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_LayerMask_Wrap.Constructor
#endif
                    }},
                    {"value", new MemberRegisterInfo { Name = "value", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LayerMask_Wrap.G_value, PropertySetter = UnityEngine_LayerMask_Wrap.S_value
#endif
                    }},
                    {"LayerToName_static", new MemberRegisterInfo { Name = "LayerToName", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LayerMask_Wrap.F_LayerToName
#endif
                    }},
                    {"NameToLayer_static", new MemberRegisterInfo { Name = "NameToLayer", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LayerMask_Wrap.F_NameToLayer
#endif
                    }},
                    {"GetMask_static", new MemberRegisterInfo { Name = "GetMask", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LayerMask_Wrap.F_GetMask
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RangeInt_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_RangeInt_Wrap.Constructor
#endif
                    }},
                    {"end", new MemberRegisterInfo { Name = "end", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RangeInt_Wrap.G_end
#endif
                    }},
                    {"start", new MemberRegisterInfo { Name = "start", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RangeInt_Wrap.G_start, PropertySetter = UnityEngine_RangeInt_Wrap.S_start
#endif
                    }},
                    {"length", new MemberRegisterInfo { Name = "length", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RangeInt_Wrap.G_length, PropertySetter = UnityEngine_RangeInt_Wrap.S_length
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RuntimeInitializeOnLoadMethodAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_RuntimeInitializeOnLoadMethodAttribute_Wrap.Constructor
#endif
                    }},
                    {"loadType", new MemberRegisterInfo { Name = "loadType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RuntimeInitializeOnLoadMethodAttribute_Wrap.G_loadType
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ScriptableObject_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ScriptableObject_Wrap.Constructor
#endif
                    }},
                    {"CreateInstance_static", new MemberRegisterInfo { Name = "CreateInstance", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ScriptableObject_Wrap.F_CreateInstance
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SelectionBaseAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SelectionBaseAttribute_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_StackTraceUtility_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"ExtractStackTrace_static", new MemberRegisterInfo { Name = "ExtractStackTrace", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_StackTraceUtility_Wrap.F_ExtractStackTrace
#endif
                    }},
                    {"ExtractStringFromException_static", new MemberRegisterInfo { Name = "ExtractStringFromException", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_StackTraceUtility_Wrap.F_ExtractStringFromException
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UnityException_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UnityException_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_MissingComponentException_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_MissingComponentException_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UnassignedReferenceException_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UnassignedReferenceException_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_MissingReferenceException_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_MissingReferenceException_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_TextAsset_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_TextAsset_Wrap.Constructor
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextAsset_Wrap.M_ToString
#endif
                    }},
                    {"bytes", new MemberRegisterInfo { Name = "bytes", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextAsset_Wrap.G_bytes
#endif
                    }},
                    {"text", new MemberRegisterInfo { Name = "text", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextAsset_Wrap.G_text
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_TrackedReference_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TrackedReference_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TrackedReference_Wrap.O_op_Inequality
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TrackedReference_Wrap.M_Equals
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TrackedReference_Wrap.M_GetHashCode
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UnityAPICompatibilityVersionAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UnityAPICompatibilityVersionAttribute_Wrap.Constructor
#endif
                    }},
                    {"version", new MemberRegisterInfo { Name = "version", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UnityAPICompatibilityVersionAttribute_Wrap.G_version
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_WaitForEndOfFrame_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_WaitForEndOfFrame_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_WaitForFixedUpdate_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_WaitForFixedUpdate_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_WaitForSeconds_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_WaitForSeconds_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_WaitForSecondsRealtime_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_WaitForSecondsRealtime_Wrap.Constructor
#endif
                    }},
                    {"Reset", new MemberRegisterInfo { Name = "Reset", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_WaitForSecondsRealtime_Wrap.M_Reset
#endif
                    }},
                    {"waitTime", new MemberRegisterInfo { Name = "waitTime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WaitForSecondsRealtime_Wrap.G_waitTime, PropertySetter = UnityEngine_WaitForSecondsRealtime_Wrap.S_waitTime
#endif
                    }},
                    {"keepWaiting", new MemberRegisterInfo { Name = "keepWaiting", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WaitForSecondsRealtime_Wrap.G_keepWaiting
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_WaitUntil_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_WaitUntil_Wrap.Constructor
#endif
                    }},
                    {"keepWaiting", new MemberRegisterInfo { Name = "keepWaiting", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WaitUntil_Wrap.G_keepWaiting
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_WaitWhile_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_WaitWhile_Wrap.Constructor
#endif
                    }},
                    {"keepWaiting", new MemberRegisterInfo { Name = "keepWaiting", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WaitWhile_Wrap.G_keepWaiting
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_YieldInstruction_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_YieldInstruction_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Security_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Security_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Types_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SerializeField_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SerializeField_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SerializeReference_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SerializeReference_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_PreferBinarySerialization_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_PreferBinarySerialization_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ISerializationCallbackReceiver_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"OnBeforeSerialize", new MemberRegisterInfo { Name = "OnBeforeSerialize", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ISerializationCallbackReceiver_Wrap.M_OnBeforeSerialize
#endif
                    }},
                    {"OnAfterDeserialize", new MemberRegisterInfo { Name = "OnAfterDeserialize", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ISerializationCallbackReceiver_Wrap.M_OnAfterDeserialize
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ComputeBuffer_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ComputeBuffer_Wrap.Constructor
#endif
                    }},
                    {"Dispose", new MemberRegisterInfo { Name = "Dispose", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeBuffer_Wrap.M_Dispose
#endif
                    }},
                    {"Release", new MemberRegisterInfo { Name = "Release", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeBuffer_Wrap.M_Release
#endif
                    }},
                    {"IsValid", new MemberRegisterInfo { Name = "IsValid", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeBuffer_Wrap.M_IsValid
#endif
                    }},
                    {"SetData", new MemberRegisterInfo { Name = "SetData", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeBuffer_Wrap.M_SetData
#endif
                    }},
                    {"GetData", new MemberRegisterInfo { Name = "GetData", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeBuffer_Wrap.M_GetData
#endif
                    }},
                    {"SetCounterValue", new MemberRegisterInfo { Name = "SetCounterValue", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeBuffer_Wrap.M_SetCounterValue
#endif
                    }},
                    {"GetNativeBufferPtr", new MemberRegisterInfo { Name = "GetNativeBufferPtr", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeBuffer_Wrap.M_GetNativeBufferPtr
#endif
                    }},
                    {"count", new MemberRegisterInfo { Name = "count", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ComputeBuffer_Wrap.G_count
#endif
                    }},
                    {"stride", new MemberRegisterInfo { Name = "stride", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ComputeBuffer_Wrap.G_stride
#endif
                    }},
                    {"name", new MemberRegisterInfo { Name = "name", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertySetter = UnityEngine_ComputeBuffer_Wrap.S_name
#endif
                    }},
                    {"CopyCount_static", new MemberRegisterInfo { Name = "CopyCount", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeBuffer_Wrap.F_CopyCount
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ComputeShader_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"FindKernel", new MemberRegisterInfo { Name = "FindKernel", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeShader_Wrap.M_FindKernel
#endif
                    }},
                    {"HasKernel", new MemberRegisterInfo { Name = "HasKernel", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeShader_Wrap.M_HasKernel
#endif
                    }},
                    {"SetFloat", new MemberRegisterInfo { Name = "SetFloat", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeShader_Wrap.M_SetFloat
#endif
                    }},
                    {"SetInt", new MemberRegisterInfo { Name = "SetInt", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeShader_Wrap.M_SetInt
#endif
                    }},
                    {"SetVector", new MemberRegisterInfo { Name = "SetVector", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeShader_Wrap.M_SetVector
#endif
                    }},
                    {"SetMatrix", new MemberRegisterInfo { Name = "SetMatrix", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeShader_Wrap.M_SetMatrix
#endif
                    }},
                    {"SetVectorArray", new MemberRegisterInfo { Name = "SetVectorArray", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeShader_Wrap.M_SetVectorArray
#endif
                    }},
                    {"SetMatrixArray", new MemberRegisterInfo { Name = "SetMatrixArray", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeShader_Wrap.M_SetMatrixArray
#endif
                    }},
                    {"SetTexture", new MemberRegisterInfo { Name = "SetTexture", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeShader_Wrap.M_SetTexture
#endif
                    }},
                    {"SetTextureFromGlobal", new MemberRegisterInfo { Name = "SetTextureFromGlobal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeShader_Wrap.M_SetTextureFromGlobal
#endif
                    }},
                    {"SetBuffer", new MemberRegisterInfo { Name = "SetBuffer", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeShader_Wrap.M_SetBuffer
#endif
                    }},
                    {"GetKernelThreadGroupSizes", new MemberRegisterInfo { Name = "GetKernelThreadGroupSizes", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeShader_Wrap.M_GetKernelThreadGroupSizes
#endif
                    }},
                    {"Dispatch", new MemberRegisterInfo { Name = "Dispatch", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeShader_Wrap.M_Dispatch
#endif
                    }},
                    {"EnableKeyword", new MemberRegisterInfo { Name = "EnableKeyword", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeShader_Wrap.M_EnableKeyword
#endif
                    }},
                    {"DisableKeyword", new MemberRegisterInfo { Name = "DisableKeyword", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeShader_Wrap.M_DisableKeyword
#endif
                    }},
                    {"IsKeywordEnabled", new MemberRegisterInfo { Name = "IsKeywordEnabled", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeShader_Wrap.M_IsKeywordEnabled
#endif
                    }},
                    {"SetFloats", new MemberRegisterInfo { Name = "SetFloats", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeShader_Wrap.M_SetFloats
#endif
                    }},
                    {"SetInts", new MemberRegisterInfo { Name = "SetInts", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeShader_Wrap.M_SetInts
#endif
                    }},
                    {"SetBool", new MemberRegisterInfo { Name = "SetBool", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeShader_Wrap.M_SetBool
#endif
                    }},
                    {"SetConstantBuffer", new MemberRegisterInfo { Name = "SetConstantBuffer", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeShader_Wrap.M_SetConstantBuffer
#endif
                    }},
                    {"DispatchIndirect", new MemberRegisterInfo { Name = "DispatchIndirect", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ComputeShader_Wrap.M_DispatchIndirect
#endif
                    }},
                    {"shaderKeywords", new MemberRegisterInfo { Name = "shaderKeywords", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ComputeShader_Wrap.G_shaderKeywords, PropertySetter = UnityEngine_ComputeShader_Wrap.S_shaderKeywords
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ShaderVariantCollection_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ShaderVariantCollection_Wrap.Constructor
#endif
                    }},
                    {"Clear", new MemberRegisterInfo { Name = "Clear", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ShaderVariantCollection_Wrap.M_Clear
#endif
                    }},
                    {"WarmUp", new MemberRegisterInfo { Name = "WarmUp", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ShaderVariantCollection_Wrap.M_WarmUp
#endif
                    }},
                    {"Add", new MemberRegisterInfo { Name = "Add", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ShaderVariantCollection_Wrap.M_Add
#endif
                    }},
                    {"Remove", new MemberRegisterInfo { Name = "Remove", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ShaderVariantCollection_Wrap.M_Remove
#endif
                    }},
                    {"Contains", new MemberRegisterInfo { Name = "Contains", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ShaderVariantCollection_Wrap.M_Contains
#endif
                    }},
                    {"shaderCount", new MemberRegisterInfo { Name = "shaderCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ShaderVariantCollection_Wrap.G_shaderCount
#endif
                    }},
                    {"variantCount", new MemberRegisterInfo { Name = "variantCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ShaderVariantCollection_Wrap.G_variantCount
#endif
                    }},
                    {"isWarmedUp", new MemberRegisterInfo { Name = "isWarmedUp", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ShaderVariantCollection_Wrap.G_isWarmedUp
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ShaderVariantCollection_ShaderVariant_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ShaderVariantCollection_ShaderVariant_Wrap.Constructor
#endif
                    }},
                    {"shader", new MemberRegisterInfo { Name = "shader", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ShaderVariantCollection_ShaderVariant_Wrap.G_shader, PropertySetter = UnityEngine_ShaderVariantCollection_ShaderVariant_Wrap.S_shader
#endif
                    }},
                    {"passType", new MemberRegisterInfo { Name = "passType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ShaderVariantCollection_ShaderVariant_Wrap.G_passType, PropertySetter = UnityEngine_ShaderVariantCollection_ShaderVariant_Wrap.S_passType
#endif
                    }},
                    {"keywords", new MemberRegisterInfo { Name = "keywords", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ShaderVariantCollection_ShaderVariant_Wrap.G_keywords, PropertySetter = UnityEngine_ShaderVariantCollection_ShaderVariant_Wrap.S_keywords
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Snapping_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"Snap_static", new MemberRegisterInfo { Name = "Snap", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Snapping_Wrap.F_Snap
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_StaticBatchingUtility_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_StaticBatchingUtility_Wrap.Constructor
#endif
                    }},
                    {"Combine_static", new MemberRegisterInfo { Name = "Combine", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_StaticBatchingUtility_Wrap.F_Combine
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SystemInfo_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SystemInfo_Wrap.Constructor
#endif
                    }},
                    {"SupportsRenderTextureFormat_static", new MemberRegisterInfo { Name = "SupportsRenderTextureFormat", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SystemInfo_Wrap.F_SupportsRenderTextureFormat
#endif
                    }},
                    {"SupportsBlendingOnRenderTextureFormat_static", new MemberRegisterInfo { Name = "SupportsBlendingOnRenderTextureFormat", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SystemInfo_Wrap.F_SupportsBlendingOnRenderTextureFormat
#endif
                    }},
                    {"SupportsTextureFormat_static", new MemberRegisterInfo { Name = "SupportsTextureFormat", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SystemInfo_Wrap.F_SupportsTextureFormat
#endif
                    }},
                    {"SupportsVertexAttributeFormat_static", new MemberRegisterInfo { Name = "SupportsVertexAttributeFormat", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SystemInfo_Wrap.F_SupportsVertexAttributeFormat
#endif
                    }},
                    {"IsFormatSupported_static", new MemberRegisterInfo { Name = "IsFormatSupported", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SystemInfo_Wrap.F_IsFormatSupported
#endif
                    }},
                    {"GetCompatibleFormat_static", new MemberRegisterInfo { Name = "GetCompatibleFormat", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SystemInfo_Wrap.F_GetCompatibleFormat
#endif
                    }},
                    {"GetGraphicsFormat_static", new MemberRegisterInfo { Name = "GetGraphicsFormat", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SystemInfo_Wrap.F_GetGraphicsFormat
#endif
                    }},
                    {"GetRenderTextureSupportedMSAASampleCount_static", new MemberRegisterInfo { Name = "GetRenderTextureSupportedMSAASampleCount", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SystemInfo_Wrap.F_GetRenderTextureSupportedMSAASampleCount
#endif
                    }},
                    {"batteryLevel_static", new MemberRegisterInfo { Name = "batteryLevel", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_batteryLevel
#endif
                    }},
                    {"batteryStatus_static", new MemberRegisterInfo { Name = "batteryStatus", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_batteryStatus
#endif
                    }},
                    {"operatingSystem_static", new MemberRegisterInfo { Name = "operatingSystem", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_operatingSystem
#endif
                    }},
                    {"operatingSystemFamily_static", new MemberRegisterInfo { Name = "operatingSystemFamily", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_operatingSystemFamily
#endif
                    }},
                    {"processorType_static", new MemberRegisterInfo { Name = "processorType", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_processorType
#endif
                    }},
                    {"processorFrequency_static", new MemberRegisterInfo { Name = "processorFrequency", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_processorFrequency
#endif
                    }},
                    {"processorCount_static", new MemberRegisterInfo { Name = "processorCount", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_processorCount
#endif
                    }},
                    {"systemMemorySize_static", new MemberRegisterInfo { Name = "systemMemorySize", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_systemMemorySize
#endif
                    }},
                    {"deviceUniqueIdentifier_static", new MemberRegisterInfo { Name = "deviceUniqueIdentifier", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_deviceUniqueIdentifier
#endif
                    }},
                    {"deviceName_static", new MemberRegisterInfo { Name = "deviceName", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_deviceName
#endif
                    }},
                    {"deviceModel_static", new MemberRegisterInfo { Name = "deviceModel", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_deviceModel
#endif
                    }},
                    {"supportsAccelerometer_static", new MemberRegisterInfo { Name = "supportsAccelerometer", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsAccelerometer
#endif
                    }},
                    {"supportsGyroscope_static", new MemberRegisterInfo { Name = "supportsGyroscope", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsGyroscope
#endif
                    }},
                    {"supportsLocationService_static", new MemberRegisterInfo { Name = "supportsLocationService", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsLocationService
#endif
                    }},
                    {"supportsVibration_static", new MemberRegisterInfo { Name = "supportsVibration", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsVibration
#endif
                    }},
                    {"supportsAudio_static", new MemberRegisterInfo { Name = "supportsAudio", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsAudio
#endif
                    }},
                    {"deviceType_static", new MemberRegisterInfo { Name = "deviceType", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_deviceType
#endif
                    }},
                    {"graphicsMemorySize_static", new MemberRegisterInfo { Name = "graphicsMemorySize", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_graphicsMemorySize
#endif
                    }},
                    {"graphicsDeviceName_static", new MemberRegisterInfo { Name = "graphicsDeviceName", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_graphicsDeviceName
#endif
                    }},
                    {"graphicsDeviceVendor_static", new MemberRegisterInfo { Name = "graphicsDeviceVendor", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_graphicsDeviceVendor
#endif
                    }},
                    {"graphicsDeviceID_static", new MemberRegisterInfo { Name = "graphicsDeviceID", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_graphicsDeviceID
#endif
                    }},
                    {"graphicsDeviceVendorID_static", new MemberRegisterInfo { Name = "graphicsDeviceVendorID", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_graphicsDeviceVendorID
#endif
                    }},
                    {"graphicsDeviceType_static", new MemberRegisterInfo { Name = "graphicsDeviceType", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_graphicsDeviceType
#endif
                    }},
                    {"graphicsUVStartsAtTop_static", new MemberRegisterInfo { Name = "graphicsUVStartsAtTop", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_graphicsUVStartsAtTop
#endif
                    }},
                    {"graphicsDeviceVersion_static", new MemberRegisterInfo { Name = "graphicsDeviceVersion", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_graphicsDeviceVersion
#endif
                    }},
                    {"graphicsShaderLevel_static", new MemberRegisterInfo { Name = "graphicsShaderLevel", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_graphicsShaderLevel
#endif
                    }},
                    {"graphicsMultiThreaded_static", new MemberRegisterInfo { Name = "graphicsMultiThreaded", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_graphicsMultiThreaded
#endif
                    }},
                    {"renderingThreadingMode_static", new MemberRegisterInfo { Name = "renderingThreadingMode", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_renderingThreadingMode
#endif
                    }},
                    {"hasHiddenSurfaceRemovalOnGPU_static", new MemberRegisterInfo { Name = "hasHiddenSurfaceRemovalOnGPU", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_hasHiddenSurfaceRemovalOnGPU
#endif
                    }},
                    {"hasDynamicUniformArrayIndexingInFragmentShaders_static", new MemberRegisterInfo { Name = "hasDynamicUniformArrayIndexingInFragmentShaders", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_hasDynamicUniformArrayIndexingInFragmentShaders
#endif
                    }},
                    {"supportsShadows_static", new MemberRegisterInfo { Name = "supportsShadows", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsShadows
#endif
                    }},
                    {"supportsRawShadowDepthSampling_static", new MemberRegisterInfo { Name = "supportsRawShadowDepthSampling", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsRawShadowDepthSampling
#endif
                    }},
                    {"supportsMotionVectors_static", new MemberRegisterInfo { Name = "supportsMotionVectors", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsMotionVectors
#endif
                    }},
                    {"supports3DTextures_static", new MemberRegisterInfo { Name = "supports3DTextures", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supports3DTextures
#endif
                    }},
                    {"supportsCompressed3DTextures_static", new MemberRegisterInfo { Name = "supportsCompressed3DTextures", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsCompressed3DTextures
#endif
                    }},
                    {"supports2DArrayTextures_static", new MemberRegisterInfo { Name = "supports2DArrayTextures", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supports2DArrayTextures
#endif
                    }},
                    {"supports3DRenderTextures_static", new MemberRegisterInfo { Name = "supports3DRenderTextures", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supports3DRenderTextures
#endif
                    }},
                    {"supportsCubemapArrayTextures_static", new MemberRegisterInfo { Name = "supportsCubemapArrayTextures", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsCubemapArrayTextures
#endif
                    }},
                    {"copyTextureSupport_static", new MemberRegisterInfo { Name = "copyTextureSupport", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_copyTextureSupport
#endif
                    }},
                    {"supportsComputeShaders_static", new MemberRegisterInfo { Name = "supportsComputeShaders", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsComputeShaders
#endif
                    }},
                    {"supportsConservativeRaster_static", new MemberRegisterInfo { Name = "supportsConservativeRaster", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsConservativeRaster
#endif
                    }},
                    {"supportsMultiview_static", new MemberRegisterInfo { Name = "supportsMultiview", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsMultiview
#endif
                    }},
                    {"supportsGeometryShaders_static", new MemberRegisterInfo { Name = "supportsGeometryShaders", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsGeometryShaders
#endif
                    }},
                    {"supportsTessellationShaders_static", new MemberRegisterInfo { Name = "supportsTessellationShaders", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsTessellationShaders
#endif
                    }},
                    {"supportsRenderTargetArrayIndexFromVertexShader_static", new MemberRegisterInfo { Name = "supportsRenderTargetArrayIndexFromVertexShader", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsRenderTargetArrayIndexFromVertexShader
#endif
                    }},
                    {"supportsInstancing_static", new MemberRegisterInfo { Name = "supportsInstancing", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsInstancing
#endif
                    }},
                    {"supportsHardwareQuadTopology_static", new MemberRegisterInfo { Name = "supportsHardwareQuadTopology", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsHardwareQuadTopology
#endif
                    }},
                    {"supports32bitsIndexBuffer_static", new MemberRegisterInfo { Name = "supports32bitsIndexBuffer", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supports32bitsIndexBuffer
#endif
                    }},
                    {"supportsSparseTextures_static", new MemberRegisterInfo { Name = "supportsSparseTextures", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsSparseTextures
#endif
                    }},
                    {"supportedRenderTargetCount_static", new MemberRegisterInfo { Name = "supportedRenderTargetCount", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportedRenderTargetCount
#endif
                    }},
                    {"supportsSeparatedRenderTargetsBlend_static", new MemberRegisterInfo { Name = "supportsSeparatedRenderTargetsBlend", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsSeparatedRenderTargetsBlend
#endif
                    }},
                    {"supportedRandomWriteTargetCount_static", new MemberRegisterInfo { Name = "supportedRandomWriteTargetCount", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportedRandomWriteTargetCount
#endif
                    }},
                    {"supportsMultisampledTextures_static", new MemberRegisterInfo { Name = "supportsMultisampledTextures", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsMultisampledTextures
#endif
                    }},
                    {"supportsMultisampled2DArrayTextures_static", new MemberRegisterInfo { Name = "supportsMultisampled2DArrayTextures", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsMultisampled2DArrayTextures
#endif
                    }},
                    {"supportsMultisampleAutoResolve_static", new MemberRegisterInfo { Name = "supportsMultisampleAutoResolve", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsMultisampleAutoResolve
#endif
                    }},
                    {"supportsTextureWrapMirrorOnce_static", new MemberRegisterInfo { Name = "supportsTextureWrapMirrorOnce", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsTextureWrapMirrorOnce
#endif
                    }},
                    {"usesReversedZBuffer_static", new MemberRegisterInfo { Name = "usesReversedZBuffer", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_usesReversedZBuffer
#endif
                    }},
                    {"npotSupport_static", new MemberRegisterInfo { Name = "npotSupport", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_npotSupport
#endif
                    }},
                    {"maxTextureSize_static", new MemberRegisterInfo { Name = "maxTextureSize", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_maxTextureSize
#endif
                    }},
                    {"maxTexture3DSize_static", new MemberRegisterInfo { Name = "maxTexture3DSize", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_maxTexture3DSize
#endif
                    }},
                    {"maxTextureArraySlices_static", new MemberRegisterInfo { Name = "maxTextureArraySlices", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_maxTextureArraySlices
#endif
                    }},
                    {"maxCubemapSize_static", new MemberRegisterInfo { Name = "maxCubemapSize", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_maxCubemapSize
#endif
                    }},
                    {"maxComputeBufferInputsVertex_static", new MemberRegisterInfo { Name = "maxComputeBufferInputsVertex", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_maxComputeBufferInputsVertex
#endif
                    }},
                    {"maxComputeBufferInputsFragment_static", new MemberRegisterInfo { Name = "maxComputeBufferInputsFragment", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_maxComputeBufferInputsFragment
#endif
                    }},
                    {"maxComputeBufferInputsGeometry_static", new MemberRegisterInfo { Name = "maxComputeBufferInputsGeometry", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_maxComputeBufferInputsGeometry
#endif
                    }},
                    {"maxComputeBufferInputsDomain_static", new MemberRegisterInfo { Name = "maxComputeBufferInputsDomain", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_maxComputeBufferInputsDomain
#endif
                    }},
                    {"maxComputeBufferInputsHull_static", new MemberRegisterInfo { Name = "maxComputeBufferInputsHull", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_maxComputeBufferInputsHull
#endif
                    }},
                    {"maxComputeBufferInputsCompute_static", new MemberRegisterInfo { Name = "maxComputeBufferInputsCompute", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_maxComputeBufferInputsCompute
#endif
                    }},
                    {"maxComputeWorkGroupSize_static", new MemberRegisterInfo { Name = "maxComputeWorkGroupSize", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_maxComputeWorkGroupSize
#endif
                    }},
                    {"maxComputeWorkGroupSizeX_static", new MemberRegisterInfo { Name = "maxComputeWorkGroupSizeX", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_maxComputeWorkGroupSizeX
#endif
                    }},
                    {"maxComputeWorkGroupSizeY_static", new MemberRegisterInfo { Name = "maxComputeWorkGroupSizeY", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_maxComputeWorkGroupSizeY
#endif
                    }},
                    {"maxComputeWorkGroupSizeZ_static", new MemberRegisterInfo { Name = "maxComputeWorkGroupSizeZ", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_maxComputeWorkGroupSizeZ
#endif
                    }},
                    {"computeSubGroupSize_static", new MemberRegisterInfo { Name = "computeSubGroupSize", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_computeSubGroupSize
#endif
                    }},
                    {"supportsAsyncCompute_static", new MemberRegisterInfo { Name = "supportsAsyncCompute", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsAsyncCompute
#endif
                    }},
                    {"supportsGpuRecorder_static", new MemberRegisterInfo { Name = "supportsGpuRecorder", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsGpuRecorder
#endif
                    }},
                    {"supportsGraphicsFence_static", new MemberRegisterInfo { Name = "supportsGraphicsFence", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsGraphicsFence
#endif
                    }},
                    {"supportsAsyncGPUReadback_static", new MemberRegisterInfo { Name = "supportsAsyncGPUReadback", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsAsyncGPUReadback
#endif
                    }},
                    {"supportsRayTracing_static", new MemberRegisterInfo { Name = "supportsRayTracing", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsRayTracing
#endif
                    }},
                    {"supportsSetConstantBuffer_static", new MemberRegisterInfo { Name = "supportsSetConstantBuffer", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsSetConstantBuffer
#endif
                    }},
                    {"constantBufferOffsetAlignment_static", new MemberRegisterInfo { Name = "constantBufferOffsetAlignment", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_constantBufferOffsetAlignment
#endif
                    }},
                    {"hasMipMaxLevel_static", new MemberRegisterInfo { Name = "hasMipMaxLevel", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_hasMipMaxLevel
#endif
                    }},
                    {"supportsMipStreaming_static", new MemberRegisterInfo { Name = "supportsMipStreaming", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsMipStreaming
#endif
                    }},
                    {"usesLoadStoreActions_static", new MemberRegisterInfo { Name = "usesLoadStoreActions", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_usesLoadStoreActions
#endif
                    }},
                    {"hdrDisplaySupportFlags_static", new MemberRegisterInfo { Name = "hdrDisplaySupportFlags", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_hdrDisplaySupportFlags
#endif
                    }},
                    {"supportsStoreAndResolveAction_static", new MemberRegisterInfo { Name = "supportsStoreAndResolveAction", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_supportsStoreAndResolveAction
#endif
                    }},
                    {"unsupportedIdentifier_static", new MemberRegisterInfo { Name = "unsupportedIdentifier", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SystemInfo_Wrap.G_unsupportedIdentifier
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_TouchScreenKeyboard_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_TouchScreenKeyboard_Wrap.Constructor
#endif
                    }},
                    {"text", new MemberRegisterInfo { Name = "text", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TouchScreenKeyboard_Wrap.G_text, PropertySetter = UnityEngine_TouchScreenKeyboard_Wrap.S_text
#endif
                    }},
                    {"active", new MemberRegisterInfo { Name = "active", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TouchScreenKeyboard_Wrap.G_active, PropertySetter = UnityEngine_TouchScreenKeyboard_Wrap.S_active
#endif
                    }},
                    {"status", new MemberRegisterInfo { Name = "status", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TouchScreenKeyboard_Wrap.G_status
#endif
                    }},
                    {"characterLimit", new MemberRegisterInfo { Name = "characterLimit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TouchScreenKeyboard_Wrap.G_characterLimit, PropertySetter = UnityEngine_TouchScreenKeyboard_Wrap.S_characterLimit
#endif
                    }},
                    {"canGetSelection", new MemberRegisterInfo { Name = "canGetSelection", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TouchScreenKeyboard_Wrap.G_canGetSelection
#endif
                    }},
                    {"canSetSelection", new MemberRegisterInfo { Name = "canSetSelection", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TouchScreenKeyboard_Wrap.G_canSetSelection
#endif
                    }},
                    {"selection", new MemberRegisterInfo { Name = "selection", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TouchScreenKeyboard_Wrap.G_selection, PropertySetter = UnityEngine_TouchScreenKeyboard_Wrap.S_selection
#endif
                    }},
                    {"type", new MemberRegisterInfo { Name = "type", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TouchScreenKeyboard_Wrap.G_type
#endif
                    }},
                    {"targetDisplay", new MemberRegisterInfo { Name = "targetDisplay", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TouchScreenKeyboard_Wrap.G_targetDisplay, PropertySetter = UnityEngine_TouchScreenKeyboard_Wrap.S_targetDisplay
#endif
                    }},
                    {"Open_static", new MemberRegisterInfo { Name = "Open", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TouchScreenKeyboard_Wrap.F_Open
#endif
                    }},
                    {"isSupported_static", new MemberRegisterInfo { Name = "isSupported", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TouchScreenKeyboard_Wrap.G_isSupported
#endif
                    }},
                    {"isInPlaceEditingAllowed_static", new MemberRegisterInfo { Name = "isInPlaceEditingAllowed", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TouchScreenKeyboard_Wrap.G_isInPlaceEditingAllowed
#endif
                    }},
                    {"hideInput_static", new MemberRegisterInfo { Name = "hideInput", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TouchScreenKeyboard_Wrap.G_hideInput, PropertySetter = UnityEngine_TouchScreenKeyboard_Wrap.S_hideInput
#endif
                    }},
                    {"area_static", new MemberRegisterInfo { Name = "area", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TouchScreenKeyboard_Wrap.G_area
#endif
                    }},
                    {"visible_static", new MemberRegisterInfo { Name = "visible", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TouchScreenKeyboard_Wrap.G_visible
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_TouchScreenKeyboard_Android_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_TouchScreenKeyboard_Android_Wrap.Constructor
#endif
                    }},
                    {"consumesOutsideTouches_static", new MemberRegisterInfo { Name = "consumesOutsideTouches", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TouchScreenKeyboard_Android_Wrap.G_consumesOutsideTouches, PropertySetter = UnityEngine_TouchScreenKeyboard_Android_Wrap.S_consumesOutsideTouches
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UnityEventQueueSystem_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UnityEventQueueSystem_Wrap.Constructor
#endif
                    }},
                    {"GenerateEventIdForPayload_static", new MemberRegisterInfo { Name = "GenerateEventIdForPayload", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UnityEventQueueSystem_Wrap.F_GenerateEventIdForPayload
#endif
                    }},
                    {"GetGlobalEventQueue_static", new MemberRegisterInfo { Name = "GetGlobalEventQueue", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UnityEventQueueSystem_Wrap.F_GetGlobalEventQueue
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Pose_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Pose_Wrap.Constructor
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Pose_Wrap.M_ToString
#endif
                    }},
                    {"GetTransformedBy", new MemberRegisterInfo { Name = "GetTransformedBy", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Pose_Wrap.M_GetTransformedBy
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Pose_Wrap.M_Equals
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Pose_Wrap.M_GetHashCode
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Pose_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Pose_Wrap.O_op_Inequality
#endif
                    }},
                    {"forward", new MemberRegisterInfo { Name = "forward", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Pose_Wrap.G_forward
#endif
                    }},
                    {"right", new MemberRegisterInfo { Name = "right", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Pose_Wrap.G_right
#endif
                    }},
                    {"up", new MemberRegisterInfo { Name = "up", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Pose_Wrap.G_up
#endif
                    }},
                    {"position", new MemberRegisterInfo { Name = "position", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Pose_Wrap.G_position, PropertySetter = UnityEngine_Pose_Wrap.S_position
#endif
                    }},
                    {"rotation", new MemberRegisterInfo { Name = "rotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Pose_Wrap.G_rotation, PropertySetter = UnityEngine_Pose_Wrap.S_rotation
#endif
                    }},
                    {"identity_static", new MemberRegisterInfo { Name = "identity", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Pose_Wrap.G_identity
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_DrivenRectTransformTracker_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_DrivenRectTransformTracker_Wrap.Constructor
#endif
                    }},
                    {"Add", new MemberRegisterInfo { Name = "Add", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_DrivenRectTransformTracker_Wrap.M_Add
#endif
                    }},
                    {"Clear", new MemberRegisterInfo { Name = "Clear", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_DrivenRectTransformTracker_Wrap.M_Clear
#endif
                    }},
                    {"StopRecordingUndo_static", new MemberRegisterInfo { Name = "StopRecordingUndo", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"StartRecordingUndo_static", new MemberRegisterInfo { Name = "StartRecordingUndo", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RectTransform_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_RectTransform_Wrap.Constructor
#endif
                    }},
                    {"ForceUpdateRectTransforms", new MemberRegisterInfo { Name = "ForceUpdateRectTransforms", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectTransform_Wrap.M_ForceUpdateRectTransforms
#endif
                    }},
                    {"GetLocalCorners", new MemberRegisterInfo { Name = "GetLocalCorners", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectTransform_Wrap.M_GetLocalCorners
#endif
                    }},
                    {"GetWorldCorners", new MemberRegisterInfo { Name = "GetWorldCorners", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectTransform_Wrap.M_GetWorldCorners
#endif
                    }},
                    {"SetInsetAndSizeFromParentEdge", new MemberRegisterInfo { Name = "SetInsetAndSizeFromParentEdge", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectTransform_Wrap.M_SetInsetAndSizeFromParentEdge
#endif
                    }},
                    {"SetSizeWithCurrentAnchors", new MemberRegisterInfo { Name = "SetSizeWithCurrentAnchors", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectTransform_Wrap.M_SetSizeWithCurrentAnchors
#endif
                    }},
                    {"add_reapplyDrivenProperties_static", new MemberRegisterInfo { Name = "add_reapplyDrivenProperties", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectTransform_Wrap.A_reapplyDrivenProperties
#endif
                    }},
                    {"remove_reapplyDrivenProperties_static", new MemberRegisterInfo { Name = "remove_reapplyDrivenProperties", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectTransform_Wrap.R_reapplyDrivenProperties
#endif
                    }},
                    {"rect", new MemberRegisterInfo { Name = "rect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectTransform_Wrap.G_rect
#endif
                    }},
                    {"anchorMin", new MemberRegisterInfo { Name = "anchorMin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectTransform_Wrap.G_anchorMin, PropertySetter = UnityEngine_RectTransform_Wrap.S_anchorMin
#endif
                    }},
                    {"anchorMax", new MemberRegisterInfo { Name = "anchorMax", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectTransform_Wrap.G_anchorMax, PropertySetter = UnityEngine_RectTransform_Wrap.S_anchorMax
#endif
                    }},
                    {"anchoredPosition", new MemberRegisterInfo { Name = "anchoredPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectTransform_Wrap.G_anchoredPosition, PropertySetter = UnityEngine_RectTransform_Wrap.S_anchoredPosition
#endif
                    }},
                    {"sizeDelta", new MemberRegisterInfo { Name = "sizeDelta", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectTransform_Wrap.G_sizeDelta, PropertySetter = UnityEngine_RectTransform_Wrap.S_sizeDelta
#endif
                    }},
                    {"pivot", new MemberRegisterInfo { Name = "pivot", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectTransform_Wrap.G_pivot, PropertySetter = UnityEngine_RectTransform_Wrap.S_pivot
#endif
                    }},
                    {"anchoredPosition3D", new MemberRegisterInfo { Name = "anchoredPosition3D", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectTransform_Wrap.G_anchoredPosition3D, PropertySetter = UnityEngine_RectTransform_Wrap.S_anchoredPosition3D
#endif
                    }},
                    {"offsetMin", new MemberRegisterInfo { Name = "offsetMin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectTransform_Wrap.G_offsetMin, PropertySetter = UnityEngine_RectTransform_Wrap.S_offsetMin
#endif
                    }},
                    {"offsetMax", new MemberRegisterInfo { Name = "offsetMax", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RectTransform_Wrap.G_offsetMax, PropertySetter = UnityEngine_RectTransform_Wrap.S_offsetMax
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SpriteRenderer_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SpriteRenderer_Wrap.Constructor
#endif
                    }},
                    {"sprite", new MemberRegisterInfo { Name = "sprite", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpriteRenderer_Wrap.G_sprite, PropertySetter = UnityEngine_SpriteRenderer_Wrap.S_sprite
#endif
                    }},
                    {"drawMode", new MemberRegisterInfo { Name = "drawMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpriteRenderer_Wrap.G_drawMode, PropertySetter = UnityEngine_SpriteRenderer_Wrap.S_drawMode
#endif
                    }},
                    {"size", new MemberRegisterInfo { Name = "size", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpriteRenderer_Wrap.G_size, PropertySetter = UnityEngine_SpriteRenderer_Wrap.S_size
#endif
                    }},
                    {"adaptiveModeThreshold", new MemberRegisterInfo { Name = "adaptiveModeThreshold", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpriteRenderer_Wrap.G_adaptiveModeThreshold, PropertySetter = UnityEngine_SpriteRenderer_Wrap.S_adaptiveModeThreshold
#endif
                    }},
                    {"tileMode", new MemberRegisterInfo { Name = "tileMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpriteRenderer_Wrap.G_tileMode, PropertySetter = UnityEngine_SpriteRenderer_Wrap.S_tileMode
#endif
                    }},
                    {"color", new MemberRegisterInfo { Name = "color", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpriteRenderer_Wrap.G_color, PropertySetter = UnityEngine_SpriteRenderer_Wrap.S_color
#endif
                    }},
                    {"maskInteraction", new MemberRegisterInfo { Name = "maskInteraction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpriteRenderer_Wrap.G_maskInteraction, PropertySetter = UnityEngine_SpriteRenderer_Wrap.S_maskInteraction
#endif
                    }},
                    {"flipX", new MemberRegisterInfo { Name = "flipX", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpriteRenderer_Wrap.G_flipX, PropertySetter = UnityEngine_SpriteRenderer_Wrap.S_flipX
#endif
                    }},
                    {"flipY", new MemberRegisterInfo { Name = "flipY", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpriteRenderer_Wrap.G_flipY, PropertySetter = UnityEngine_SpriteRenderer_Wrap.S_flipY
#endif
                    }},
                    {"spriteSortPoint", new MemberRegisterInfo { Name = "spriteSortPoint", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpriteRenderer_Wrap.G_spriteSortPoint, PropertySetter = UnityEngine_SpriteRenderer_Wrap.S_spriteSortPoint
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SecondarySpriteTexture_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SecondarySpriteTexture_Wrap.Constructor
#endif
                    }},
                    {"name", new MemberRegisterInfo { Name = "name", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SecondarySpriteTexture_Wrap.G_name, PropertySetter = UnityEngine_SecondarySpriteTexture_Wrap.S_name
#endif
                    }},
                    {"texture", new MemberRegisterInfo { Name = "texture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SecondarySpriteTexture_Wrap.G_texture, PropertySetter = UnityEngine_SecondarySpriteTexture_Wrap.S_texture
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Sprite_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"GetPhysicsShapeCount", new MemberRegisterInfo { Name = "GetPhysicsShapeCount", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Sprite_Wrap.M_GetPhysicsShapeCount
#endif
                    }},
                    {"GetPhysicsShapePointCount", new MemberRegisterInfo { Name = "GetPhysicsShapePointCount", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Sprite_Wrap.M_GetPhysicsShapePointCount
#endif
                    }},
                    {"GetPhysicsShape", new MemberRegisterInfo { Name = "GetPhysicsShape", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Sprite_Wrap.M_GetPhysicsShape
#endif
                    }},
                    {"OverridePhysicsShape", new MemberRegisterInfo { Name = "OverridePhysicsShape", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Sprite_Wrap.M_OverridePhysicsShape
#endif
                    }},
                    {"OverrideGeometry", new MemberRegisterInfo { Name = "OverrideGeometry", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Sprite_Wrap.M_OverrideGeometry
#endif
                    }},
                    {"bounds", new MemberRegisterInfo { Name = "bounds", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Sprite_Wrap.G_bounds
#endif
                    }},
                    {"rect", new MemberRegisterInfo { Name = "rect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Sprite_Wrap.G_rect
#endif
                    }},
                    {"border", new MemberRegisterInfo { Name = "border", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Sprite_Wrap.G_border
#endif
                    }},
                    {"texture", new MemberRegisterInfo { Name = "texture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Sprite_Wrap.G_texture
#endif
                    }},
                    {"pixelsPerUnit", new MemberRegisterInfo { Name = "pixelsPerUnit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Sprite_Wrap.G_pixelsPerUnit
#endif
                    }},
                    {"spriteAtlasTextureScale", new MemberRegisterInfo { Name = "spriteAtlasTextureScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Sprite_Wrap.G_spriteAtlasTextureScale
#endif
                    }},
                    {"associatedAlphaSplitTexture", new MemberRegisterInfo { Name = "associatedAlphaSplitTexture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Sprite_Wrap.G_associatedAlphaSplitTexture
#endif
                    }},
                    {"pivot", new MemberRegisterInfo { Name = "pivot", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Sprite_Wrap.G_pivot
#endif
                    }},
                    {"isUsingPlaceholder", new MemberRegisterInfo { Name = "isUsingPlaceholder", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Sprite_Wrap.G_isUsingPlaceholder
#endif
                    }},
                    {"packed", new MemberRegisterInfo { Name = "packed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Sprite_Wrap.G_packed
#endif
                    }},
                    {"packingMode", new MemberRegisterInfo { Name = "packingMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Sprite_Wrap.G_packingMode
#endif
                    }},
                    {"packingRotation", new MemberRegisterInfo { Name = "packingRotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Sprite_Wrap.G_packingRotation
#endif
                    }},
                    {"textureRect", new MemberRegisterInfo { Name = "textureRect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Sprite_Wrap.G_textureRect
#endif
                    }},
                    {"textureRectOffset", new MemberRegisterInfo { Name = "textureRectOffset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Sprite_Wrap.G_textureRectOffset
#endif
                    }},
                    {"vertices", new MemberRegisterInfo { Name = "vertices", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Sprite_Wrap.G_vertices
#endif
                    }},
                    {"triangles", new MemberRegisterInfo { Name = "triangles", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Sprite_Wrap.G_triangles
#endif
                    }},
                    {"uv", new MemberRegisterInfo { Name = "uv", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Sprite_Wrap.G_uv
#endif
                    }},
                    {"Create_static", new MemberRegisterInfo { Name = "Create", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Sprite_Wrap.F_Create
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Social_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"LoadUsers_static", new MemberRegisterInfo { Name = "LoadUsers", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Social_Wrap.F_LoadUsers
#endif
                    }},
                    {"ReportProgress_static", new MemberRegisterInfo { Name = "ReportProgress", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Social_Wrap.F_ReportProgress
#endif
                    }},
                    {"LoadAchievementDescriptions_static", new MemberRegisterInfo { Name = "LoadAchievementDescriptions", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Social_Wrap.F_LoadAchievementDescriptions
#endif
                    }},
                    {"LoadAchievements_static", new MemberRegisterInfo { Name = "LoadAchievements", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Social_Wrap.F_LoadAchievements
#endif
                    }},
                    {"ReportScore_static", new MemberRegisterInfo { Name = "ReportScore", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Social_Wrap.F_ReportScore
#endif
                    }},
                    {"LoadScores_static", new MemberRegisterInfo { Name = "LoadScores", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Social_Wrap.F_LoadScores
#endif
                    }},
                    {"CreateLeaderboard_static", new MemberRegisterInfo { Name = "CreateLeaderboard", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Social_Wrap.F_CreateLeaderboard
#endif
                    }},
                    {"CreateAchievement_static", new MemberRegisterInfo { Name = "CreateAchievement", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Social_Wrap.F_CreateAchievement
#endif
                    }},
                    {"ShowAchievementsUI_static", new MemberRegisterInfo { Name = "ShowAchievementsUI", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Social_Wrap.F_ShowAchievementsUI
#endif
                    }},
                    {"ShowLeaderboardUI_static", new MemberRegisterInfo { Name = "ShowLeaderboardUI", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Social_Wrap.F_ShowLeaderboardUI
#endif
                    }},
                    {"Active_static", new MemberRegisterInfo { Name = "Active", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Social_Wrap.G_Active, PropertySetter = UnityEngine_Social_Wrap.S_Active
#endif
                    }},
                    {"localUser_static", new MemberRegisterInfo { Name = "localUser", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Social_Wrap.G_localUser
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Grid_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Grid_Wrap.Constructor
#endif
                    }},
                    {"GetCellCenterLocal", new MemberRegisterInfo { Name = "GetCellCenterLocal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Grid_Wrap.M_GetCellCenterLocal
#endif
                    }},
                    {"GetCellCenterWorld", new MemberRegisterInfo { Name = "GetCellCenterWorld", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Grid_Wrap.M_GetCellCenterWorld
#endif
                    }},
                    {"cellSize", new MemberRegisterInfo { Name = "cellSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Grid_Wrap.G_cellSize, PropertySetter = UnityEngine_Grid_Wrap.S_cellSize
#endif
                    }},
                    {"cellGap", new MemberRegisterInfo { Name = "cellGap", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Grid_Wrap.G_cellGap, PropertySetter = UnityEngine_Grid_Wrap.S_cellGap
#endif
                    }},
                    {"cellLayout", new MemberRegisterInfo { Name = "cellLayout", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Grid_Wrap.G_cellLayout, PropertySetter = UnityEngine_Grid_Wrap.S_cellLayout
#endif
                    }},
                    {"cellSwizzle", new MemberRegisterInfo { Name = "cellSwizzle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Grid_Wrap.G_cellSwizzle, PropertySetter = UnityEngine_Grid_Wrap.S_cellSwizzle
#endif
                    }},
                    {"Swizzle_static", new MemberRegisterInfo { Name = "Swizzle", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Grid_Wrap.F_Swizzle
#endif
                    }},
                    {"InverseSwizzle_static", new MemberRegisterInfo { Name = "InverseSwizzle", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Grid_Wrap.F_InverseSwizzle
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_GridLayout_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_GridLayout_Wrap.Constructor
#endif
                    }},
                    {"GetBoundsLocal", new MemberRegisterInfo { Name = "GetBoundsLocal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridLayout_Wrap.M_GetBoundsLocal
#endif
                    }},
                    {"CellToLocal", new MemberRegisterInfo { Name = "CellToLocal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridLayout_Wrap.M_CellToLocal
#endif
                    }},
                    {"LocalToCell", new MemberRegisterInfo { Name = "LocalToCell", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridLayout_Wrap.M_LocalToCell
#endif
                    }},
                    {"CellToLocalInterpolated", new MemberRegisterInfo { Name = "CellToLocalInterpolated", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridLayout_Wrap.M_CellToLocalInterpolated
#endif
                    }},
                    {"LocalToCellInterpolated", new MemberRegisterInfo { Name = "LocalToCellInterpolated", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridLayout_Wrap.M_LocalToCellInterpolated
#endif
                    }},
                    {"CellToWorld", new MemberRegisterInfo { Name = "CellToWorld", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridLayout_Wrap.M_CellToWorld
#endif
                    }},
                    {"WorldToCell", new MemberRegisterInfo { Name = "WorldToCell", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridLayout_Wrap.M_WorldToCell
#endif
                    }},
                    {"LocalToWorld", new MemberRegisterInfo { Name = "LocalToWorld", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridLayout_Wrap.M_LocalToWorld
#endif
                    }},
                    {"WorldToLocal", new MemberRegisterInfo { Name = "WorldToLocal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridLayout_Wrap.M_WorldToLocal
#endif
                    }},
                    {"GetLayoutCellCenter", new MemberRegisterInfo { Name = "GetLayoutCellCenter", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridLayout_Wrap.M_GetLayoutCellCenter
#endif
                    }},
                    {"cellSize", new MemberRegisterInfo { Name = "cellSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GridLayout_Wrap.G_cellSize
#endif
                    }},
                    {"cellGap", new MemberRegisterInfo { Name = "cellGap", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GridLayout_Wrap.G_cellGap
#endif
                    }},
                    {"cellLayout", new MemberRegisterInfo { Name = "cellLayout", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GridLayout_Wrap.G_cellLayout
#endif
                    }},
                    {"cellSwizzle", new MemberRegisterInfo { Name = "cellSwizzle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GridLayout_Wrap.G_cellSwizzle
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Event_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Event_Wrap.Constructor
#endif
                    }},
                    {"GetTypeForControl", new MemberRegisterInfo { Name = "GetTypeForControl", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Event_Wrap.M_GetTypeForControl
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Event_Wrap.M_GetHashCode
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Event_Wrap.M_Equals
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Event_Wrap.M_ToString
#endif
                    }},
                    {"Use", new MemberRegisterInfo { Name = "Use", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Event_Wrap.M_Use
#endif
                    }},
                    {"rawType", new MemberRegisterInfo { Name = "rawType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_rawType
#endif
                    }},
                    {"mousePosition", new MemberRegisterInfo { Name = "mousePosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_mousePosition, PropertySetter = UnityEngine_Event_Wrap.S_mousePosition
#endif
                    }},
                    {"delta", new MemberRegisterInfo { Name = "delta", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_delta, PropertySetter = UnityEngine_Event_Wrap.S_delta
#endif
                    }},
                    {"pointerType", new MemberRegisterInfo { Name = "pointerType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_pointerType, PropertySetter = UnityEngine_Event_Wrap.S_pointerType
#endif
                    }},
                    {"button", new MemberRegisterInfo { Name = "button", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_button, PropertySetter = UnityEngine_Event_Wrap.S_button
#endif
                    }},
                    {"modifiers", new MemberRegisterInfo { Name = "modifiers", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_modifiers, PropertySetter = UnityEngine_Event_Wrap.S_modifiers
#endif
                    }},
                    {"pressure", new MemberRegisterInfo { Name = "pressure", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_pressure, PropertySetter = UnityEngine_Event_Wrap.S_pressure
#endif
                    }},
                    {"clickCount", new MemberRegisterInfo { Name = "clickCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_clickCount, PropertySetter = UnityEngine_Event_Wrap.S_clickCount
#endif
                    }},
                    {"character", new MemberRegisterInfo { Name = "character", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_character, PropertySetter = UnityEngine_Event_Wrap.S_character
#endif
                    }},
                    {"keyCode", new MemberRegisterInfo { Name = "keyCode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_keyCode, PropertySetter = UnityEngine_Event_Wrap.S_keyCode
#endif
                    }},
                    {"displayIndex", new MemberRegisterInfo { Name = "displayIndex", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_displayIndex, PropertySetter = UnityEngine_Event_Wrap.S_displayIndex
#endif
                    }},
                    {"type", new MemberRegisterInfo { Name = "type", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_type, PropertySetter = UnityEngine_Event_Wrap.S_type
#endif
                    }},
                    {"commandName", new MemberRegisterInfo { Name = "commandName", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_commandName, PropertySetter = UnityEngine_Event_Wrap.S_commandName
#endif
                    }},
                    {"shift", new MemberRegisterInfo { Name = "shift", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_shift, PropertySetter = UnityEngine_Event_Wrap.S_shift
#endif
                    }},
                    {"control", new MemberRegisterInfo { Name = "control", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_control, PropertySetter = UnityEngine_Event_Wrap.S_control
#endif
                    }},
                    {"alt", new MemberRegisterInfo { Name = "alt", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_alt, PropertySetter = UnityEngine_Event_Wrap.S_alt
#endif
                    }},
                    {"command", new MemberRegisterInfo { Name = "command", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_command, PropertySetter = UnityEngine_Event_Wrap.S_command
#endif
                    }},
                    {"capsLock", new MemberRegisterInfo { Name = "capsLock", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_capsLock, PropertySetter = UnityEngine_Event_Wrap.S_capsLock
#endif
                    }},
                    {"numeric", new MemberRegisterInfo { Name = "numeric", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_numeric, PropertySetter = UnityEngine_Event_Wrap.S_numeric
#endif
                    }},
                    {"functionKey", new MemberRegisterInfo { Name = "functionKey", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_functionKey
#endif
                    }},
                    {"isKey", new MemberRegisterInfo { Name = "isKey", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_isKey
#endif
                    }},
                    {"isMouse", new MemberRegisterInfo { Name = "isMouse", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_isMouse
#endif
                    }},
                    {"isScrollWheel", new MemberRegisterInfo { Name = "isScrollWheel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_isScrollWheel
#endif
                    }},
                    {"PopEvent_static", new MemberRegisterInfo { Name = "PopEvent", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Event_Wrap.F_PopEvent
#endif
                    }},
                    {"GetEventCount_static", new MemberRegisterInfo { Name = "GetEventCount", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Event_Wrap.F_GetEventCount
#endif
                    }},
                    {"KeyboardEvent_static", new MemberRegisterInfo { Name = "KeyboardEvent", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Event_Wrap.F_KeyboardEvent
#endif
                    }},
                    {"current_static", new MemberRegisterInfo { Name = "current", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Event_Wrap.G_current, PropertySetter = UnityEngine_Event_Wrap.S_current
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_GUI_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_GUI_Wrap.Constructor
#endif
                    }},
                    {"SetNextControlName_static", new MemberRegisterInfo { Name = "SetNextControlName", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_SetNextControlName
#endif
                    }},
                    {"GetNameOfFocusedControl_static", new MemberRegisterInfo { Name = "GetNameOfFocusedControl", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_GetNameOfFocusedControl
#endif
                    }},
                    {"FocusControl_static", new MemberRegisterInfo { Name = "FocusControl", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_FocusControl
#endif
                    }},
                    {"DragWindow_static", new MemberRegisterInfo { Name = "DragWindow", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_DragWindow
#endif
                    }},
                    {"BringWindowToFront_static", new MemberRegisterInfo { Name = "BringWindowToFront", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_BringWindowToFront
#endif
                    }},
                    {"BringWindowToBack_static", new MemberRegisterInfo { Name = "BringWindowToBack", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_BringWindowToBack
#endif
                    }},
                    {"FocusWindow_static", new MemberRegisterInfo { Name = "FocusWindow", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_FocusWindow
#endif
                    }},
                    {"UnfocusWindow_static", new MemberRegisterInfo { Name = "UnfocusWindow", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_UnfocusWindow
#endif
                    }},
                    {"Label_static", new MemberRegisterInfo { Name = "Label", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_Label
#endif
                    }},
                    {"DrawTexture_static", new MemberRegisterInfo { Name = "DrawTexture", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_DrawTexture
#endif
                    }},
                    {"DrawTextureWithTexCoords_static", new MemberRegisterInfo { Name = "DrawTextureWithTexCoords", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_DrawTextureWithTexCoords
#endif
                    }},
                    {"Box_static", new MemberRegisterInfo { Name = "Box", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_Box
#endif
                    }},
                    {"Button_static", new MemberRegisterInfo { Name = "Button", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_Button
#endif
                    }},
                    {"RepeatButton_static", new MemberRegisterInfo { Name = "RepeatButton", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_RepeatButton
#endif
                    }},
                    {"TextField_static", new MemberRegisterInfo { Name = "TextField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_TextField
#endif
                    }},
                    {"PasswordField_static", new MemberRegisterInfo { Name = "PasswordField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_PasswordField
#endif
                    }},
                    {"TextArea_static", new MemberRegisterInfo { Name = "TextArea", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_TextArea
#endif
                    }},
                    {"Toggle_static", new MemberRegisterInfo { Name = "Toggle", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_Toggle
#endif
                    }},
                    {"Toolbar_static", new MemberRegisterInfo { Name = "Toolbar", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_Toolbar
#endif
                    }},
                    {"SelectionGrid_static", new MemberRegisterInfo { Name = "SelectionGrid", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_SelectionGrid
#endif
                    }},
                    {"HorizontalSlider_static", new MemberRegisterInfo { Name = "HorizontalSlider", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_HorizontalSlider
#endif
                    }},
                    {"VerticalSlider_static", new MemberRegisterInfo { Name = "VerticalSlider", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_VerticalSlider
#endif
                    }},
                    {"Slider_static", new MemberRegisterInfo { Name = "Slider", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_Slider
#endif
                    }},
                    {"HorizontalScrollbar_static", new MemberRegisterInfo { Name = "HorizontalScrollbar", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_HorizontalScrollbar
#endif
                    }},
                    {"VerticalScrollbar_static", new MemberRegisterInfo { Name = "VerticalScrollbar", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_VerticalScrollbar
#endif
                    }},
                    {"BeginClip_static", new MemberRegisterInfo { Name = "BeginClip", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_BeginClip
#endif
                    }},
                    {"BeginGroup_static", new MemberRegisterInfo { Name = "BeginGroup", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_BeginGroup
#endif
                    }},
                    {"EndGroup_static", new MemberRegisterInfo { Name = "EndGroup", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_EndGroup
#endif
                    }},
                    {"EndClip_static", new MemberRegisterInfo { Name = "EndClip", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_EndClip
#endif
                    }},
                    {"BeginScrollView_static", new MemberRegisterInfo { Name = "BeginScrollView", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_BeginScrollView
#endif
                    }},
                    {"EndScrollView_static", new MemberRegisterInfo { Name = "EndScrollView", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_EndScrollView
#endif
                    }},
                    {"ScrollTo_static", new MemberRegisterInfo { Name = "ScrollTo", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_ScrollTo
#endif
                    }},
                    {"ScrollTowards_static", new MemberRegisterInfo { Name = "ScrollTowards", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_ScrollTowards
#endif
                    }},
                    {"Window_static", new MemberRegisterInfo { Name = "Window", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_Window
#endif
                    }},
                    {"ModalWindow_static", new MemberRegisterInfo { Name = "ModalWindow", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Wrap.F_ModalWindow
#endif
                    }},
                    {"color_static", new MemberRegisterInfo { Name = "color", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUI_Wrap.G_color, PropertySetter = UnityEngine_GUI_Wrap.S_color
#endif
                    }},
                    {"backgroundColor_static", new MemberRegisterInfo { Name = "backgroundColor", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUI_Wrap.G_backgroundColor, PropertySetter = UnityEngine_GUI_Wrap.S_backgroundColor
#endif
                    }},
                    {"contentColor_static", new MemberRegisterInfo { Name = "contentColor", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUI_Wrap.G_contentColor, PropertySetter = UnityEngine_GUI_Wrap.S_contentColor
#endif
                    }},
                    {"changed_static", new MemberRegisterInfo { Name = "changed", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUI_Wrap.G_changed, PropertySetter = UnityEngine_GUI_Wrap.S_changed
#endif
                    }},
                    {"enabled_static", new MemberRegisterInfo { Name = "enabled", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUI_Wrap.G_enabled, PropertySetter = UnityEngine_GUI_Wrap.S_enabled
#endif
                    }},
                    {"depth_static", new MemberRegisterInfo { Name = "depth", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUI_Wrap.G_depth, PropertySetter = UnityEngine_GUI_Wrap.S_depth
#endif
                    }},
                    {"skin_static", new MemberRegisterInfo { Name = "skin", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUI_Wrap.G_skin, PropertySetter = UnityEngine_GUI_Wrap.S_skin
#endif
                    }},
                    {"matrix_static", new MemberRegisterInfo { Name = "matrix", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUI_Wrap.G_matrix, PropertySetter = UnityEngine_GUI_Wrap.S_matrix
#endif
                    }},
                    {"tooltip_static", new MemberRegisterInfo { Name = "tooltip", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUI_Wrap.G_tooltip, PropertySetter = UnityEngine_GUI_Wrap.S_tooltip
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_GUI_Scope_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"Dispose", new MemberRegisterInfo { Name = "Dispose", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUI_Scope_Wrap.M_Dispose
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_GUIContent_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_GUIContent_Wrap.Constructor
#endif
                    }},
                    {"text", new MemberRegisterInfo { Name = "text", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIContent_Wrap.G_text, PropertySetter = UnityEngine_GUIContent_Wrap.S_text
#endif
                    }},
                    {"image", new MemberRegisterInfo { Name = "image", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIContent_Wrap.G_image, PropertySetter = UnityEngine_GUIContent_Wrap.S_image
#endif
                    }},
                    {"tooltip", new MemberRegisterInfo { Name = "tooltip", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIContent_Wrap.G_tooltip, PropertySetter = UnityEngine_GUIContent_Wrap.S_tooltip
#endif
                    }},
                    {"none_static", new MemberRegisterInfo { Name = "none", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIContent_Wrap.G_none, PropertySetter = UnityEngine_GUIContent_Wrap.S_none
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_GUILayout_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_GUILayout_Wrap.Constructor
#endif
                    }},
                    {"Label_static", new MemberRegisterInfo { Name = "Label", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_Label
#endif
                    }},
                    {"Box_static", new MemberRegisterInfo { Name = "Box", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_Box
#endif
                    }},
                    {"Button_static", new MemberRegisterInfo { Name = "Button", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_Button
#endif
                    }},
                    {"RepeatButton_static", new MemberRegisterInfo { Name = "RepeatButton", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_RepeatButton
#endif
                    }},
                    {"TextField_static", new MemberRegisterInfo { Name = "TextField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_TextField
#endif
                    }},
                    {"PasswordField_static", new MemberRegisterInfo { Name = "PasswordField", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_PasswordField
#endif
                    }},
                    {"TextArea_static", new MemberRegisterInfo { Name = "TextArea", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_TextArea
#endif
                    }},
                    {"Toggle_static", new MemberRegisterInfo { Name = "Toggle", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_Toggle
#endif
                    }},
                    {"Toolbar_static", new MemberRegisterInfo { Name = "Toolbar", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_Toolbar
#endif
                    }},
                    {"SelectionGrid_static", new MemberRegisterInfo { Name = "SelectionGrid", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_SelectionGrid
#endif
                    }},
                    {"HorizontalSlider_static", new MemberRegisterInfo { Name = "HorizontalSlider", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_HorizontalSlider
#endif
                    }},
                    {"VerticalSlider_static", new MemberRegisterInfo { Name = "VerticalSlider", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_VerticalSlider
#endif
                    }},
                    {"HorizontalScrollbar_static", new MemberRegisterInfo { Name = "HorizontalScrollbar", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_HorizontalScrollbar
#endif
                    }},
                    {"VerticalScrollbar_static", new MemberRegisterInfo { Name = "VerticalScrollbar", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_VerticalScrollbar
#endif
                    }},
                    {"Space_static", new MemberRegisterInfo { Name = "Space", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_Space
#endif
                    }},
                    {"FlexibleSpace_static", new MemberRegisterInfo { Name = "FlexibleSpace", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_FlexibleSpace
#endif
                    }},
                    {"BeginHorizontal_static", new MemberRegisterInfo { Name = "BeginHorizontal", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_BeginHorizontal
#endif
                    }},
                    {"EndHorizontal_static", new MemberRegisterInfo { Name = "EndHorizontal", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_EndHorizontal
#endif
                    }},
                    {"BeginVertical_static", new MemberRegisterInfo { Name = "BeginVertical", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_BeginVertical
#endif
                    }},
                    {"EndVertical_static", new MemberRegisterInfo { Name = "EndVertical", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_EndVertical
#endif
                    }},
                    {"BeginArea_static", new MemberRegisterInfo { Name = "BeginArea", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_BeginArea
#endif
                    }},
                    {"EndArea_static", new MemberRegisterInfo { Name = "EndArea", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_EndArea
#endif
                    }},
                    {"BeginScrollView_static", new MemberRegisterInfo { Name = "BeginScrollView", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_BeginScrollView
#endif
                    }},
                    {"EndScrollView_static", new MemberRegisterInfo { Name = "EndScrollView", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_EndScrollView
#endif
                    }},
                    {"Window_static", new MemberRegisterInfo { Name = "Window", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_Window
#endif
                    }},
                    {"Width_static", new MemberRegisterInfo { Name = "Width", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_Width
#endif
                    }},
                    {"MinWidth_static", new MemberRegisterInfo { Name = "MinWidth", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_MinWidth
#endif
                    }},
                    {"MaxWidth_static", new MemberRegisterInfo { Name = "MaxWidth", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_MaxWidth
#endif
                    }},
                    {"Height_static", new MemberRegisterInfo { Name = "Height", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_Height
#endif
                    }},
                    {"MinHeight_static", new MemberRegisterInfo { Name = "MinHeight", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_MinHeight
#endif
                    }},
                    {"MaxHeight_static", new MemberRegisterInfo { Name = "MaxHeight", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_MaxHeight
#endif
                    }},
                    {"ExpandWidth_static", new MemberRegisterInfo { Name = "ExpandWidth", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_ExpandWidth
#endif
                    }},
                    {"ExpandHeight_static", new MemberRegisterInfo { Name = "ExpandHeight", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayout_Wrap.F_ExpandHeight
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_GUILayoutOption_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_GUILayoutUtility_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_GUILayoutUtility_Wrap.Constructor
#endif
                    }},
                    {"GetRect_static", new MemberRegisterInfo { Name = "GetRect", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayoutUtility_Wrap.F_GetRect
#endif
                    }},
                    {"GetLastRect_static", new MemberRegisterInfo { Name = "GetLastRect", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayoutUtility_Wrap.F_GetLastRect
#endif
                    }},
                    {"GetAspectRect_static", new MemberRegisterInfo { Name = "GetAspectRect", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUILayoutUtility_Wrap.F_GetAspectRect
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_GUISettings_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_GUISettings_Wrap.Constructor
#endif
                    }},
                    {"doubleClickSelectsWord", new MemberRegisterInfo { Name = "doubleClickSelectsWord", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISettings_Wrap.G_doubleClickSelectsWord, PropertySetter = UnityEngine_GUISettings_Wrap.S_doubleClickSelectsWord
#endif
                    }},
                    {"tripleClickSelectsLine", new MemberRegisterInfo { Name = "tripleClickSelectsLine", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISettings_Wrap.G_tripleClickSelectsLine, PropertySetter = UnityEngine_GUISettings_Wrap.S_tripleClickSelectsLine
#endif
                    }},
                    {"cursorColor", new MemberRegisterInfo { Name = "cursorColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISettings_Wrap.G_cursorColor, PropertySetter = UnityEngine_GUISettings_Wrap.S_cursorColor
#endif
                    }},
                    {"cursorFlashSpeed", new MemberRegisterInfo { Name = "cursorFlashSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISettings_Wrap.G_cursorFlashSpeed, PropertySetter = UnityEngine_GUISettings_Wrap.S_cursorFlashSpeed
#endif
                    }},
                    {"selectionColor", new MemberRegisterInfo { Name = "selectionColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISettings_Wrap.G_selectionColor, PropertySetter = UnityEngine_GUISettings_Wrap.S_selectionColor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_GUISkin_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_GUISkin_Wrap.Constructor
#endif
                    }},
                    {"GetStyle", new MemberRegisterInfo { Name = "GetStyle", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUISkin_Wrap.M_GetStyle
#endif
                    }},
                    {"FindStyle", new MemberRegisterInfo { Name = "FindStyle", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUISkin_Wrap.M_FindStyle
#endif
                    }},
                    {"GetEnumerator", new MemberRegisterInfo { Name = "GetEnumerator", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUISkin_Wrap.M_GetEnumerator
#endif
                    }},
                    {"font", new MemberRegisterInfo { Name = "font", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_font, PropertySetter = UnityEngine_GUISkin_Wrap.S_font
#endif
                    }},
                    {"box", new MemberRegisterInfo { Name = "box", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_box, PropertySetter = UnityEngine_GUISkin_Wrap.S_box
#endif
                    }},
                    {"label", new MemberRegisterInfo { Name = "label", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_label, PropertySetter = UnityEngine_GUISkin_Wrap.S_label
#endif
                    }},
                    {"textField", new MemberRegisterInfo { Name = "textField", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_textField, PropertySetter = UnityEngine_GUISkin_Wrap.S_textField
#endif
                    }},
                    {"textArea", new MemberRegisterInfo { Name = "textArea", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_textArea, PropertySetter = UnityEngine_GUISkin_Wrap.S_textArea
#endif
                    }},
                    {"button", new MemberRegisterInfo { Name = "button", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_button, PropertySetter = UnityEngine_GUISkin_Wrap.S_button
#endif
                    }},
                    {"toggle", new MemberRegisterInfo { Name = "toggle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_toggle, PropertySetter = UnityEngine_GUISkin_Wrap.S_toggle
#endif
                    }},
                    {"window", new MemberRegisterInfo { Name = "window", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_window, PropertySetter = UnityEngine_GUISkin_Wrap.S_window
#endif
                    }},
                    {"horizontalSlider", new MemberRegisterInfo { Name = "horizontalSlider", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_horizontalSlider, PropertySetter = UnityEngine_GUISkin_Wrap.S_horizontalSlider
#endif
                    }},
                    {"horizontalSliderThumb", new MemberRegisterInfo { Name = "horizontalSliderThumb", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_horizontalSliderThumb, PropertySetter = UnityEngine_GUISkin_Wrap.S_horizontalSliderThumb
#endif
                    }},
                    {"verticalSlider", new MemberRegisterInfo { Name = "verticalSlider", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_verticalSlider, PropertySetter = UnityEngine_GUISkin_Wrap.S_verticalSlider
#endif
                    }},
                    {"verticalSliderThumb", new MemberRegisterInfo { Name = "verticalSliderThumb", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_verticalSliderThumb, PropertySetter = UnityEngine_GUISkin_Wrap.S_verticalSliderThumb
#endif
                    }},
                    {"horizontalScrollbar", new MemberRegisterInfo { Name = "horizontalScrollbar", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_horizontalScrollbar, PropertySetter = UnityEngine_GUISkin_Wrap.S_horizontalScrollbar
#endif
                    }},
                    {"horizontalScrollbarThumb", new MemberRegisterInfo { Name = "horizontalScrollbarThumb", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_horizontalScrollbarThumb, PropertySetter = UnityEngine_GUISkin_Wrap.S_horizontalScrollbarThumb
#endif
                    }},
                    {"horizontalScrollbarLeftButton", new MemberRegisterInfo { Name = "horizontalScrollbarLeftButton", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_horizontalScrollbarLeftButton, PropertySetter = UnityEngine_GUISkin_Wrap.S_horizontalScrollbarLeftButton
#endif
                    }},
                    {"horizontalScrollbarRightButton", new MemberRegisterInfo { Name = "horizontalScrollbarRightButton", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_horizontalScrollbarRightButton, PropertySetter = UnityEngine_GUISkin_Wrap.S_horizontalScrollbarRightButton
#endif
                    }},
                    {"verticalScrollbar", new MemberRegisterInfo { Name = "verticalScrollbar", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_verticalScrollbar, PropertySetter = UnityEngine_GUISkin_Wrap.S_verticalScrollbar
#endif
                    }},
                    {"verticalScrollbarThumb", new MemberRegisterInfo { Name = "verticalScrollbarThumb", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_verticalScrollbarThumb, PropertySetter = UnityEngine_GUISkin_Wrap.S_verticalScrollbarThumb
#endif
                    }},
                    {"verticalScrollbarUpButton", new MemberRegisterInfo { Name = "verticalScrollbarUpButton", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_verticalScrollbarUpButton, PropertySetter = UnityEngine_GUISkin_Wrap.S_verticalScrollbarUpButton
#endif
                    }},
                    {"verticalScrollbarDownButton", new MemberRegisterInfo { Name = "verticalScrollbarDownButton", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_verticalScrollbarDownButton, PropertySetter = UnityEngine_GUISkin_Wrap.S_verticalScrollbarDownButton
#endif
                    }},
                    {"scrollView", new MemberRegisterInfo { Name = "scrollView", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_scrollView, PropertySetter = UnityEngine_GUISkin_Wrap.S_scrollView
#endif
                    }},
                    {"customStyles", new MemberRegisterInfo { Name = "customStyles", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_customStyles, PropertySetter = UnityEngine_GUISkin_Wrap.S_customStyles
#endif
                    }},
                    {"settings", new MemberRegisterInfo { Name = "settings", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUISkin_Wrap.G_settings
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_GUIStyleState_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_GUIStyleState_Wrap.Constructor
#endif
                    }},
                    {"background", new MemberRegisterInfo { Name = "background", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyleState_Wrap.G_background, PropertySetter = UnityEngine_GUIStyleState_Wrap.S_background
#endif
                    }},
                    {"textColor", new MemberRegisterInfo { Name = "textColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyleState_Wrap.G_textColor, PropertySetter = UnityEngine_GUIStyleState_Wrap.S_textColor
#endif
                    }},
                    {"scaledBackgrounds", new MemberRegisterInfo { Name = "scaledBackgrounds", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_GUIStyle_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_GUIStyle_Wrap.Constructor
#endif
                    }},
                    {"Draw", new MemberRegisterInfo { Name = "Draw", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUIStyle_Wrap.M_Draw
#endif
                    }},
                    {"DrawCursor", new MemberRegisterInfo { Name = "DrawCursor", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUIStyle_Wrap.M_DrawCursor
#endif
                    }},
                    {"DrawWithTextSelection", new MemberRegisterInfo { Name = "DrawWithTextSelection", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUIStyle_Wrap.M_DrawWithTextSelection
#endif
                    }},
                    {"GetCursorPixelPosition", new MemberRegisterInfo { Name = "GetCursorPixelPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUIStyle_Wrap.M_GetCursorPixelPosition
#endif
                    }},
                    {"GetCursorStringIndex", new MemberRegisterInfo { Name = "GetCursorStringIndex", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUIStyle_Wrap.M_GetCursorStringIndex
#endif
                    }},
                    {"CalcSize", new MemberRegisterInfo { Name = "CalcSize", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUIStyle_Wrap.M_CalcSize
#endif
                    }},
                    {"CalcScreenSize", new MemberRegisterInfo { Name = "CalcScreenSize", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUIStyle_Wrap.M_CalcScreenSize
#endif
                    }},
                    {"CalcHeight", new MemberRegisterInfo { Name = "CalcHeight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUIStyle_Wrap.M_CalcHeight
#endif
                    }},
                    {"CalcMinMaxWidth", new MemberRegisterInfo { Name = "CalcMinMaxWidth", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUIStyle_Wrap.M_CalcMinMaxWidth
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUIStyle_Wrap.M_ToString
#endif
                    }},
                    {"font", new MemberRegisterInfo { Name = "font", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_font, PropertySetter = UnityEngine_GUIStyle_Wrap.S_font
#endif
                    }},
                    {"imagePosition", new MemberRegisterInfo { Name = "imagePosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_imagePosition, PropertySetter = UnityEngine_GUIStyle_Wrap.S_imagePosition
#endif
                    }},
                    {"alignment", new MemberRegisterInfo { Name = "alignment", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_alignment, PropertySetter = UnityEngine_GUIStyle_Wrap.S_alignment
#endif
                    }},
                    {"wordWrap", new MemberRegisterInfo { Name = "wordWrap", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_wordWrap, PropertySetter = UnityEngine_GUIStyle_Wrap.S_wordWrap
#endif
                    }},
                    {"clipping", new MemberRegisterInfo { Name = "clipping", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_clipping, PropertySetter = UnityEngine_GUIStyle_Wrap.S_clipping
#endif
                    }},
                    {"contentOffset", new MemberRegisterInfo { Name = "contentOffset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_contentOffset, PropertySetter = UnityEngine_GUIStyle_Wrap.S_contentOffset
#endif
                    }},
                    {"fixedWidth", new MemberRegisterInfo { Name = "fixedWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_fixedWidth, PropertySetter = UnityEngine_GUIStyle_Wrap.S_fixedWidth
#endif
                    }},
                    {"fixedHeight", new MemberRegisterInfo { Name = "fixedHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_fixedHeight, PropertySetter = UnityEngine_GUIStyle_Wrap.S_fixedHeight
#endif
                    }},
                    {"stretchWidth", new MemberRegisterInfo { Name = "stretchWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_stretchWidth, PropertySetter = UnityEngine_GUIStyle_Wrap.S_stretchWidth
#endif
                    }},
                    {"stretchHeight", new MemberRegisterInfo { Name = "stretchHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_stretchHeight, PropertySetter = UnityEngine_GUIStyle_Wrap.S_stretchHeight
#endif
                    }},
                    {"fontSize", new MemberRegisterInfo { Name = "fontSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_fontSize, PropertySetter = UnityEngine_GUIStyle_Wrap.S_fontSize
#endif
                    }},
                    {"fontStyle", new MemberRegisterInfo { Name = "fontStyle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_fontStyle, PropertySetter = UnityEngine_GUIStyle_Wrap.S_fontStyle
#endif
                    }},
                    {"richText", new MemberRegisterInfo { Name = "richText", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_richText, PropertySetter = UnityEngine_GUIStyle_Wrap.S_richText
#endif
                    }},
                    {"name", new MemberRegisterInfo { Name = "name", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_name, PropertySetter = UnityEngine_GUIStyle_Wrap.S_name
#endif
                    }},
                    {"normal", new MemberRegisterInfo { Name = "normal", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_normal, PropertySetter = UnityEngine_GUIStyle_Wrap.S_normal
#endif
                    }},
                    {"hover", new MemberRegisterInfo { Name = "hover", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_hover, PropertySetter = UnityEngine_GUIStyle_Wrap.S_hover
#endif
                    }},
                    {"active", new MemberRegisterInfo { Name = "active", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_active, PropertySetter = UnityEngine_GUIStyle_Wrap.S_active
#endif
                    }},
                    {"onNormal", new MemberRegisterInfo { Name = "onNormal", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_onNormal, PropertySetter = UnityEngine_GUIStyle_Wrap.S_onNormal
#endif
                    }},
                    {"onHover", new MemberRegisterInfo { Name = "onHover", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_onHover, PropertySetter = UnityEngine_GUIStyle_Wrap.S_onHover
#endif
                    }},
                    {"onActive", new MemberRegisterInfo { Name = "onActive", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_onActive, PropertySetter = UnityEngine_GUIStyle_Wrap.S_onActive
#endif
                    }},
                    {"focused", new MemberRegisterInfo { Name = "focused", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_focused, PropertySetter = UnityEngine_GUIStyle_Wrap.S_focused
#endif
                    }},
                    {"onFocused", new MemberRegisterInfo { Name = "onFocused", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_onFocused, PropertySetter = UnityEngine_GUIStyle_Wrap.S_onFocused
#endif
                    }},
                    {"border", new MemberRegisterInfo { Name = "border", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_border, PropertySetter = UnityEngine_GUIStyle_Wrap.S_border
#endif
                    }},
                    {"margin", new MemberRegisterInfo { Name = "margin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_margin, PropertySetter = UnityEngine_GUIStyle_Wrap.S_margin
#endif
                    }},
                    {"padding", new MemberRegisterInfo { Name = "padding", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_padding, PropertySetter = UnityEngine_GUIStyle_Wrap.S_padding
#endif
                    }},
                    {"overflow", new MemberRegisterInfo { Name = "overflow", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_overflow, PropertySetter = UnityEngine_GUIStyle_Wrap.S_overflow
#endif
                    }},
                    {"lineHeight", new MemberRegisterInfo { Name = "lineHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_lineHeight
#endif
                    }},
                    {"isHeightDependantOnWidth", new MemberRegisterInfo { Name = "isHeightDependantOnWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_isHeightDependantOnWidth
#endif
                    }},
                    {"none_static", new MemberRegisterInfo { Name = "none", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIStyle_Wrap.G_none
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_GUITargetAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_GUITargetAttribute_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_GUIUtility_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_GUIUtility_Wrap.Constructor
#endif
                    }},
                    {"GetControlID_static", new MemberRegisterInfo { Name = "GetControlID", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUIUtility_Wrap.F_GetControlID
#endif
                    }},
                    {"AlignRectToDevice_static", new MemberRegisterInfo { Name = "AlignRectToDevice", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUIUtility_Wrap.F_AlignRectToDevice
#endif
                    }},
                    {"GetStateObject_static", new MemberRegisterInfo { Name = "GetStateObject", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUIUtility_Wrap.F_GetStateObject
#endif
                    }},
                    {"QueryStateObject_static", new MemberRegisterInfo { Name = "QueryStateObject", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUIUtility_Wrap.F_QueryStateObject
#endif
                    }},
                    {"ExitGUI_static", new MemberRegisterInfo { Name = "ExitGUI", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUIUtility_Wrap.F_ExitGUI
#endif
                    }},
                    {"GUIToScreenPoint_static", new MemberRegisterInfo { Name = "GUIToScreenPoint", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUIUtility_Wrap.F_GUIToScreenPoint
#endif
                    }},
                    {"GUIToScreenRect_static", new MemberRegisterInfo { Name = "GUIToScreenRect", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUIUtility_Wrap.F_GUIToScreenRect
#endif
                    }},
                    {"ScreenToGUIPoint_static", new MemberRegisterInfo { Name = "ScreenToGUIPoint", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUIUtility_Wrap.F_ScreenToGUIPoint
#endif
                    }},
                    {"ScreenToGUIRect_static", new MemberRegisterInfo { Name = "ScreenToGUIRect", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUIUtility_Wrap.F_ScreenToGUIRect
#endif
                    }},
                    {"RotateAroundPivot_static", new MemberRegisterInfo { Name = "RotateAroundPivot", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUIUtility_Wrap.F_RotateAroundPivot
#endif
                    }},
                    {"ScaleAroundPivot_static", new MemberRegisterInfo { Name = "ScaleAroundPivot", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GUIUtility_Wrap.F_ScaleAroundPivot
#endif
                    }},
                    {"hasModalWindow_static", new MemberRegisterInfo { Name = "hasModalWindow", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIUtility_Wrap.G_hasModalWindow
#endif
                    }},
                    {"systemCopyBuffer_static", new MemberRegisterInfo { Name = "systemCopyBuffer", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIUtility_Wrap.G_systemCopyBuffer, PropertySetter = UnityEngine_GUIUtility_Wrap.S_systemCopyBuffer
#endif
                    }},
                    {"hotControl_static", new MemberRegisterInfo { Name = "hotControl", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIUtility_Wrap.G_hotControl, PropertySetter = UnityEngine_GUIUtility_Wrap.S_hotControl
#endif
                    }},
                    {"keyboardControl_static", new MemberRegisterInfo { Name = "keyboardControl", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_GUIUtility_Wrap.G_keyboardControl, PropertySetter = UnityEngine_GUIUtility_Wrap.S_keyboardControl
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ExitGUIException_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ExitGUIException_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_TextEditor_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_TextEditor_Wrap.Constructor
#endif
                    }},
                    {"OnFocus", new MemberRegisterInfo { Name = "OnFocus", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_OnFocus
#endif
                    }},
                    {"OnLostFocus", new MemberRegisterInfo { Name = "OnLostFocus", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_OnLostFocus
#endif
                    }},
                    {"HandleKeyEvent", new MemberRegisterInfo { Name = "HandleKeyEvent", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_HandleKeyEvent
#endif
                    }},
                    {"DeleteLineBack", new MemberRegisterInfo { Name = "DeleteLineBack", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_DeleteLineBack
#endif
                    }},
                    {"DeleteWordBack", new MemberRegisterInfo { Name = "DeleteWordBack", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_DeleteWordBack
#endif
                    }},
                    {"DeleteWordForward", new MemberRegisterInfo { Name = "DeleteWordForward", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_DeleteWordForward
#endif
                    }},
                    {"Delete", new MemberRegisterInfo { Name = "Delete", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_Delete
#endif
                    }},
                    {"CanPaste", new MemberRegisterInfo { Name = "CanPaste", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_CanPaste
#endif
                    }},
                    {"Backspace", new MemberRegisterInfo { Name = "Backspace", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_Backspace
#endif
                    }},
                    {"SelectAll", new MemberRegisterInfo { Name = "SelectAll", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_SelectAll
#endif
                    }},
                    {"SelectNone", new MemberRegisterInfo { Name = "SelectNone", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_SelectNone
#endif
                    }},
                    {"DeleteSelection", new MemberRegisterInfo { Name = "DeleteSelection", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_DeleteSelection
#endif
                    }},
                    {"ReplaceSelection", new MemberRegisterInfo { Name = "ReplaceSelection", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_ReplaceSelection
#endif
                    }},
                    {"Insert", new MemberRegisterInfo { Name = "Insert", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_Insert
#endif
                    }},
                    {"MoveSelectionToAltCursor", new MemberRegisterInfo { Name = "MoveSelectionToAltCursor", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_MoveSelectionToAltCursor
#endif
                    }},
                    {"MoveRight", new MemberRegisterInfo { Name = "MoveRight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_MoveRight
#endif
                    }},
                    {"MoveLeft", new MemberRegisterInfo { Name = "MoveLeft", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_MoveLeft
#endif
                    }},
                    {"MoveUp", new MemberRegisterInfo { Name = "MoveUp", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_MoveUp
#endif
                    }},
                    {"MoveDown", new MemberRegisterInfo { Name = "MoveDown", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_MoveDown
#endif
                    }},
                    {"MoveLineStart", new MemberRegisterInfo { Name = "MoveLineStart", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_MoveLineStart
#endif
                    }},
                    {"MoveLineEnd", new MemberRegisterInfo { Name = "MoveLineEnd", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_MoveLineEnd
#endif
                    }},
                    {"MoveGraphicalLineStart", new MemberRegisterInfo { Name = "MoveGraphicalLineStart", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_MoveGraphicalLineStart
#endif
                    }},
                    {"MoveGraphicalLineEnd", new MemberRegisterInfo { Name = "MoveGraphicalLineEnd", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_MoveGraphicalLineEnd
#endif
                    }},
                    {"MoveTextStart", new MemberRegisterInfo { Name = "MoveTextStart", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_MoveTextStart
#endif
                    }},
                    {"MoveTextEnd", new MemberRegisterInfo { Name = "MoveTextEnd", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_MoveTextEnd
#endif
                    }},
                    {"MoveParagraphForward", new MemberRegisterInfo { Name = "MoveParagraphForward", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_MoveParagraphForward
#endif
                    }},
                    {"MoveParagraphBackward", new MemberRegisterInfo { Name = "MoveParagraphBackward", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_MoveParagraphBackward
#endif
                    }},
                    {"MoveCursorToPosition", new MemberRegisterInfo { Name = "MoveCursorToPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_MoveCursorToPosition
#endif
                    }},
                    {"MoveAltCursorToPosition", new MemberRegisterInfo { Name = "MoveAltCursorToPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_MoveAltCursorToPosition
#endif
                    }},
                    {"IsOverSelection", new MemberRegisterInfo { Name = "IsOverSelection", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_IsOverSelection
#endif
                    }},
                    {"SelectToPosition", new MemberRegisterInfo { Name = "SelectToPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_SelectToPosition
#endif
                    }},
                    {"SelectLeft", new MemberRegisterInfo { Name = "SelectLeft", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_SelectLeft
#endif
                    }},
                    {"SelectRight", new MemberRegisterInfo { Name = "SelectRight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_SelectRight
#endif
                    }},
                    {"SelectUp", new MemberRegisterInfo { Name = "SelectUp", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_SelectUp
#endif
                    }},
                    {"SelectDown", new MemberRegisterInfo { Name = "SelectDown", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_SelectDown
#endif
                    }},
                    {"SelectTextEnd", new MemberRegisterInfo { Name = "SelectTextEnd", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_SelectTextEnd
#endif
                    }},
                    {"SelectTextStart", new MemberRegisterInfo { Name = "SelectTextStart", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_SelectTextStart
#endif
                    }},
                    {"MouseDragSelectsWholeWords", new MemberRegisterInfo { Name = "MouseDragSelectsWholeWords", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_MouseDragSelectsWholeWords
#endif
                    }},
                    {"DblClickSnap", new MemberRegisterInfo { Name = "DblClickSnap", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_DblClickSnap
#endif
                    }},
                    {"MoveWordRight", new MemberRegisterInfo { Name = "MoveWordRight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_MoveWordRight
#endif
                    }},
                    {"MoveToStartOfNextWord", new MemberRegisterInfo { Name = "MoveToStartOfNextWord", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_MoveToStartOfNextWord
#endif
                    }},
                    {"MoveToEndOfPreviousWord", new MemberRegisterInfo { Name = "MoveToEndOfPreviousWord", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_MoveToEndOfPreviousWord
#endif
                    }},
                    {"SelectToStartOfNextWord", new MemberRegisterInfo { Name = "SelectToStartOfNextWord", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_SelectToStartOfNextWord
#endif
                    }},
                    {"SelectToEndOfPreviousWord", new MemberRegisterInfo { Name = "SelectToEndOfPreviousWord", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_SelectToEndOfPreviousWord
#endif
                    }},
                    {"FindStartOfNextWord", new MemberRegisterInfo { Name = "FindStartOfNextWord", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_FindStartOfNextWord
#endif
                    }},
                    {"MoveWordLeft", new MemberRegisterInfo { Name = "MoveWordLeft", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_MoveWordLeft
#endif
                    }},
                    {"SelectWordRight", new MemberRegisterInfo { Name = "SelectWordRight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_SelectWordRight
#endif
                    }},
                    {"SelectWordLeft", new MemberRegisterInfo { Name = "SelectWordLeft", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_SelectWordLeft
#endif
                    }},
                    {"ExpandSelectGraphicalLineStart", new MemberRegisterInfo { Name = "ExpandSelectGraphicalLineStart", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_ExpandSelectGraphicalLineStart
#endif
                    }},
                    {"ExpandSelectGraphicalLineEnd", new MemberRegisterInfo { Name = "ExpandSelectGraphicalLineEnd", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_ExpandSelectGraphicalLineEnd
#endif
                    }},
                    {"SelectGraphicalLineStart", new MemberRegisterInfo { Name = "SelectGraphicalLineStart", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_SelectGraphicalLineStart
#endif
                    }},
                    {"SelectGraphicalLineEnd", new MemberRegisterInfo { Name = "SelectGraphicalLineEnd", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_SelectGraphicalLineEnd
#endif
                    }},
                    {"SelectParagraphForward", new MemberRegisterInfo { Name = "SelectParagraphForward", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_SelectParagraphForward
#endif
                    }},
                    {"SelectParagraphBackward", new MemberRegisterInfo { Name = "SelectParagraphBackward", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_SelectParagraphBackward
#endif
                    }},
                    {"SelectCurrentWord", new MemberRegisterInfo { Name = "SelectCurrentWord", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_SelectCurrentWord
#endif
                    }},
                    {"SelectCurrentParagraph", new MemberRegisterInfo { Name = "SelectCurrentParagraph", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_SelectCurrentParagraph
#endif
                    }},
                    {"UpdateScrollOffsetIfNeeded", new MemberRegisterInfo { Name = "UpdateScrollOffsetIfNeeded", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_UpdateScrollOffsetIfNeeded
#endif
                    }},
                    {"DrawCursor", new MemberRegisterInfo { Name = "DrawCursor", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_DrawCursor
#endif
                    }},
                    {"SaveBackup", new MemberRegisterInfo { Name = "SaveBackup", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_SaveBackup
#endif
                    }},
                    {"Undo", new MemberRegisterInfo { Name = "Undo", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_Undo
#endif
                    }},
                    {"Cut", new MemberRegisterInfo { Name = "Cut", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_Cut
#endif
                    }},
                    {"Copy", new MemberRegisterInfo { Name = "Copy", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_Copy
#endif
                    }},
                    {"Paste", new MemberRegisterInfo { Name = "Paste", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_Paste
#endif
                    }},
                    {"DetectFocusChange", new MemberRegisterInfo { Name = "DetectFocusChange", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextEditor_Wrap.M_DetectFocusChange
#endif
                    }},
                    {"text", new MemberRegisterInfo { Name = "text", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextEditor_Wrap.G_text, PropertySetter = UnityEngine_TextEditor_Wrap.S_text
#endif
                    }},
                    {"position", new MemberRegisterInfo { Name = "position", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextEditor_Wrap.G_position, PropertySetter = UnityEngine_TextEditor_Wrap.S_position
#endif
                    }},
                    {"cursorIndex", new MemberRegisterInfo { Name = "cursorIndex", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextEditor_Wrap.G_cursorIndex, PropertySetter = UnityEngine_TextEditor_Wrap.S_cursorIndex
#endif
                    }},
                    {"selectIndex", new MemberRegisterInfo { Name = "selectIndex", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextEditor_Wrap.G_selectIndex, PropertySetter = UnityEngine_TextEditor_Wrap.S_selectIndex
#endif
                    }},
                    {"doubleClickSnapping", new MemberRegisterInfo { Name = "doubleClickSnapping", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextEditor_Wrap.G_doubleClickSnapping, PropertySetter = UnityEngine_TextEditor_Wrap.S_doubleClickSnapping
#endif
                    }},
                    {"altCursorPosition", new MemberRegisterInfo { Name = "altCursorPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextEditor_Wrap.G_altCursorPosition, PropertySetter = UnityEngine_TextEditor_Wrap.S_altCursorPosition
#endif
                    }},
                    {"hasSelection", new MemberRegisterInfo { Name = "hasSelection", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextEditor_Wrap.G_hasSelection
#endif
                    }},
                    {"SelectedText", new MemberRegisterInfo { Name = "SelectedText", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextEditor_Wrap.G_SelectedText
#endif
                    }},
                    {"keyboardOnScreen", new MemberRegisterInfo { Name = "keyboardOnScreen", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextEditor_Wrap.G_keyboardOnScreen, PropertySetter = UnityEngine_TextEditor_Wrap.S_keyboardOnScreen
#endif
                    }},
                    {"controlID", new MemberRegisterInfo { Name = "controlID", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextEditor_Wrap.G_controlID, PropertySetter = UnityEngine_TextEditor_Wrap.S_controlID
#endif
                    }},
                    {"style", new MemberRegisterInfo { Name = "style", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextEditor_Wrap.G_style, PropertySetter = UnityEngine_TextEditor_Wrap.S_style
#endif
                    }},
                    {"multiline", new MemberRegisterInfo { Name = "multiline", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextEditor_Wrap.G_multiline, PropertySetter = UnityEngine_TextEditor_Wrap.S_multiline
#endif
                    }},
                    {"hasHorizontalCursorPos", new MemberRegisterInfo { Name = "hasHorizontalCursorPos", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextEditor_Wrap.G_hasHorizontalCursorPos, PropertySetter = UnityEngine_TextEditor_Wrap.S_hasHorizontalCursorPos
#endif
                    }},
                    {"isPasswordField", new MemberRegisterInfo { Name = "isPasswordField", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextEditor_Wrap.G_isPasswordField, PropertySetter = UnityEngine_TextEditor_Wrap.S_isPasswordField
#endif
                    }},
                    {"scrollOffset", new MemberRegisterInfo { Name = "scrollOffset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextEditor_Wrap.G_scrollOffset, PropertySetter = UnityEngine_TextEditor_Wrap.S_scrollOffset
#endif
                    }},
                    {"graphicalCursorPos", new MemberRegisterInfo { Name = "graphicalCursorPos", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextEditor_Wrap.G_graphicalCursorPos, PropertySetter = UnityEngine_TextEditor_Wrap.S_graphicalCursorPos
#endif
                    }},
                    {"graphicalSelectCursorPos", new MemberRegisterInfo { Name = "graphicalSelectCursorPos", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextEditor_Wrap.G_graphicalSelectCursorPos, PropertySetter = UnityEngine_TextEditor_Wrap.S_graphicalSelectCursorPos
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ImageConversion_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"EncodeToTGA_static", new MemberRegisterInfo { Name = "EncodeToTGA", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ImageConversion_Wrap.F_EncodeToTGA
#endif
                    }},
                    {"EncodeToPNG_static", new MemberRegisterInfo { Name = "EncodeToPNG", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ImageConversion_Wrap.F_EncodeToPNG
#endif
                    }},
                    {"EncodeToJPG_static", new MemberRegisterInfo { Name = "EncodeToJPG", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ImageConversion_Wrap.F_EncodeToJPG
#endif
                    }},
                    {"EncodeToEXR_static", new MemberRegisterInfo { Name = "EncodeToEXR", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ImageConversion_Wrap.F_EncodeToEXR
#endif
                    }},
                    {"LoadImage_static", new MemberRegisterInfo { Name = "LoadImage", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ImageConversion_Wrap.F_LoadImage
#endif
                    }},
                    {"EncodeArrayToTGA_static", new MemberRegisterInfo { Name = "EncodeArrayToTGA", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ImageConversion_Wrap.F_EncodeArrayToTGA
#endif
                    }},
                    {"EncodeArrayToPNG_static", new MemberRegisterInfo { Name = "EncodeArrayToPNG", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ImageConversion_Wrap.F_EncodeArrayToPNG
#endif
                    }},
                    {"EncodeArrayToJPG_static", new MemberRegisterInfo { Name = "EncodeArrayToJPG", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ImageConversion_Wrap.F_EncodeArrayToJPG
#endif
                    }},
                    {"EncodeArrayToEXR_static", new MemberRegisterInfo { Name = "EncodeArrayToEXR", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ImageConversion_Wrap.F_EncodeArrayToEXR
#endif
                    }},
                    {"EnableLegacyPngGammaRuntimeLoadBehavior_static", new MemberRegisterInfo { Name = "EnableLegacyPngGammaRuntimeLoadBehavior", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ImageConversion_Wrap.G_EnableLegacyPngGammaRuntimeLoadBehavior, PropertySetter = UnityEngine_ImageConversion_Wrap.S_EnableLegacyPngGammaRuntimeLoadBehavior
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Touch_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Touch_Wrap.Constructor
#endif
                    }},
                    {"fingerId", new MemberRegisterInfo { Name = "fingerId", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Touch_Wrap.G_fingerId, PropertySetter = UnityEngine_Touch_Wrap.S_fingerId
#endif
                    }},
                    {"position", new MemberRegisterInfo { Name = "position", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Touch_Wrap.G_position, PropertySetter = UnityEngine_Touch_Wrap.S_position
#endif
                    }},
                    {"rawPosition", new MemberRegisterInfo { Name = "rawPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Touch_Wrap.G_rawPosition, PropertySetter = UnityEngine_Touch_Wrap.S_rawPosition
#endif
                    }},
                    {"deltaPosition", new MemberRegisterInfo { Name = "deltaPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Touch_Wrap.G_deltaPosition, PropertySetter = UnityEngine_Touch_Wrap.S_deltaPosition
#endif
                    }},
                    {"deltaTime", new MemberRegisterInfo { Name = "deltaTime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Touch_Wrap.G_deltaTime, PropertySetter = UnityEngine_Touch_Wrap.S_deltaTime
#endif
                    }},
                    {"tapCount", new MemberRegisterInfo { Name = "tapCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Touch_Wrap.G_tapCount, PropertySetter = UnityEngine_Touch_Wrap.S_tapCount
#endif
                    }},
                    {"phase", new MemberRegisterInfo { Name = "phase", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Touch_Wrap.G_phase, PropertySetter = UnityEngine_Touch_Wrap.S_phase
#endif
                    }},
                    {"pressure", new MemberRegisterInfo { Name = "pressure", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Touch_Wrap.G_pressure, PropertySetter = UnityEngine_Touch_Wrap.S_pressure
#endif
                    }},
                    {"maximumPossiblePressure", new MemberRegisterInfo { Name = "maximumPossiblePressure", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Touch_Wrap.G_maximumPossiblePressure, PropertySetter = UnityEngine_Touch_Wrap.S_maximumPossiblePressure
#endif
                    }},
                    {"type", new MemberRegisterInfo { Name = "type", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Touch_Wrap.G_type, PropertySetter = UnityEngine_Touch_Wrap.S_type
#endif
                    }},
                    {"altitudeAngle", new MemberRegisterInfo { Name = "altitudeAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Touch_Wrap.G_altitudeAngle, PropertySetter = UnityEngine_Touch_Wrap.S_altitudeAngle
#endif
                    }},
                    {"azimuthAngle", new MemberRegisterInfo { Name = "azimuthAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Touch_Wrap.G_azimuthAngle, PropertySetter = UnityEngine_Touch_Wrap.S_azimuthAngle
#endif
                    }},
                    {"radius", new MemberRegisterInfo { Name = "radius", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Touch_Wrap.G_radius, PropertySetter = UnityEngine_Touch_Wrap.S_radius
#endif
                    }},
                    {"radiusVariance", new MemberRegisterInfo { Name = "radiusVariance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Touch_Wrap.G_radiusVariance, PropertySetter = UnityEngine_Touch_Wrap.S_radiusVariance
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AccelerationEvent_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AccelerationEvent_Wrap.Constructor
#endif
                    }},
                    {"acceleration", new MemberRegisterInfo { Name = "acceleration", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AccelerationEvent_Wrap.G_acceleration
#endif
                    }},
                    {"deltaTime", new MemberRegisterInfo { Name = "deltaTime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AccelerationEvent_Wrap.G_deltaTime
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Gyroscope_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"rotationRate", new MemberRegisterInfo { Name = "rotationRate", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Gyroscope_Wrap.G_rotationRate
#endif
                    }},
                    {"rotationRateUnbiased", new MemberRegisterInfo { Name = "rotationRateUnbiased", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Gyroscope_Wrap.G_rotationRateUnbiased
#endif
                    }},
                    {"gravity", new MemberRegisterInfo { Name = "gravity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Gyroscope_Wrap.G_gravity
#endif
                    }},
                    {"userAcceleration", new MemberRegisterInfo { Name = "userAcceleration", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Gyroscope_Wrap.G_userAcceleration
#endif
                    }},
                    {"attitude", new MemberRegisterInfo { Name = "attitude", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Gyroscope_Wrap.G_attitude
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Gyroscope_Wrap.G_enabled, PropertySetter = UnityEngine_Gyroscope_Wrap.S_enabled
#endif
                    }},
                    {"updateInterval", new MemberRegisterInfo { Name = "updateInterval", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Gyroscope_Wrap.G_updateInterval, PropertySetter = UnityEngine_Gyroscope_Wrap.S_updateInterval
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_LocationInfo_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_LocationInfo_Wrap.Constructor
#endif
                    }},
                    {"latitude", new MemberRegisterInfo { Name = "latitude", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LocationInfo_Wrap.G_latitude
#endif
                    }},
                    {"longitude", new MemberRegisterInfo { Name = "longitude", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LocationInfo_Wrap.G_longitude
#endif
                    }},
                    {"altitude", new MemberRegisterInfo { Name = "altitude", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LocationInfo_Wrap.G_altitude
#endif
                    }},
                    {"horizontalAccuracy", new MemberRegisterInfo { Name = "horizontalAccuracy", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LocationInfo_Wrap.G_horizontalAccuracy
#endif
                    }},
                    {"verticalAccuracy", new MemberRegisterInfo { Name = "verticalAccuracy", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LocationInfo_Wrap.G_verticalAccuracy
#endif
                    }},
                    {"timestamp", new MemberRegisterInfo { Name = "timestamp", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LocationInfo_Wrap.G_timestamp
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_LocationService_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_LocationService_Wrap.Constructor
#endif
                    }},
                    {"Start", new MemberRegisterInfo { Name = "Start", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LocationService_Wrap.M_Start
#endif
                    }},
                    {"Stop", new MemberRegisterInfo { Name = "Stop", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LocationService_Wrap.M_Stop
#endif
                    }},
                    {"isEnabledByUser", new MemberRegisterInfo { Name = "isEnabledByUser", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LocationService_Wrap.G_isEnabledByUser
#endif
                    }},
                    {"status", new MemberRegisterInfo { Name = "status", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LocationService_Wrap.G_status
#endif
                    }},
                    {"lastData", new MemberRegisterInfo { Name = "lastData", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LocationService_Wrap.G_lastData
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Compass_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Compass_Wrap.Constructor
#endif
                    }},
                    {"magneticHeading", new MemberRegisterInfo { Name = "magneticHeading", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Compass_Wrap.G_magneticHeading
#endif
                    }},
                    {"trueHeading", new MemberRegisterInfo { Name = "trueHeading", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Compass_Wrap.G_trueHeading
#endif
                    }},
                    {"headingAccuracy", new MemberRegisterInfo { Name = "headingAccuracy", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Compass_Wrap.G_headingAccuracy
#endif
                    }},
                    {"rawVector", new MemberRegisterInfo { Name = "rawVector", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Compass_Wrap.G_rawVector
#endif
                    }},
                    {"timestamp", new MemberRegisterInfo { Name = "timestamp", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Compass_Wrap.G_timestamp
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Compass_Wrap.G_enabled, PropertySetter = UnityEngine_Compass_Wrap.S_enabled
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Input_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Input_Wrap.Constructor
#endif
                    }},
                    {"GetAxis_static", new MemberRegisterInfo { Name = "GetAxis", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Input_Wrap.F_GetAxis
#endif
                    }},
                    {"GetAxisRaw_static", new MemberRegisterInfo { Name = "GetAxisRaw", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Input_Wrap.F_GetAxisRaw
#endif
                    }},
                    {"GetButton_static", new MemberRegisterInfo { Name = "GetButton", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Input_Wrap.F_GetButton
#endif
                    }},
                    {"GetButtonDown_static", new MemberRegisterInfo { Name = "GetButtonDown", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Input_Wrap.F_GetButtonDown
#endif
                    }},
                    {"GetButtonUp_static", new MemberRegisterInfo { Name = "GetButtonUp", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Input_Wrap.F_GetButtonUp
#endif
                    }},
                    {"GetMouseButton_static", new MemberRegisterInfo { Name = "GetMouseButton", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Input_Wrap.F_GetMouseButton
#endif
                    }},
                    {"GetMouseButtonDown_static", new MemberRegisterInfo { Name = "GetMouseButtonDown", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Input_Wrap.F_GetMouseButtonDown
#endif
                    }},
                    {"GetMouseButtonUp_static", new MemberRegisterInfo { Name = "GetMouseButtonUp", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Input_Wrap.F_GetMouseButtonUp
#endif
                    }},
                    {"ResetInputAxes_static", new MemberRegisterInfo { Name = "ResetInputAxes", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Input_Wrap.F_ResetInputAxes
#endif
                    }},
                    {"IsJoystickPreconfigured_static", new MemberRegisterInfo { Name = "IsJoystickPreconfigured", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"GetJoystickNames_static", new MemberRegisterInfo { Name = "GetJoystickNames", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Input_Wrap.F_GetJoystickNames
#endif
                    }},
                    {"GetTouch_static", new MemberRegisterInfo { Name = "GetTouch", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Input_Wrap.F_GetTouch
#endif
                    }},
                    {"GetAccelerationEvent_static", new MemberRegisterInfo { Name = "GetAccelerationEvent", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Input_Wrap.F_GetAccelerationEvent
#endif
                    }},
                    {"GetKey_static", new MemberRegisterInfo { Name = "GetKey", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Input_Wrap.F_GetKey
#endif
                    }},
                    {"GetKeyUp_static", new MemberRegisterInfo { Name = "GetKeyUp", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Input_Wrap.F_GetKeyUp
#endif
                    }},
                    {"GetKeyDown_static", new MemberRegisterInfo { Name = "GetKeyDown", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Input_Wrap.F_GetKeyDown
#endif
                    }},
                    {"simulateMouseWithTouches_static", new MemberRegisterInfo { Name = "simulateMouseWithTouches", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_simulateMouseWithTouches, PropertySetter = UnityEngine_Input_Wrap.S_simulateMouseWithTouches
#endif
                    }},
                    {"anyKey_static", new MemberRegisterInfo { Name = "anyKey", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_anyKey
#endif
                    }},
                    {"anyKeyDown_static", new MemberRegisterInfo { Name = "anyKeyDown", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_anyKeyDown
#endif
                    }},
                    {"inputString_static", new MemberRegisterInfo { Name = "inputString", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_inputString
#endif
                    }},
                    {"mousePosition_static", new MemberRegisterInfo { Name = "mousePosition", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_mousePosition
#endif
                    }},
                    {"mouseScrollDelta_static", new MemberRegisterInfo { Name = "mouseScrollDelta", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_mouseScrollDelta
#endif
                    }},
                    {"imeCompositionMode_static", new MemberRegisterInfo { Name = "imeCompositionMode", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_imeCompositionMode, PropertySetter = UnityEngine_Input_Wrap.S_imeCompositionMode
#endif
                    }},
                    {"compositionString_static", new MemberRegisterInfo { Name = "compositionString", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_compositionString
#endif
                    }},
                    {"imeIsSelected_static", new MemberRegisterInfo { Name = "imeIsSelected", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_imeIsSelected
#endif
                    }},
                    {"compositionCursorPos_static", new MemberRegisterInfo { Name = "compositionCursorPos", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_compositionCursorPos, PropertySetter = UnityEngine_Input_Wrap.S_compositionCursorPos
#endif
                    }},
                    {"mousePresent_static", new MemberRegisterInfo { Name = "mousePresent", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_mousePresent
#endif
                    }},
                    {"touchCount_static", new MemberRegisterInfo { Name = "touchCount", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_touchCount
#endif
                    }},
                    {"touchPressureSupported_static", new MemberRegisterInfo { Name = "touchPressureSupported", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_touchPressureSupported
#endif
                    }},
                    {"stylusTouchSupported_static", new MemberRegisterInfo { Name = "stylusTouchSupported", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_stylusTouchSupported
#endif
                    }},
                    {"touchSupported_static", new MemberRegisterInfo { Name = "touchSupported", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_touchSupported
#endif
                    }},
                    {"multiTouchEnabled_static", new MemberRegisterInfo { Name = "multiTouchEnabled", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_multiTouchEnabled, PropertySetter = UnityEngine_Input_Wrap.S_multiTouchEnabled
#endif
                    }},
                    {"deviceOrientation_static", new MemberRegisterInfo { Name = "deviceOrientation", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_deviceOrientation
#endif
                    }},
                    {"acceleration_static", new MemberRegisterInfo { Name = "acceleration", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_acceleration
#endif
                    }},
                    {"compensateSensors_static", new MemberRegisterInfo { Name = "compensateSensors", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_compensateSensors, PropertySetter = UnityEngine_Input_Wrap.S_compensateSensors
#endif
                    }},
                    {"accelerationEventCount_static", new MemberRegisterInfo { Name = "accelerationEventCount", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_accelerationEventCount
#endif
                    }},
                    {"backButtonLeavesApp_static", new MemberRegisterInfo { Name = "backButtonLeavesApp", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_backButtonLeavesApp, PropertySetter = UnityEngine_Input_Wrap.S_backButtonLeavesApp
#endif
                    }},
                    {"location_static", new MemberRegisterInfo { Name = "location", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_location
#endif
                    }},
                    {"compass_static", new MemberRegisterInfo { Name = "compass", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_compass
#endif
                    }},
                    {"gyro_static", new MemberRegisterInfo { Name = "gyro", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_gyro
#endif
                    }},
                    {"touches_static", new MemberRegisterInfo { Name = "touches", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_touches
#endif
                    }},
                    {"accelerationEvents_static", new MemberRegisterInfo { Name = "accelerationEvents", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Input_Wrap.G_accelerationEvents
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_JsonUtility_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"ToJson_static", new MemberRegisterInfo { Name = "ToJson", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_JsonUtility_Wrap.F_ToJson
#endif
                    }},
                    {"FromJson_static", new MemberRegisterInfo { Name = "FromJson", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_JsonUtility_Wrap.F_FromJson
#endif
                    }},
                    {"FromJsonOverwrite_static", new MemberRegisterInfo { Name = "FromJsonOverwrite", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_JsonUtility_Wrap.F_FromJsonOverwrite
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_LocalizationAsset_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_LocalizationAsset_Wrap.Constructor
#endif
                    }},
                    {"SetLocalizedString", new MemberRegisterInfo { Name = "SetLocalizedString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LocalizationAsset_Wrap.M_SetLocalizedString
#endif
                    }},
                    {"GetLocalizedString", new MemberRegisterInfo { Name = "GetLocalizedString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_LocalizationAsset_Wrap.M_GetLocalizedString
#endif
                    }},
                    {"localeIsoCode", new MemberRegisterInfo { Name = "localeIsoCode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LocalizationAsset_Wrap.G_localeIsoCode, PropertySetter = UnityEngine_LocalizationAsset_Wrap.S_localeIsoCode
#endif
                    }},
                    {"isEditorAsset", new MemberRegisterInfo { Name = "isEditorAsset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_LocalizationAsset_Wrap.G_isEditorAsset, PropertySetter = UnityEngine_LocalizationAsset_Wrap.S_isEditorAsset
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_MinMaxCurve_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_MinMaxCurve_Wrap.Constructor
#endif
                    }},
                    {"Evaluate", new MemberRegisterInfo { Name = "Evaluate", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_MinMaxCurve_Wrap.M_Evaluate
#endif
                    }},
                    {"mode", new MemberRegisterInfo { Name = "mode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MinMaxCurve_Wrap.G_mode, PropertySetter = UnityEngine_ParticleSystem_MinMaxCurve_Wrap.S_mode
#endif
                    }},
                    {"curveMultiplier", new MemberRegisterInfo { Name = "curveMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MinMaxCurve_Wrap.G_curveMultiplier, PropertySetter = UnityEngine_ParticleSystem_MinMaxCurve_Wrap.S_curveMultiplier
#endif
                    }},
                    {"curveMax", new MemberRegisterInfo { Name = "curveMax", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MinMaxCurve_Wrap.G_curveMax, PropertySetter = UnityEngine_ParticleSystem_MinMaxCurve_Wrap.S_curveMax
#endif
                    }},
                    {"curveMin", new MemberRegisterInfo { Name = "curveMin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MinMaxCurve_Wrap.G_curveMin, PropertySetter = UnityEngine_ParticleSystem_MinMaxCurve_Wrap.S_curveMin
#endif
                    }},
                    {"constantMax", new MemberRegisterInfo { Name = "constantMax", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MinMaxCurve_Wrap.G_constantMax, PropertySetter = UnityEngine_ParticleSystem_MinMaxCurve_Wrap.S_constantMax
#endif
                    }},
                    {"constantMin", new MemberRegisterInfo { Name = "constantMin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MinMaxCurve_Wrap.G_constantMin, PropertySetter = UnityEngine_ParticleSystem_MinMaxCurve_Wrap.S_constantMin
#endif
                    }},
                    {"constant", new MemberRegisterInfo { Name = "constant", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MinMaxCurve_Wrap.G_constant, PropertySetter = UnityEngine_ParticleSystem_MinMaxCurve_Wrap.S_constant
#endif
                    }},
                    {"curve", new MemberRegisterInfo { Name = "curve", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MinMaxCurve_Wrap.G_curve, PropertySetter = UnityEngine_ParticleSystem_MinMaxCurve_Wrap.S_curve
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_MainModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_MainModule_Wrap.Constructor
#endif
                    }},
                    {"duration", new MemberRegisterInfo { Name = "duration", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_duration, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_duration
#endif
                    }},
                    {"loop", new MemberRegisterInfo { Name = "loop", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_loop, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_loop
#endif
                    }},
                    {"prewarm", new MemberRegisterInfo { Name = "prewarm", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_prewarm, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_prewarm
#endif
                    }},
                    {"startDelay", new MemberRegisterInfo { Name = "startDelay", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startDelay, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startDelay
#endif
                    }},
                    {"startDelayMultiplier", new MemberRegisterInfo { Name = "startDelayMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startDelayMultiplier, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startDelayMultiplier
#endif
                    }},
                    {"startLifetime", new MemberRegisterInfo { Name = "startLifetime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startLifetime, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startLifetime
#endif
                    }},
                    {"startLifetimeMultiplier", new MemberRegisterInfo { Name = "startLifetimeMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startLifetimeMultiplier, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startLifetimeMultiplier
#endif
                    }},
                    {"startSpeed", new MemberRegisterInfo { Name = "startSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startSpeed, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startSpeed
#endif
                    }},
                    {"startSpeedMultiplier", new MemberRegisterInfo { Name = "startSpeedMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startSpeedMultiplier, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startSpeedMultiplier
#endif
                    }},
                    {"startSize3D", new MemberRegisterInfo { Name = "startSize3D", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startSize3D, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startSize3D
#endif
                    }},
                    {"startSize", new MemberRegisterInfo { Name = "startSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startSize, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startSize
#endif
                    }},
                    {"startSizeMultiplier", new MemberRegisterInfo { Name = "startSizeMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startSizeMultiplier, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startSizeMultiplier
#endif
                    }},
                    {"startSizeX", new MemberRegisterInfo { Name = "startSizeX", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startSizeX, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startSizeX
#endif
                    }},
                    {"startSizeXMultiplier", new MemberRegisterInfo { Name = "startSizeXMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startSizeXMultiplier, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startSizeXMultiplier
#endif
                    }},
                    {"startSizeY", new MemberRegisterInfo { Name = "startSizeY", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startSizeY, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startSizeY
#endif
                    }},
                    {"startSizeYMultiplier", new MemberRegisterInfo { Name = "startSizeYMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startSizeYMultiplier, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startSizeYMultiplier
#endif
                    }},
                    {"startSizeZ", new MemberRegisterInfo { Name = "startSizeZ", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startSizeZ, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startSizeZ
#endif
                    }},
                    {"startSizeZMultiplier", new MemberRegisterInfo { Name = "startSizeZMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startSizeZMultiplier, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startSizeZMultiplier
#endif
                    }},
                    {"startRotation3D", new MemberRegisterInfo { Name = "startRotation3D", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startRotation3D, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startRotation3D
#endif
                    }},
                    {"startRotation", new MemberRegisterInfo { Name = "startRotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startRotation, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startRotation
#endif
                    }},
                    {"startRotationMultiplier", new MemberRegisterInfo { Name = "startRotationMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startRotationMultiplier, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startRotationMultiplier
#endif
                    }},
                    {"startRotationX", new MemberRegisterInfo { Name = "startRotationX", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startRotationX, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startRotationX
#endif
                    }},
                    {"startRotationXMultiplier", new MemberRegisterInfo { Name = "startRotationXMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startRotationXMultiplier, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startRotationXMultiplier
#endif
                    }},
                    {"startRotationY", new MemberRegisterInfo { Name = "startRotationY", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startRotationY, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startRotationY
#endif
                    }},
                    {"startRotationYMultiplier", new MemberRegisterInfo { Name = "startRotationYMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startRotationYMultiplier, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startRotationYMultiplier
#endif
                    }},
                    {"startRotationZ", new MemberRegisterInfo { Name = "startRotationZ", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startRotationZ, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startRotationZ
#endif
                    }},
                    {"startRotationZMultiplier", new MemberRegisterInfo { Name = "startRotationZMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startRotationZMultiplier, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startRotationZMultiplier
#endif
                    }},
                    {"flipRotation", new MemberRegisterInfo { Name = "flipRotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_flipRotation, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_flipRotation
#endif
                    }},
                    {"startColor", new MemberRegisterInfo { Name = "startColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_startColor, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_startColor
#endif
                    }},
                    {"gravityModifier", new MemberRegisterInfo { Name = "gravityModifier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_gravityModifier, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_gravityModifier
#endif
                    }},
                    {"gravityModifierMultiplier", new MemberRegisterInfo { Name = "gravityModifierMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_gravityModifierMultiplier, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_gravityModifierMultiplier
#endif
                    }},
                    {"simulationSpace", new MemberRegisterInfo { Name = "simulationSpace", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_simulationSpace, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_simulationSpace
#endif
                    }},
                    {"customSimulationSpace", new MemberRegisterInfo { Name = "customSimulationSpace", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_customSimulationSpace, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_customSimulationSpace
#endif
                    }},
                    {"simulationSpeed", new MemberRegisterInfo { Name = "simulationSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_simulationSpeed, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_simulationSpeed
#endif
                    }},
                    {"useUnscaledTime", new MemberRegisterInfo { Name = "useUnscaledTime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_useUnscaledTime, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_useUnscaledTime
#endif
                    }},
                    {"scalingMode", new MemberRegisterInfo { Name = "scalingMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_scalingMode, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_scalingMode
#endif
                    }},
                    {"playOnAwake", new MemberRegisterInfo { Name = "playOnAwake", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_playOnAwake, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_playOnAwake
#endif
                    }},
                    {"maxParticles", new MemberRegisterInfo { Name = "maxParticles", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_maxParticles, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_maxParticles
#endif
                    }},
                    {"emitterVelocityMode", new MemberRegisterInfo { Name = "emitterVelocityMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_emitterVelocityMode, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_emitterVelocityMode
#endif
                    }},
                    {"stopAction", new MemberRegisterInfo { Name = "stopAction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_stopAction, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_stopAction
#endif
                    }},
                    {"ringBufferMode", new MemberRegisterInfo { Name = "ringBufferMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_ringBufferMode, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_ringBufferMode
#endif
                    }},
                    {"ringBufferLoopRange", new MemberRegisterInfo { Name = "ringBufferLoopRange", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_ringBufferLoopRange, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_ringBufferLoopRange
#endif
                    }},
                    {"cullingMode", new MemberRegisterInfo { Name = "cullingMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MainModule_Wrap.G_cullingMode, PropertySetter = UnityEngine_ParticleSystem_MainModule_Wrap.S_cullingMode
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_EmissionModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_EmissionModule_Wrap.Constructor
#endif
                    }},
                    {"SetBursts", new MemberRegisterInfo { Name = "SetBursts", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_EmissionModule_Wrap.M_SetBursts
#endif
                    }},
                    {"GetBursts", new MemberRegisterInfo { Name = "GetBursts", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_EmissionModule_Wrap.M_GetBursts
#endif
                    }},
                    {"SetBurst", new MemberRegisterInfo { Name = "SetBurst", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_EmissionModule_Wrap.M_SetBurst
#endif
                    }},
                    {"GetBurst", new MemberRegisterInfo { Name = "GetBurst", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_EmissionModule_Wrap.M_GetBurst
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_EmissionModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_EmissionModule_Wrap.S_enabled
#endif
                    }},
                    {"rateOverTime", new MemberRegisterInfo { Name = "rateOverTime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_EmissionModule_Wrap.G_rateOverTime, PropertySetter = UnityEngine_ParticleSystem_EmissionModule_Wrap.S_rateOverTime
#endif
                    }},
                    {"rateOverTimeMultiplier", new MemberRegisterInfo { Name = "rateOverTimeMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_EmissionModule_Wrap.G_rateOverTimeMultiplier, PropertySetter = UnityEngine_ParticleSystem_EmissionModule_Wrap.S_rateOverTimeMultiplier
#endif
                    }},
                    {"rateOverDistance", new MemberRegisterInfo { Name = "rateOverDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_EmissionModule_Wrap.G_rateOverDistance, PropertySetter = UnityEngine_ParticleSystem_EmissionModule_Wrap.S_rateOverDistance
#endif
                    }},
                    {"rateOverDistanceMultiplier", new MemberRegisterInfo { Name = "rateOverDistanceMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_EmissionModule_Wrap.G_rateOverDistanceMultiplier, PropertySetter = UnityEngine_ParticleSystem_EmissionModule_Wrap.S_rateOverDistanceMultiplier
#endif
                    }},
                    {"burstCount", new MemberRegisterInfo { Name = "burstCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_EmissionModule_Wrap.G_burstCount, PropertySetter = UnityEngine_ParticleSystem_EmissionModule_Wrap.S_burstCount
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_ShapeModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_ShapeModule_Wrap.Constructor
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_enabled
#endif
                    }},
                    {"shapeType", new MemberRegisterInfo { Name = "shapeType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_shapeType, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_shapeType
#endif
                    }},
                    {"randomDirectionAmount", new MemberRegisterInfo { Name = "randomDirectionAmount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_randomDirectionAmount, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_randomDirectionAmount
#endif
                    }},
                    {"sphericalDirectionAmount", new MemberRegisterInfo { Name = "sphericalDirectionAmount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_sphericalDirectionAmount, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_sphericalDirectionAmount
#endif
                    }},
                    {"randomPositionAmount", new MemberRegisterInfo { Name = "randomPositionAmount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_randomPositionAmount, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_randomPositionAmount
#endif
                    }},
                    {"alignToDirection", new MemberRegisterInfo { Name = "alignToDirection", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_alignToDirection, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_alignToDirection
#endif
                    }},
                    {"radius", new MemberRegisterInfo { Name = "radius", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_radius, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_radius
#endif
                    }},
                    {"radiusMode", new MemberRegisterInfo { Name = "radiusMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_radiusMode, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_radiusMode
#endif
                    }},
                    {"radiusSpread", new MemberRegisterInfo { Name = "radiusSpread", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_radiusSpread, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_radiusSpread
#endif
                    }},
                    {"radiusSpeed", new MemberRegisterInfo { Name = "radiusSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_radiusSpeed, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_radiusSpeed
#endif
                    }},
                    {"radiusSpeedMultiplier", new MemberRegisterInfo { Name = "radiusSpeedMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_radiusSpeedMultiplier, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_radiusSpeedMultiplier
#endif
                    }},
                    {"radiusThickness", new MemberRegisterInfo { Name = "radiusThickness", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_radiusThickness, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_radiusThickness
#endif
                    }},
                    {"angle", new MemberRegisterInfo { Name = "angle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_angle, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_angle
#endif
                    }},
                    {"length", new MemberRegisterInfo { Name = "length", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_length, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_length
#endif
                    }},
                    {"boxThickness", new MemberRegisterInfo { Name = "boxThickness", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_boxThickness, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_boxThickness
#endif
                    }},
                    {"meshShapeType", new MemberRegisterInfo { Name = "meshShapeType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_meshShapeType, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_meshShapeType
#endif
                    }},
                    {"mesh", new MemberRegisterInfo { Name = "mesh", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_mesh, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_mesh
#endif
                    }},
                    {"meshRenderer", new MemberRegisterInfo { Name = "meshRenderer", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_meshRenderer, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_meshRenderer
#endif
                    }},
                    {"skinnedMeshRenderer", new MemberRegisterInfo { Name = "skinnedMeshRenderer", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_skinnedMeshRenderer, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_skinnedMeshRenderer
#endif
                    }},
                    {"sprite", new MemberRegisterInfo { Name = "sprite", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_sprite, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_sprite
#endif
                    }},
                    {"spriteRenderer", new MemberRegisterInfo { Name = "spriteRenderer", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_spriteRenderer, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_spriteRenderer
#endif
                    }},
                    {"useMeshMaterialIndex", new MemberRegisterInfo { Name = "useMeshMaterialIndex", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_useMeshMaterialIndex, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_useMeshMaterialIndex
#endif
                    }},
                    {"meshMaterialIndex", new MemberRegisterInfo { Name = "meshMaterialIndex", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_meshMaterialIndex, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_meshMaterialIndex
#endif
                    }},
                    {"useMeshColors", new MemberRegisterInfo { Name = "useMeshColors", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_useMeshColors, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_useMeshColors
#endif
                    }},
                    {"normalOffset", new MemberRegisterInfo { Name = "normalOffset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_normalOffset, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_normalOffset
#endif
                    }},
                    {"meshSpawnMode", new MemberRegisterInfo { Name = "meshSpawnMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_meshSpawnMode, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_meshSpawnMode
#endif
                    }},
                    {"meshSpawnSpread", new MemberRegisterInfo { Name = "meshSpawnSpread", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_meshSpawnSpread, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_meshSpawnSpread
#endif
                    }},
                    {"meshSpawnSpeed", new MemberRegisterInfo { Name = "meshSpawnSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_meshSpawnSpeed, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_meshSpawnSpeed
#endif
                    }},
                    {"meshSpawnSpeedMultiplier", new MemberRegisterInfo { Name = "meshSpawnSpeedMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_meshSpawnSpeedMultiplier, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_meshSpawnSpeedMultiplier
#endif
                    }},
                    {"arc", new MemberRegisterInfo { Name = "arc", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_arc, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_arc
#endif
                    }},
                    {"arcMode", new MemberRegisterInfo { Name = "arcMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_arcMode, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_arcMode
#endif
                    }},
                    {"arcSpread", new MemberRegisterInfo { Name = "arcSpread", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_arcSpread, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_arcSpread
#endif
                    }},
                    {"arcSpeed", new MemberRegisterInfo { Name = "arcSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_arcSpeed, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_arcSpeed
#endif
                    }},
                    {"arcSpeedMultiplier", new MemberRegisterInfo { Name = "arcSpeedMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_arcSpeedMultiplier, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_arcSpeedMultiplier
#endif
                    }},
                    {"donutRadius", new MemberRegisterInfo { Name = "donutRadius", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_donutRadius, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_donutRadius
#endif
                    }},
                    {"position", new MemberRegisterInfo { Name = "position", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_position, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_position
#endif
                    }},
                    {"rotation", new MemberRegisterInfo { Name = "rotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_rotation, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_rotation
#endif
                    }},
                    {"scale", new MemberRegisterInfo { Name = "scale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_scale, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_scale
#endif
                    }},
                    {"texture", new MemberRegisterInfo { Name = "texture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_texture, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_texture
#endif
                    }},
                    {"textureClipChannel", new MemberRegisterInfo { Name = "textureClipChannel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_textureClipChannel, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_textureClipChannel
#endif
                    }},
                    {"textureClipThreshold", new MemberRegisterInfo { Name = "textureClipThreshold", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_textureClipThreshold, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_textureClipThreshold
#endif
                    }},
                    {"textureColorAffectsParticles", new MemberRegisterInfo { Name = "textureColorAffectsParticles", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_textureColorAffectsParticles, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_textureColorAffectsParticles
#endif
                    }},
                    {"textureAlphaAffectsParticles", new MemberRegisterInfo { Name = "textureAlphaAffectsParticles", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_textureAlphaAffectsParticles, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_textureAlphaAffectsParticles
#endif
                    }},
                    {"textureBilinearFiltering", new MemberRegisterInfo { Name = "textureBilinearFiltering", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_textureBilinearFiltering, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_textureBilinearFiltering
#endif
                    }},
                    {"textureUVChannel", new MemberRegisterInfo { Name = "textureUVChannel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.G_textureUVChannel, PropertySetter = UnityEngine_ParticleSystem_ShapeModule_Wrap.S_textureUVChannel
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_CollisionModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_CollisionModule_Wrap.Constructor
#endif
                    }},
                    {"AddPlane", new MemberRegisterInfo { Name = "AddPlane", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_CollisionModule_Wrap.M_AddPlane
#endif
                    }},
                    {"RemovePlane", new MemberRegisterInfo { Name = "RemovePlane", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_CollisionModule_Wrap.M_RemovePlane
#endif
                    }},
                    {"SetPlane", new MemberRegisterInfo { Name = "SetPlane", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_CollisionModule_Wrap.M_SetPlane
#endif
                    }},
                    {"GetPlane", new MemberRegisterInfo { Name = "GetPlane", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_CollisionModule_Wrap.M_GetPlane
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_enabled
#endif
                    }},
                    {"type", new MemberRegisterInfo { Name = "type", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_type, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_type
#endif
                    }},
                    {"mode", new MemberRegisterInfo { Name = "mode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_mode, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_mode
#endif
                    }},
                    {"dampen", new MemberRegisterInfo { Name = "dampen", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_dampen, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_dampen
#endif
                    }},
                    {"dampenMultiplier", new MemberRegisterInfo { Name = "dampenMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_dampenMultiplier, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_dampenMultiplier
#endif
                    }},
                    {"bounce", new MemberRegisterInfo { Name = "bounce", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_bounce, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_bounce
#endif
                    }},
                    {"bounceMultiplier", new MemberRegisterInfo { Name = "bounceMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_bounceMultiplier, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_bounceMultiplier
#endif
                    }},
                    {"lifetimeLoss", new MemberRegisterInfo { Name = "lifetimeLoss", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_lifetimeLoss, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_lifetimeLoss
#endif
                    }},
                    {"lifetimeLossMultiplier", new MemberRegisterInfo { Name = "lifetimeLossMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_lifetimeLossMultiplier, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_lifetimeLossMultiplier
#endif
                    }},
                    {"minKillSpeed", new MemberRegisterInfo { Name = "minKillSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_minKillSpeed, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_minKillSpeed
#endif
                    }},
                    {"maxKillSpeed", new MemberRegisterInfo { Name = "maxKillSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_maxKillSpeed, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_maxKillSpeed
#endif
                    }},
                    {"collidesWith", new MemberRegisterInfo { Name = "collidesWith", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_collidesWith, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_collidesWith
#endif
                    }},
                    {"enableDynamicColliders", new MemberRegisterInfo { Name = "enableDynamicColliders", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_enableDynamicColliders, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_enableDynamicColliders
#endif
                    }},
                    {"maxCollisionShapes", new MemberRegisterInfo { Name = "maxCollisionShapes", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_maxCollisionShapes, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_maxCollisionShapes
#endif
                    }},
                    {"quality", new MemberRegisterInfo { Name = "quality", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_quality, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_quality
#endif
                    }},
                    {"voxelSize", new MemberRegisterInfo { Name = "voxelSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_voxelSize, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_voxelSize
#endif
                    }},
                    {"radiusScale", new MemberRegisterInfo { Name = "radiusScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_radiusScale, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_radiusScale
#endif
                    }},
                    {"sendCollisionMessages", new MemberRegisterInfo { Name = "sendCollisionMessages", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_sendCollisionMessages, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_sendCollisionMessages
#endif
                    }},
                    {"colliderForce", new MemberRegisterInfo { Name = "colliderForce", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_colliderForce, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_colliderForce
#endif
                    }},
                    {"multiplyColliderForceByCollisionAngle", new MemberRegisterInfo { Name = "multiplyColliderForceByCollisionAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_multiplyColliderForceByCollisionAngle, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_multiplyColliderForceByCollisionAngle
#endif
                    }},
                    {"multiplyColliderForceByParticleSpeed", new MemberRegisterInfo { Name = "multiplyColliderForceByParticleSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_multiplyColliderForceByParticleSpeed, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_multiplyColliderForceByParticleSpeed
#endif
                    }},
                    {"multiplyColliderForceByParticleSize", new MemberRegisterInfo { Name = "multiplyColliderForceByParticleSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_multiplyColliderForceByParticleSize, PropertySetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.S_multiplyColliderForceByParticleSize
#endif
                    }},
                    {"planeCount", new MemberRegisterInfo { Name = "planeCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CollisionModule_Wrap.G_planeCount
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_TriggerModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_TriggerModule_Wrap.Constructor
#endif
                    }},
                    {"AddCollider", new MemberRegisterInfo { Name = "AddCollider", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_TriggerModule_Wrap.M_AddCollider
#endif
                    }},
                    {"RemoveCollider", new MemberRegisterInfo { Name = "RemoveCollider", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_TriggerModule_Wrap.M_RemoveCollider
#endif
                    }},
                    {"SetCollider", new MemberRegisterInfo { Name = "SetCollider", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_TriggerModule_Wrap.M_SetCollider
#endif
                    }},
                    {"GetCollider", new MemberRegisterInfo { Name = "GetCollider", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_TriggerModule_Wrap.M_GetCollider
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TriggerModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_TriggerModule_Wrap.S_enabled
#endif
                    }},
                    {"inside", new MemberRegisterInfo { Name = "inside", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TriggerModule_Wrap.G_inside, PropertySetter = UnityEngine_ParticleSystem_TriggerModule_Wrap.S_inside
#endif
                    }},
                    {"outside", new MemberRegisterInfo { Name = "outside", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TriggerModule_Wrap.G_outside, PropertySetter = UnityEngine_ParticleSystem_TriggerModule_Wrap.S_outside
#endif
                    }},
                    {"enter", new MemberRegisterInfo { Name = "enter", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TriggerModule_Wrap.G_enter, PropertySetter = UnityEngine_ParticleSystem_TriggerModule_Wrap.S_enter
#endif
                    }},
                    {"exit", new MemberRegisterInfo { Name = "exit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TriggerModule_Wrap.G_exit, PropertySetter = UnityEngine_ParticleSystem_TriggerModule_Wrap.S_exit
#endif
                    }},
                    {"colliderQueryMode", new MemberRegisterInfo { Name = "colliderQueryMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TriggerModule_Wrap.G_colliderQueryMode, PropertySetter = UnityEngine_ParticleSystem_TriggerModule_Wrap.S_colliderQueryMode
#endif
                    }},
                    {"radiusScale", new MemberRegisterInfo { Name = "radiusScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TriggerModule_Wrap.G_radiusScale, PropertySetter = UnityEngine_ParticleSystem_TriggerModule_Wrap.S_radiusScale
#endif
                    }},
                    {"colliderCount", new MemberRegisterInfo { Name = "colliderCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TriggerModule_Wrap.G_colliderCount
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_SubEmittersModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_SubEmittersModule_Wrap.Constructor
#endif
                    }},
                    {"AddSubEmitter", new MemberRegisterInfo { Name = "AddSubEmitter", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_SubEmittersModule_Wrap.M_AddSubEmitter
#endif
                    }},
                    {"RemoveSubEmitter", new MemberRegisterInfo { Name = "RemoveSubEmitter", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_SubEmittersModule_Wrap.M_RemoveSubEmitter
#endif
                    }},
                    {"SetSubEmitterSystem", new MemberRegisterInfo { Name = "SetSubEmitterSystem", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_SubEmittersModule_Wrap.M_SetSubEmitterSystem
#endif
                    }},
                    {"SetSubEmitterType", new MemberRegisterInfo { Name = "SetSubEmitterType", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_SubEmittersModule_Wrap.M_SetSubEmitterType
#endif
                    }},
                    {"SetSubEmitterProperties", new MemberRegisterInfo { Name = "SetSubEmitterProperties", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_SubEmittersModule_Wrap.M_SetSubEmitterProperties
#endif
                    }},
                    {"SetSubEmitterEmitProbability", new MemberRegisterInfo { Name = "SetSubEmitterEmitProbability", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_SubEmittersModule_Wrap.M_SetSubEmitterEmitProbability
#endif
                    }},
                    {"GetSubEmitterSystem", new MemberRegisterInfo { Name = "GetSubEmitterSystem", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_SubEmittersModule_Wrap.M_GetSubEmitterSystem
#endif
                    }},
                    {"GetSubEmitterType", new MemberRegisterInfo { Name = "GetSubEmitterType", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_SubEmittersModule_Wrap.M_GetSubEmitterType
#endif
                    }},
                    {"GetSubEmitterProperties", new MemberRegisterInfo { Name = "GetSubEmitterProperties", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_SubEmittersModule_Wrap.M_GetSubEmitterProperties
#endif
                    }},
                    {"GetSubEmitterEmitProbability", new MemberRegisterInfo { Name = "GetSubEmitterEmitProbability", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_SubEmittersModule_Wrap.M_GetSubEmitterEmitProbability
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SubEmittersModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_SubEmittersModule_Wrap.S_enabled
#endif
                    }},
                    {"subEmittersCount", new MemberRegisterInfo { Name = "subEmittersCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SubEmittersModule_Wrap.G_subEmittersCount
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.Constructor
#endif
                    }},
                    {"AddSprite", new MemberRegisterInfo { Name = "AddSprite", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.M_AddSprite
#endif
                    }},
                    {"RemoveSprite", new MemberRegisterInfo { Name = "RemoveSprite", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.M_RemoveSprite
#endif
                    }},
                    {"SetSprite", new MemberRegisterInfo { Name = "SetSprite", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.M_SetSprite
#endif
                    }},
                    {"GetSprite", new MemberRegisterInfo { Name = "GetSprite", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.M_GetSprite
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.S_enabled
#endif
                    }},
                    {"mode", new MemberRegisterInfo { Name = "mode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.G_mode, PropertySetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.S_mode
#endif
                    }},
                    {"timeMode", new MemberRegisterInfo { Name = "timeMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.G_timeMode, PropertySetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.S_timeMode
#endif
                    }},
                    {"fps", new MemberRegisterInfo { Name = "fps", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.G_fps, PropertySetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.S_fps
#endif
                    }},
                    {"numTilesX", new MemberRegisterInfo { Name = "numTilesX", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.G_numTilesX, PropertySetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.S_numTilesX
#endif
                    }},
                    {"numTilesY", new MemberRegisterInfo { Name = "numTilesY", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.G_numTilesY, PropertySetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.S_numTilesY
#endif
                    }},
                    {"animation", new MemberRegisterInfo { Name = "animation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.G_animation, PropertySetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.S_animation
#endif
                    }},
                    {"rowMode", new MemberRegisterInfo { Name = "rowMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.G_rowMode, PropertySetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.S_rowMode
#endif
                    }},
                    {"frameOverTime", new MemberRegisterInfo { Name = "frameOverTime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.G_frameOverTime, PropertySetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.S_frameOverTime
#endif
                    }},
                    {"frameOverTimeMultiplier", new MemberRegisterInfo { Name = "frameOverTimeMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.G_frameOverTimeMultiplier, PropertySetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.S_frameOverTimeMultiplier
#endif
                    }},
                    {"startFrame", new MemberRegisterInfo { Name = "startFrame", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.G_startFrame, PropertySetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.S_startFrame
#endif
                    }},
                    {"startFrameMultiplier", new MemberRegisterInfo { Name = "startFrameMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.G_startFrameMultiplier, PropertySetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.S_startFrameMultiplier
#endif
                    }},
                    {"cycleCount", new MemberRegisterInfo { Name = "cycleCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.G_cycleCount, PropertySetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.S_cycleCount
#endif
                    }},
                    {"rowIndex", new MemberRegisterInfo { Name = "rowIndex", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.G_rowIndex, PropertySetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.S_rowIndex
#endif
                    }},
                    {"uvChannelMask", new MemberRegisterInfo { Name = "uvChannelMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.G_uvChannelMask, PropertySetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.S_uvChannelMask
#endif
                    }},
                    {"spriteCount", new MemberRegisterInfo { Name = "spriteCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.G_spriteCount
#endif
                    }},
                    {"speedRange", new MemberRegisterInfo { Name = "speedRange", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.G_speedRange, PropertySetter = UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap.S_speedRange
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_Particle_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_Particle_Wrap.Constructor
#endif
                    }},
                    {"GetCurrentSize", new MemberRegisterInfo { Name = "GetCurrentSize", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Particle_Wrap.M_GetCurrentSize
#endif
                    }},
                    {"GetCurrentSize3D", new MemberRegisterInfo { Name = "GetCurrentSize3D", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Particle_Wrap.M_GetCurrentSize3D
#endif
                    }},
                    {"GetCurrentColor", new MemberRegisterInfo { Name = "GetCurrentColor", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Particle_Wrap.M_GetCurrentColor
#endif
                    }},
                    {"SetMeshIndex", new MemberRegisterInfo { Name = "SetMeshIndex", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Particle_Wrap.M_SetMeshIndex
#endif
                    }},
                    {"GetMeshIndex", new MemberRegisterInfo { Name = "GetMeshIndex", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_Particle_Wrap.M_GetMeshIndex
#endif
                    }},
                    {"position", new MemberRegisterInfo { Name = "position", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Particle_Wrap.G_position, PropertySetter = UnityEngine_ParticleSystem_Particle_Wrap.S_position
#endif
                    }},
                    {"velocity", new MemberRegisterInfo { Name = "velocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Particle_Wrap.G_velocity, PropertySetter = UnityEngine_ParticleSystem_Particle_Wrap.S_velocity
#endif
                    }},
                    {"animatedVelocity", new MemberRegisterInfo { Name = "animatedVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Particle_Wrap.G_animatedVelocity
#endif
                    }},
                    {"totalVelocity", new MemberRegisterInfo { Name = "totalVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Particle_Wrap.G_totalVelocity
#endif
                    }},
                    {"remainingLifetime", new MemberRegisterInfo { Name = "remainingLifetime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Particle_Wrap.G_remainingLifetime, PropertySetter = UnityEngine_ParticleSystem_Particle_Wrap.S_remainingLifetime
#endif
                    }},
                    {"startLifetime", new MemberRegisterInfo { Name = "startLifetime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Particle_Wrap.G_startLifetime, PropertySetter = UnityEngine_ParticleSystem_Particle_Wrap.S_startLifetime
#endif
                    }},
                    {"startColor", new MemberRegisterInfo { Name = "startColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Particle_Wrap.G_startColor, PropertySetter = UnityEngine_ParticleSystem_Particle_Wrap.S_startColor
#endif
                    }},
                    {"randomSeed", new MemberRegisterInfo { Name = "randomSeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Particle_Wrap.G_randomSeed, PropertySetter = UnityEngine_ParticleSystem_Particle_Wrap.S_randomSeed
#endif
                    }},
                    {"axisOfRotation", new MemberRegisterInfo { Name = "axisOfRotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Particle_Wrap.G_axisOfRotation, PropertySetter = UnityEngine_ParticleSystem_Particle_Wrap.S_axisOfRotation
#endif
                    }},
                    {"startSize", new MemberRegisterInfo { Name = "startSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Particle_Wrap.G_startSize, PropertySetter = UnityEngine_ParticleSystem_Particle_Wrap.S_startSize
#endif
                    }},
                    {"startSize3D", new MemberRegisterInfo { Name = "startSize3D", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Particle_Wrap.G_startSize3D, PropertySetter = UnityEngine_ParticleSystem_Particle_Wrap.S_startSize3D
#endif
                    }},
                    {"rotation", new MemberRegisterInfo { Name = "rotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Particle_Wrap.G_rotation, PropertySetter = UnityEngine_ParticleSystem_Particle_Wrap.S_rotation
#endif
                    }},
                    {"rotation3D", new MemberRegisterInfo { Name = "rotation3D", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Particle_Wrap.G_rotation3D, PropertySetter = UnityEngine_ParticleSystem_Particle_Wrap.S_rotation3D
#endif
                    }},
                    {"angularVelocity", new MemberRegisterInfo { Name = "angularVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Particle_Wrap.G_angularVelocity, PropertySetter = UnityEngine_ParticleSystem_Particle_Wrap.S_angularVelocity
#endif
                    }},
                    {"angularVelocity3D", new MemberRegisterInfo { Name = "angularVelocity3D", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Particle_Wrap.G_angularVelocity3D, PropertySetter = UnityEngine_ParticleSystem_Particle_Wrap.S_angularVelocity3D
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_Burst_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_Burst_Wrap.Constructor
#endif
                    }},
                    {"time", new MemberRegisterInfo { Name = "time", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Burst_Wrap.G_time, PropertySetter = UnityEngine_ParticleSystem_Burst_Wrap.S_time
#endif
                    }},
                    {"count", new MemberRegisterInfo { Name = "count", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Burst_Wrap.G_count, PropertySetter = UnityEngine_ParticleSystem_Burst_Wrap.S_count
#endif
                    }},
                    {"minCount", new MemberRegisterInfo { Name = "minCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Burst_Wrap.G_minCount, PropertySetter = UnityEngine_ParticleSystem_Burst_Wrap.S_minCount
#endif
                    }},
                    {"maxCount", new MemberRegisterInfo { Name = "maxCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Burst_Wrap.G_maxCount, PropertySetter = UnityEngine_ParticleSystem_Burst_Wrap.S_maxCount
#endif
                    }},
                    {"cycleCount", new MemberRegisterInfo { Name = "cycleCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Burst_Wrap.G_cycleCount, PropertySetter = UnityEngine_ParticleSystem_Burst_Wrap.S_cycleCount
#endif
                    }},
                    {"repeatInterval", new MemberRegisterInfo { Name = "repeatInterval", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Burst_Wrap.G_repeatInterval, PropertySetter = UnityEngine_ParticleSystem_Burst_Wrap.S_repeatInterval
#endif
                    }},
                    {"probability", new MemberRegisterInfo { Name = "probability", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Burst_Wrap.G_probability, PropertySetter = UnityEngine_ParticleSystem_Burst_Wrap.S_probability
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_MinMaxGradient_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_MinMaxGradient_Wrap.Constructor
#endif
                    }},
                    {"Evaluate", new MemberRegisterInfo { Name = "Evaluate", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_MinMaxGradient_Wrap.M_Evaluate
#endif
                    }},
                    {"mode", new MemberRegisterInfo { Name = "mode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MinMaxGradient_Wrap.G_mode, PropertySetter = UnityEngine_ParticleSystem_MinMaxGradient_Wrap.S_mode
#endif
                    }},
                    {"gradientMax", new MemberRegisterInfo { Name = "gradientMax", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MinMaxGradient_Wrap.G_gradientMax, PropertySetter = UnityEngine_ParticleSystem_MinMaxGradient_Wrap.S_gradientMax
#endif
                    }},
                    {"gradientMin", new MemberRegisterInfo { Name = "gradientMin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MinMaxGradient_Wrap.G_gradientMin, PropertySetter = UnityEngine_ParticleSystem_MinMaxGradient_Wrap.S_gradientMin
#endif
                    }},
                    {"colorMax", new MemberRegisterInfo { Name = "colorMax", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MinMaxGradient_Wrap.G_colorMax, PropertySetter = UnityEngine_ParticleSystem_MinMaxGradient_Wrap.S_colorMax
#endif
                    }},
                    {"colorMin", new MemberRegisterInfo { Name = "colorMin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MinMaxGradient_Wrap.G_colorMin, PropertySetter = UnityEngine_ParticleSystem_MinMaxGradient_Wrap.S_colorMin
#endif
                    }},
                    {"color", new MemberRegisterInfo { Name = "color", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MinMaxGradient_Wrap.G_color, PropertySetter = UnityEngine_ParticleSystem_MinMaxGradient_Wrap.S_color
#endif
                    }},
                    {"gradient", new MemberRegisterInfo { Name = "gradient", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_MinMaxGradient_Wrap.G_gradient, PropertySetter = UnityEngine_ParticleSystem_MinMaxGradient_Wrap.S_gradient
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_EmitParams_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_EmitParams_Wrap.Constructor
#endif
                    }},
                    {"ResetPosition", new MemberRegisterInfo { Name = "ResetPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_EmitParams_Wrap.M_ResetPosition
#endif
                    }},
                    {"ResetVelocity", new MemberRegisterInfo { Name = "ResetVelocity", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_EmitParams_Wrap.M_ResetVelocity
#endif
                    }},
                    {"ResetAxisOfRotation", new MemberRegisterInfo { Name = "ResetAxisOfRotation", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_EmitParams_Wrap.M_ResetAxisOfRotation
#endif
                    }},
                    {"ResetRotation", new MemberRegisterInfo { Name = "ResetRotation", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_EmitParams_Wrap.M_ResetRotation
#endif
                    }},
                    {"ResetAngularVelocity", new MemberRegisterInfo { Name = "ResetAngularVelocity", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_EmitParams_Wrap.M_ResetAngularVelocity
#endif
                    }},
                    {"ResetStartSize", new MemberRegisterInfo { Name = "ResetStartSize", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_EmitParams_Wrap.M_ResetStartSize
#endif
                    }},
                    {"ResetStartColor", new MemberRegisterInfo { Name = "ResetStartColor", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_EmitParams_Wrap.M_ResetStartColor
#endif
                    }},
                    {"ResetRandomSeed", new MemberRegisterInfo { Name = "ResetRandomSeed", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_EmitParams_Wrap.M_ResetRandomSeed
#endif
                    }},
                    {"ResetStartLifetime", new MemberRegisterInfo { Name = "ResetStartLifetime", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_EmitParams_Wrap.M_ResetStartLifetime
#endif
                    }},
                    {"ResetMeshIndex", new MemberRegisterInfo { Name = "ResetMeshIndex", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_EmitParams_Wrap.M_ResetMeshIndex
#endif
                    }},
                    {"particle", new MemberRegisterInfo { Name = "particle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_EmitParams_Wrap.G_particle, PropertySetter = UnityEngine_ParticleSystem_EmitParams_Wrap.S_particle
#endif
                    }},
                    {"position", new MemberRegisterInfo { Name = "position", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_EmitParams_Wrap.G_position, PropertySetter = UnityEngine_ParticleSystem_EmitParams_Wrap.S_position
#endif
                    }},
                    {"applyShapeToPosition", new MemberRegisterInfo { Name = "applyShapeToPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_EmitParams_Wrap.G_applyShapeToPosition, PropertySetter = UnityEngine_ParticleSystem_EmitParams_Wrap.S_applyShapeToPosition
#endif
                    }},
                    {"velocity", new MemberRegisterInfo { Name = "velocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_EmitParams_Wrap.G_velocity, PropertySetter = UnityEngine_ParticleSystem_EmitParams_Wrap.S_velocity
#endif
                    }},
                    {"startLifetime", new MemberRegisterInfo { Name = "startLifetime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_EmitParams_Wrap.G_startLifetime, PropertySetter = UnityEngine_ParticleSystem_EmitParams_Wrap.S_startLifetime
#endif
                    }},
                    {"startSize", new MemberRegisterInfo { Name = "startSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_EmitParams_Wrap.G_startSize, PropertySetter = UnityEngine_ParticleSystem_EmitParams_Wrap.S_startSize
#endif
                    }},
                    {"startSize3D", new MemberRegisterInfo { Name = "startSize3D", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_EmitParams_Wrap.G_startSize3D, PropertySetter = UnityEngine_ParticleSystem_EmitParams_Wrap.S_startSize3D
#endif
                    }},
                    {"axisOfRotation", new MemberRegisterInfo { Name = "axisOfRotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_EmitParams_Wrap.G_axisOfRotation, PropertySetter = UnityEngine_ParticleSystem_EmitParams_Wrap.S_axisOfRotation
#endif
                    }},
                    {"rotation", new MemberRegisterInfo { Name = "rotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_EmitParams_Wrap.G_rotation, PropertySetter = UnityEngine_ParticleSystem_EmitParams_Wrap.S_rotation
#endif
                    }},
                    {"rotation3D", new MemberRegisterInfo { Name = "rotation3D", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_EmitParams_Wrap.G_rotation3D, PropertySetter = UnityEngine_ParticleSystem_EmitParams_Wrap.S_rotation3D
#endif
                    }},
                    {"angularVelocity", new MemberRegisterInfo { Name = "angularVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_EmitParams_Wrap.G_angularVelocity, PropertySetter = UnityEngine_ParticleSystem_EmitParams_Wrap.S_angularVelocity
#endif
                    }},
                    {"angularVelocity3D", new MemberRegisterInfo { Name = "angularVelocity3D", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_EmitParams_Wrap.G_angularVelocity3D, PropertySetter = UnityEngine_ParticleSystem_EmitParams_Wrap.S_angularVelocity3D
#endif
                    }},
                    {"startColor", new MemberRegisterInfo { Name = "startColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_EmitParams_Wrap.G_startColor, PropertySetter = UnityEngine_ParticleSystem_EmitParams_Wrap.S_startColor
#endif
                    }},
                    {"randomSeed", new MemberRegisterInfo { Name = "randomSeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_EmitParams_Wrap.G_randomSeed, PropertySetter = UnityEngine_ParticleSystem_EmitParams_Wrap.S_randomSeed
#endif
                    }},
                    {"meshIndex", new MemberRegisterInfo { Name = "meshIndex", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertySetter = UnityEngine_ParticleSystem_EmitParams_Wrap.S_meshIndex
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_PlaybackState_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_PlaybackState_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_Trails_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_Trails_Wrap.Constructor
#endif
                    }},
                    {"capacity", new MemberRegisterInfo { Name = "capacity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_Trails_Wrap.G_capacity, PropertySetter = UnityEngine_ParticleSystem_Trails_Wrap.S_capacity
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_ColliderData_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_ColliderData_Wrap.Constructor
#endif
                    }},
                    {"GetColliderCount", new MemberRegisterInfo { Name = "GetColliderCount", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_ColliderData_Wrap.M_GetColliderCount
#endif
                    }},
                    {"GetCollider", new MemberRegisterInfo { Name = "GetCollider", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_ColliderData_Wrap.M_GetCollider
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.Constructor
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_enabled
#endif
                    }},
                    {"x", new MemberRegisterInfo { Name = "x", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_x, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_x
#endif
                    }},
                    {"y", new MemberRegisterInfo { Name = "y", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_y, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_y
#endif
                    }},
                    {"z", new MemberRegisterInfo { Name = "z", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_z, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_z
#endif
                    }},
                    {"xMultiplier", new MemberRegisterInfo { Name = "xMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_xMultiplier, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_xMultiplier
#endif
                    }},
                    {"yMultiplier", new MemberRegisterInfo { Name = "yMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_yMultiplier, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_yMultiplier
#endif
                    }},
                    {"zMultiplier", new MemberRegisterInfo { Name = "zMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_zMultiplier, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_zMultiplier
#endif
                    }},
                    {"orbitalX", new MemberRegisterInfo { Name = "orbitalX", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_orbitalX, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_orbitalX
#endif
                    }},
                    {"orbitalY", new MemberRegisterInfo { Name = "orbitalY", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_orbitalY, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_orbitalY
#endif
                    }},
                    {"orbitalZ", new MemberRegisterInfo { Name = "orbitalZ", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_orbitalZ, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_orbitalZ
#endif
                    }},
                    {"orbitalXMultiplier", new MemberRegisterInfo { Name = "orbitalXMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_orbitalXMultiplier, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_orbitalXMultiplier
#endif
                    }},
                    {"orbitalYMultiplier", new MemberRegisterInfo { Name = "orbitalYMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_orbitalYMultiplier, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_orbitalYMultiplier
#endif
                    }},
                    {"orbitalZMultiplier", new MemberRegisterInfo { Name = "orbitalZMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_orbitalZMultiplier, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_orbitalZMultiplier
#endif
                    }},
                    {"orbitalOffsetX", new MemberRegisterInfo { Name = "orbitalOffsetX", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_orbitalOffsetX, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_orbitalOffsetX
#endif
                    }},
                    {"orbitalOffsetY", new MemberRegisterInfo { Name = "orbitalOffsetY", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_orbitalOffsetY, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_orbitalOffsetY
#endif
                    }},
                    {"orbitalOffsetZ", new MemberRegisterInfo { Name = "orbitalOffsetZ", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_orbitalOffsetZ, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_orbitalOffsetZ
#endif
                    }},
                    {"orbitalOffsetXMultiplier", new MemberRegisterInfo { Name = "orbitalOffsetXMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_orbitalOffsetXMultiplier, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_orbitalOffsetXMultiplier
#endif
                    }},
                    {"orbitalOffsetYMultiplier", new MemberRegisterInfo { Name = "orbitalOffsetYMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_orbitalOffsetYMultiplier, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_orbitalOffsetYMultiplier
#endif
                    }},
                    {"orbitalOffsetZMultiplier", new MemberRegisterInfo { Name = "orbitalOffsetZMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_orbitalOffsetZMultiplier, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_orbitalOffsetZMultiplier
#endif
                    }},
                    {"radial", new MemberRegisterInfo { Name = "radial", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_radial, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_radial
#endif
                    }},
                    {"radialMultiplier", new MemberRegisterInfo { Name = "radialMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_radialMultiplier, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_radialMultiplier
#endif
                    }},
                    {"speedModifier", new MemberRegisterInfo { Name = "speedModifier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_speedModifier, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_speedModifier
#endif
                    }},
                    {"speedModifierMultiplier", new MemberRegisterInfo { Name = "speedModifierMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_speedModifierMultiplier, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_speedModifierMultiplier
#endif
                    }},
                    {"space", new MemberRegisterInfo { Name = "space", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.G_space, PropertySetter = UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap.S_space
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.Constructor
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.S_enabled
#endif
                    }},
                    {"limitX", new MemberRegisterInfo { Name = "limitX", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.G_limitX, PropertySetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.S_limitX
#endif
                    }},
                    {"limitXMultiplier", new MemberRegisterInfo { Name = "limitXMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.G_limitXMultiplier, PropertySetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.S_limitXMultiplier
#endif
                    }},
                    {"limitY", new MemberRegisterInfo { Name = "limitY", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.G_limitY, PropertySetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.S_limitY
#endif
                    }},
                    {"limitYMultiplier", new MemberRegisterInfo { Name = "limitYMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.G_limitYMultiplier, PropertySetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.S_limitYMultiplier
#endif
                    }},
                    {"limitZ", new MemberRegisterInfo { Name = "limitZ", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.G_limitZ, PropertySetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.S_limitZ
#endif
                    }},
                    {"limitZMultiplier", new MemberRegisterInfo { Name = "limitZMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.G_limitZMultiplier, PropertySetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.S_limitZMultiplier
#endif
                    }},
                    {"limit", new MemberRegisterInfo { Name = "limit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.G_limit, PropertySetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.S_limit
#endif
                    }},
                    {"limitMultiplier", new MemberRegisterInfo { Name = "limitMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.G_limitMultiplier, PropertySetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.S_limitMultiplier
#endif
                    }},
                    {"dampen", new MemberRegisterInfo { Name = "dampen", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.G_dampen, PropertySetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.S_dampen
#endif
                    }},
                    {"separateAxes", new MemberRegisterInfo { Name = "separateAxes", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.G_separateAxes, PropertySetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.S_separateAxes
#endif
                    }},
                    {"space", new MemberRegisterInfo { Name = "space", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.G_space, PropertySetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.S_space
#endif
                    }},
                    {"drag", new MemberRegisterInfo { Name = "drag", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.G_drag, PropertySetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.S_drag
#endif
                    }},
                    {"dragMultiplier", new MemberRegisterInfo { Name = "dragMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.G_dragMultiplier, PropertySetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.S_dragMultiplier
#endif
                    }},
                    {"multiplyDragByParticleSize", new MemberRegisterInfo { Name = "multiplyDragByParticleSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.G_multiplyDragByParticleSize, PropertySetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.S_multiplyDragByParticleSize
#endif
                    }},
                    {"multiplyDragByParticleVelocity", new MemberRegisterInfo { Name = "multiplyDragByParticleVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.G_multiplyDragByParticleVelocity, PropertySetter = UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap.S_multiplyDragByParticleVelocity
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_InheritVelocityModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_InheritVelocityModule_Wrap.Constructor
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_InheritVelocityModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_InheritVelocityModule_Wrap.S_enabled
#endif
                    }},
                    {"mode", new MemberRegisterInfo { Name = "mode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_InheritVelocityModule_Wrap.G_mode, PropertySetter = UnityEngine_ParticleSystem_InheritVelocityModule_Wrap.S_mode
#endif
                    }},
                    {"curve", new MemberRegisterInfo { Name = "curve", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_InheritVelocityModule_Wrap.G_curve, PropertySetter = UnityEngine_ParticleSystem_InheritVelocityModule_Wrap.S_curve
#endif
                    }},
                    {"curveMultiplier", new MemberRegisterInfo { Name = "curveMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_InheritVelocityModule_Wrap.G_curveMultiplier, PropertySetter = UnityEngine_ParticleSystem_InheritVelocityModule_Wrap.S_curveMultiplier
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_LifetimeByEmitterSpeedModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_LifetimeByEmitterSpeedModule_Wrap.Constructor
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LifetimeByEmitterSpeedModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_LifetimeByEmitterSpeedModule_Wrap.S_enabled
#endif
                    }},
                    {"curve", new MemberRegisterInfo { Name = "curve", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LifetimeByEmitterSpeedModule_Wrap.G_curve, PropertySetter = UnityEngine_ParticleSystem_LifetimeByEmitterSpeedModule_Wrap.S_curve
#endif
                    }},
                    {"curveMultiplier", new MemberRegisterInfo { Name = "curveMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LifetimeByEmitterSpeedModule_Wrap.G_curveMultiplier, PropertySetter = UnityEngine_ParticleSystem_LifetimeByEmitterSpeedModule_Wrap.S_curveMultiplier
#endif
                    }},
                    {"range", new MemberRegisterInfo { Name = "range", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LifetimeByEmitterSpeedModule_Wrap.G_range, PropertySetter = UnityEngine_ParticleSystem_LifetimeByEmitterSpeedModule_Wrap.S_range
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_ForceOverLifetimeModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_ForceOverLifetimeModule_Wrap.Constructor
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ForceOverLifetimeModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_ForceOverLifetimeModule_Wrap.S_enabled
#endif
                    }},
                    {"x", new MemberRegisterInfo { Name = "x", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ForceOverLifetimeModule_Wrap.G_x, PropertySetter = UnityEngine_ParticleSystem_ForceOverLifetimeModule_Wrap.S_x
#endif
                    }},
                    {"y", new MemberRegisterInfo { Name = "y", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ForceOverLifetimeModule_Wrap.G_y, PropertySetter = UnityEngine_ParticleSystem_ForceOverLifetimeModule_Wrap.S_y
#endif
                    }},
                    {"z", new MemberRegisterInfo { Name = "z", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ForceOverLifetimeModule_Wrap.G_z, PropertySetter = UnityEngine_ParticleSystem_ForceOverLifetimeModule_Wrap.S_z
#endif
                    }},
                    {"xMultiplier", new MemberRegisterInfo { Name = "xMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ForceOverLifetimeModule_Wrap.G_xMultiplier, PropertySetter = UnityEngine_ParticleSystem_ForceOverLifetimeModule_Wrap.S_xMultiplier
#endif
                    }},
                    {"yMultiplier", new MemberRegisterInfo { Name = "yMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ForceOverLifetimeModule_Wrap.G_yMultiplier, PropertySetter = UnityEngine_ParticleSystem_ForceOverLifetimeModule_Wrap.S_yMultiplier
#endif
                    }},
                    {"zMultiplier", new MemberRegisterInfo { Name = "zMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ForceOverLifetimeModule_Wrap.G_zMultiplier, PropertySetter = UnityEngine_ParticleSystem_ForceOverLifetimeModule_Wrap.S_zMultiplier
#endif
                    }},
                    {"space", new MemberRegisterInfo { Name = "space", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ForceOverLifetimeModule_Wrap.G_space, PropertySetter = UnityEngine_ParticleSystem_ForceOverLifetimeModule_Wrap.S_space
#endif
                    }},
                    {"randomized", new MemberRegisterInfo { Name = "randomized", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ForceOverLifetimeModule_Wrap.G_randomized, PropertySetter = UnityEngine_ParticleSystem_ForceOverLifetimeModule_Wrap.S_randomized
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_ColorOverLifetimeModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_ColorOverLifetimeModule_Wrap.Constructor
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ColorOverLifetimeModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_ColorOverLifetimeModule_Wrap.S_enabled
#endif
                    }},
                    {"color", new MemberRegisterInfo { Name = "color", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ColorOverLifetimeModule_Wrap.G_color, PropertySetter = UnityEngine_ParticleSystem_ColorOverLifetimeModule_Wrap.S_color
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_ColorBySpeedModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_ColorBySpeedModule_Wrap.Constructor
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ColorBySpeedModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_ColorBySpeedModule_Wrap.S_enabled
#endif
                    }},
                    {"color", new MemberRegisterInfo { Name = "color", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ColorBySpeedModule_Wrap.G_color, PropertySetter = UnityEngine_ParticleSystem_ColorBySpeedModule_Wrap.S_color
#endif
                    }},
                    {"range", new MemberRegisterInfo { Name = "range", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ColorBySpeedModule_Wrap.G_range, PropertySetter = UnityEngine_ParticleSystem_ColorBySpeedModule_Wrap.S_range
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap.Constructor
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap.S_enabled
#endif
                    }},
                    {"size", new MemberRegisterInfo { Name = "size", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap.G_size, PropertySetter = UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap.S_size
#endif
                    }},
                    {"sizeMultiplier", new MemberRegisterInfo { Name = "sizeMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap.G_sizeMultiplier, PropertySetter = UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap.S_sizeMultiplier
#endif
                    }},
                    {"x", new MemberRegisterInfo { Name = "x", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap.G_x, PropertySetter = UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap.S_x
#endif
                    }},
                    {"xMultiplier", new MemberRegisterInfo { Name = "xMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap.G_xMultiplier, PropertySetter = UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap.S_xMultiplier
#endif
                    }},
                    {"y", new MemberRegisterInfo { Name = "y", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap.G_y, PropertySetter = UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap.S_y
#endif
                    }},
                    {"yMultiplier", new MemberRegisterInfo { Name = "yMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap.G_yMultiplier, PropertySetter = UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap.S_yMultiplier
#endif
                    }},
                    {"z", new MemberRegisterInfo { Name = "z", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap.G_z, PropertySetter = UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap.S_z
#endif
                    }},
                    {"zMultiplier", new MemberRegisterInfo { Name = "zMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap.G_zMultiplier, PropertySetter = UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap.S_zMultiplier
#endif
                    }},
                    {"separateAxes", new MemberRegisterInfo { Name = "separateAxes", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap.G_separateAxes, PropertySetter = UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap.S_separateAxes
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.Constructor
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.S_enabled
#endif
                    }},
                    {"size", new MemberRegisterInfo { Name = "size", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.G_size, PropertySetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.S_size
#endif
                    }},
                    {"sizeMultiplier", new MemberRegisterInfo { Name = "sizeMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.G_sizeMultiplier, PropertySetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.S_sizeMultiplier
#endif
                    }},
                    {"x", new MemberRegisterInfo { Name = "x", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.G_x, PropertySetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.S_x
#endif
                    }},
                    {"xMultiplier", new MemberRegisterInfo { Name = "xMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.G_xMultiplier, PropertySetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.S_xMultiplier
#endif
                    }},
                    {"y", new MemberRegisterInfo { Name = "y", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.G_y, PropertySetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.S_y
#endif
                    }},
                    {"yMultiplier", new MemberRegisterInfo { Name = "yMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.G_yMultiplier, PropertySetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.S_yMultiplier
#endif
                    }},
                    {"z", new MemberRegisterInfo { Name = "z", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.G_z, PropertySetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.S_z
#endif
                    }},
                    {"zMultiplier", new MemberRegisterInfo { Name = "zMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.G_zMultiplier, PropertySetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.S_zMultiplier
#endif
                    }},
                    {"separateAxes", new MemberRegisterInfo { Name = "separateAxes", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.G_separateAxes, PropertySetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.S_separateAxes
#endif
                    }},
                    {"range", new MemberRegisterInfo { Name = "range", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.G_range, PropertySetter = UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap.S_range
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_RotationOverLifetimeModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_RotationOverLifetimeModule_Wrap.Constructor
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_RotationOverLifetimeModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_RotationOverLifetimeModule_Wrap.S_enabled
#endif
                    }},
                    {"x", new MemberRegisterInfo { Name = "x", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_RotationOverLifetimeModule_Wrap.G_x, PropertySetter = UnityEngine_ParticleSystem_RotationOverLifetimeModule_Wrap.S_x
#endif
                    }},
                    {"xMultiplier", new MemberRegisterInfo { Name = "xMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_RotationOverLifetimeModule_Wrap.G_xMultiplier, PropertySetter = UnityEngine_ParticleSystem_RotationOverLifetimeModule_Wrap.S_xMultiplier
#endif
                    }},
                    {"y", new MemberRegisterInfo { Name = "y", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_RotationOverLifetimeModule_Wrap.G_y, PropertySetter = UnityEngine_ParticleSystem_RotationOverLifetimeModule_Wrap.S_y
#endif
                    }},
                    {"yMultiplier", new MemberRegisterInfo { Name = "yMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_RotationOverLifetimeModule_Wrap.G_yMultiplier, PropertySetter = UnityEngine_ParticleSystem_RotationOverLifetimeModule_Wrap.S_yMultiplier
#endif
                    }},
                    {"z", new MemberRegisterInfo { Name = "z", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_RotationOverLifetimeModule_Wrap.G_z, PropertySetter = UnityEngine_ParticleSystem_RotationOverLifetimeModule_Wrap.S_z
#endif
                    }},
                    {"zMultiplier", new MemberRegisterInfo { Name = "zMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_RotationOverLifetimeModule_Wrap.G_zMultiplier, PropertySetter = UnityEngine_ParticleSystem_RotationOverLifetimeModule_Wrap.S_zMultiplier
#endif
                    }},
                    {"separateAxes", new MemberRegisterInfo { Name = "separateAxes", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_RotationOverLifetimeModule_Wrap.G_separateAxes, PropertySetter = UnityEngine_ParticleSystem_RotationOverLifetimeModule_Wrap.S_separateAxes
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_RotationBySpeedModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_RotationBySpeedModule_Wrap.Constructor
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_RotationBySpeedModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_RotationBySpeedModule_Wrap.S_enabled
#endif
                    }},
                    {"x", new MemberRegisterInfo { Name = "x", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_RotationBySpeedModule_Wrap.G_x, PropertySetter = UnityEngine_ParticleSystem_RotationBySpeedModule_Wrap.S_x
#endif
                    }},
                    {"xMultiplier", new MemberRegisterInfo { Name = "xMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_RotationBySpeedModule_Wrap.G_xMultiplier, PropertySetter = UnityEngine_ParticleSystem_RotationBySpeedModule_Wrap.S_xMultiplier
#endif
                    }},
                    {"y", new MemberRegisterInfo { Name = "y", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_RotationBySpeedModule_Wrap.G_y, PropertySetter = UnityEngine_ParticleSystem_RotationBySpeedModule_Wrap.S_y
#endif
                    }},
                    {"yMultiplier", new MemberRegisterInfo { Name = "yMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_RotationBySpeedModule_Wrap.G_yMultiplier, PropertySetter = UnityEngine_ParticleSystem_RotationBySpeedModule_Wrap.S_yMultiplier
#endif
                    }},
                    {"z", new MemberRegisterInfo { Name = "z", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_RotationBySpeedModule_Wrap.G_z, PropertySetter = UnityEngine_ParticleSystem_RotationBySpeedModule_Wrap.S_z
#endif
                    }},
                    {"zMultiplier", new MemberRegisterInfo { Name = "zMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_RotationBySpeedModule_Wrap.G_zMultiplier, PropertySetter = UnityEngine_ParticleSystem_RotationBySpeedModule_Wrap.S_zMultiplier
#endif
                    }},
                    {"separateAxes", new MemberRegisterInfo { Name = "separateAxes", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_RotationBySpeedModule_Wrap.G_separateAxes, PropertySetter = UnityEngine_ParticleSystem_RotationBySpeedModule_Wrap.S_separateAxes
#endif
                    }},
                    {"range", new MemberRegisterInfo { Name = "range", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_RotationBySpeedModule_Wrap.G_range, PropertySetter = UnityEngine_ParticleSystem_RotationBySpeedModule_Wrap.S_range
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_ExternalForcesModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_ExternalForcesModule_Wrap.Constructor
#endif
                    }},
                    {"IsAffectedBy", new MemberRegisterInfo { Name = "IsAffectedBy", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_ExternalForcesModule_Wrap.M_IsAffectedBy
#endif
                    }},
                    {"AddInfluence", new MemberRegisterInfo { Name = "AddInfluence", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_ExternalForcesModule_Wrap.M_AddInfluence
#endif
                    }},
                    {"RemoveInfluence", new MemberRegisterInfo { Name = "RemoveInfluence", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_ExternalForcesModule_Wrap.M_RemoveInfluence
#endif
                    }},
                    {"RemoveAllInfluences", new MemberRegisterInfo { Name = "RemoveAllInfluences", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_ExternalForcesModule_Wrap.M_RemoveAllInfluences
#endif
                    }},
                    {"SetInfluence", new MemberRegisterInfo { Name = "SetInfluence", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_ExternalForcesModule_Wrap.M_SetInfluence
#endif
                    }},
                    {"GetInfluence", new MemberRegisterInfo { Name = "GetInfluence", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_ExternalForcesModule_Wrap.M_GetInfluence
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ExternalForcesModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_ExternalForcesModule_Wrap.S_enabled
#endif
                    }},
                    {"multiplier", new MemberRegisterInfo { Name = "multiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ExternalForcesModule_Wrap.G_multiplier, PropertySetter = UnityEngine_ParticleSystem_ExternalForcesModule_Wrap.S_multiplier
#endif
                    }},
                    {"multiplierCurve", new MemberRegisterInfo { Name = "multiplierCurve", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ExternalForcesModule_Wrap.G_multiplierCurve, PropertySetter = UnityEngine_ParticleSystem_ExternalForcesModule_Wrap.S_multiplierCurve
#endif
                    }},
                    {"influenceFilter", new MemberRegisterInfo { Name = "influenceFilter", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ExternalForcesModule_Wrap.G_influenceFilter, PropertySetter = UnityEngine_ParticleSystem_ExternalForcesModule_Wrap.S_influenceFilter
#endif
                    }},
                    {"influenceMask", new MemberRegisterInfo { Name = "influenceMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ExternalForcesModule_Wrap.G_influenceMask, PropertySetter = UnityEngine_ParticleSystem_ExternalForcesModule_Wrap.S_influenceMask
#endif
                    }},
                    {"influenceCount", new MemberRegisterInfo { Name = "influenceCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_ExternalForcesModule_Wrap.G_influenceCount
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_NoiseModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_NoiseModule_Wrap.Constructor
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_enabled
#endif
                    }},
                    {"separateAxes", new MemberRegisterInfo { Name = "separateAxes", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_separateAxes, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_separateAxes
#endif
                    }},
                    {"strength", new MemberRegisterInfo { Name = "strength", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_strength, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_strength
#endif
                    }},
                    {"strengthMultiplier", new MemberRegisterInfo { Name = "strengthMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_strengthMultiplier, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_strengthMultiplier
#endif
                    }},
                    {"strengthX", new MemberRegisterInfo { Name = "strengthX", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_strengthX, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_strengthX
#endif
                    }},
                    {"strengthXMultiplier", new MemberRegisterInfo { Name = "strengthXMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_strengthXMultiplier, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_strengthXMultiplier
#endif
                    }},
                    {"strengthY", new MemberRegisterInfo { Name = "strengthY", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_strengthY, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_strengthY
#endif
                    }},
                    {"strengthYMultiplier", new MemberRegisterInfo { Name = "strengthYMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_strengthYMultiplier, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_strengthYMultiplier
#endif
                    }},
                    {"strengthZ", new MemberRegisterInfo { Name = "strengthZ", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_strengthZ, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_strengthZ
#endif
                    }},
                    {"strengthZMultiplier", new MemberRegisterInfo { Name = "strengthZMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_strengthZMultiplier, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_strengthZMultiplier
#endif
                    }},
                    {"frequency", new MemberRegisterInfo { Name = "frequency", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_frequency, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_frequency
#endif
                    }},
                    {"damping", new MemberRegisterInfo { Name = "damping", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_damping, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_damping
#endif
                    }},
                    {"octaveCount", new MemberRegisterInfo { Name = "octaveCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_octaveCount, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_octaveCount
#endif
                    }},
                    {"octaveMultiplier", new MemberRegisterInfo { Name = "octaveMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_octaveMultiplier, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_octaveMultiplier
#endif
                    }},
                    {"octaveScale", new MemberRegisterInfo { Name = "octaveScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_octaveScale, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_octaveScale
#endif
                    }},
                    {"quality", new MemberRegisterInfo { Name = "quality", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_quality, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_quality
#endif
                    }},
                    {"scrollSpeed", new MemberRegisterInfo { Name = "scrollSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_scrollSpeed, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_scrollSpeed
#endif
                    }},
                    {"scrollSpeedMultiplier", new MemberRegisterInfo { Name = "scrollSpeedMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_scrollSpeedMultiplier, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_scrollSpeedMultiplier
#endif
                    }},
                    {"remapEnabled", new MemberRegisterInfo { Name = "remapEnabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_remapEnabled, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_remapEnabled
#endif
                    }},
                    {"remap", new MemberRegisterInfo { Name = "remap", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_remap, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_remap
#endif
                    }},
                    {"remapMultiplier", new MemberRegisterInfo { Name = "remapMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_remapMultiplier, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_remapMultiplier
#endif
                    }},
                    {"remapX", new MemberRegisterInfo { Name = "remapX", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_remapX, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_remapX
#endif
                    }},
                    {"remapXMultiplier", new MemberRegisterInfo { Name = "remapXMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_remapXMultiplier, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_remapXMultiplier
#endif
                    }},
                    {"remapY", new MemberRegisterInfo { Name = "remapY", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_remapY, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_remapY
#endif
                    }},
                    {"remapYMultiplier", new MemberRegisterInfo { Name = "remapYMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_remapYMultiplier, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_remapYMultiplier
#endif
                    }},
                    {"remapZ", new MemberRegisterInfo { Name = "remapZ", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_remapZ, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_remapZ
#endif
                    }},
                    {"remapZMultiplier", new MemberRegisterInfo { Name = "remapZMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_remapZMultiplier, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_remapZMultiplier
#endif
                    }},
                    {"positionAmount", new MemberRegisterInfo { Name = "positionAmount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_positionAmount, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_positionAmount
#endif
                    }},
                    {"rotationAmount", new MemberRegisterInfo { Name = "rotationAmount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_rotationAmount, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_rotationAmount
#endif
                    }},
                    {"sizeAmount", new MemberRegisterInfo { Name = "sizeAmount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.G_sizeAmount, PropertySetter = UnityEngine_ParticleSystem_NoiseModule_Wrap.S_sizeAmount
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_LightsModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_LightsModule_Wrap.Constructor
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LightsModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_LightsModule_Wrap.S_enabled
#endif
                    }},
                    {"ratio", new MemberRegisterInfo { Name = "ratio", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LightsModule_Wrap.G_ratio, PropertySetter = UnityEngine_ParticleSystem_LightsModule_Wrap.S_ratio
#endif
                    }},
                    {"useRandomDistribution", new MemberRegisterInfo { Name = "useRandomDistribution", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LightsModule_Wrap.G_useRandomDistribution, PropertySetter = UnityEngine_ParticleSystem_LightsModule_Wrap.S_useRandomDistribution
#endif
                    }},
                    {"light", new MemberRegisterInfo { Name = "light", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LightsModule_Wrap.G_light, PropertySetter = UnityEngine_ParticleSystem_LightsModule_Wrap.S_light
#endif
                    }},
                    {"useParticleColor", new MemberRegisterInfo { Name = "useParticleColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LightsModule_Wrap.G_useParticleColor, PropertySetter = UnityEngine_ParticleSystem_LightsModule_Wrap.S_useParticleColor
#endif
                    }},
                    {"sizeAffectsRange", new MemberRegisterInfo { Name = "sizeAffectsRange", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LightsModule_Wrap.G_sizeAffectsRange, PropertySetter = UnityEngine_ParticleSystem_LightsModule_Wrap.S_sizeAffectsRange
#endif
                    }},
                    {"alphaAffectsIntensity", new MemberRegisterInfo { Name = "alphaAffectsIntensity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LightsModule_Wrap.G_alphaAffectsIntensity, PropertySetter = UnityEngine_ParticleSystem_LightsModule_Wrap.S_alphaAffectsIntensity
#endif
                    }},
                    {"range", new MemberRegisterInfo { Name = "range", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LightsModule_Wrap.G_range, PropertySetter = UnityEngine_ParticleSystem_LightsModule_Wrap.S_range
#endif
                    }},
                    {"rangeMultiplier", new MemberRegisterInfo { Name = "rangeMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LightsModule_Wrap.G_rangeMultiplier, PropertySetter = UnityEngine_ParticleSystem_LightsModule_Wrap.S_rangeMultiplier
#endif
                    }},
                    {"intensity", new MemberRegisterInfo { Name = "intensity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LightsModule_Wrap.G_intensity, PropertySetter = UnityEngine_ParticleSystem_LightsModule_Wrap.S_intensity
#endif
                    }},
                    {"intensityMultiplier", new MemberRegisterInfo { Name = "intensityMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LightsModule_Wrap.G_intensityMultiplier, PropertySetter = UnityEngine_ParticleSystem_LightsModule_Wrap.S_intensityMultiplier
#endif
                    }},
                    {"maxLights", new MemberRegisterInfo { Name = "maxLights", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_LightsModule_Wrap.G_maxLights, PropertySetter = UnityEngine_ParticleSystem_LightsModule_Wrap.S_maxLights
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_TrailModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_TrailModule_Wrap.Constructor
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TrailModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_TrailModule_Wrap.S_enabled
#endif
                    }},
                    {"mode", new MemberRegisterInfo { Name = "mode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TrailModule_Wrap.G_mode, PropertySetter = UnityEngine_ParticleSystem_TrailModule_Wrap.S_mode
#endif
                    }},
                    {"ratio", new MemberRegisterInfo { Name = "ratio", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TrailModule_Wrap.G_ratio, PropertySetter = UnityEngine_ParticleSystem_TrailModule_Wrap.S_ratio
#endif
                    }},
                    {"lifetime", new MemberRegisterInfo { Name = "lifetime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TrailModule_Wrap.G_lifetime, PropertySetter = UnityEngine_ParticleSystem_TrailModule_Wrap.S_lifetime
#endif
                    }},
                    {"lifetimeMultiplier", new MemberRegisterInfo { Name = "lifetimeMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TrailModule_Wrap.G_lifetimeMultiplier, PropertySetter = UnityEngine_ParticleSystem_TrailModule_Wrap.S_lifetimeMultiplier
#endif
                    }},
                    {"minVertexDistance", new MemberRegisterInfo { Name = "minVertexDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TrailModule_Wrap.G_minVertexDistance, PropertySetter = UnityEngine_ParticleSystem_TrailModule_Wrap.S_minVertexDistance
#endif
                    }},
                    {"textureMode", new MemberRegisterInfo { Name = "textureMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TrailModule_Wrap.G_textureMode, PropertySetter = UnityEngine_ParticleSystem_TrailModule_Wrap.S_textureMode
#endif
                    }},
                    {"worldSpace", new MemberRegisterInfo { Name = "worldSpace", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TrailModule_Wrap.G_worldSpace, PropertySetter = UnityEngine_ParticleSystem_TrailModule_Wrap.S_worldSpace
#endif
                    }},
                    {"dieWithParticles", new MemberRegisterInfo { Name = "dieWithParticles", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TrailModule_Wrap.G_dieWithParticles, PropertySetter = UnityEngine_ParticleSystem_TrailModule_Wrap.S_dieWithParticles
#endif
                    }},
                    {"sizeAffectsWidth", new MemberRegisterInfo { Name = "sizeAffectsWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TrailModule_Wrap.G_sizeAffectsWidth, PropertySetter = UnityEngine_ParticleSystem_TrailModule_Wrap.S_sizeAffectsWidth
#endif
                    }},
                    {"sizeAffectsLifetime", new MemberRegisterInfo { Name = "sizeAffectsLifetime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TrailModule_Wrap.G_sizeAffectsLifetime, PropertySetter = UnityEngine_ParticleSystem_TrailModule_Wrap.S_sizeAffectsLifetime
#endif
                    }},
                    {"inheritParticleColor", new MemberRegisterInfo { Name = "inheritParticleColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TrailModule_Wrap.G_inheritParticleColor, PropertySetter = UnityEngine_ParticleSystem_TrailModule_Wrap.S_inheritParticleColor
#endif
                    }},
                    {"colorOverLifetime", new MemberRegisterInfo { Name = "colorOverLifetime", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TrailModule_Wrap.G_colorOverLifetime, PropertySetter = UnityEngine_ParticleSystem_TrailModule_Wrap.S_colorOverLifetime
#endif
                    }},
                    {"widthOverTrail", new MemberRegisterInfo { Name = "widthOverTrail", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TrailModule_Wrap.G_widthOverTrail, PropertySetter = UnityEngine_ParticleSystem_TrailModule_Wrap.S_widthOverTrail
#endif
                    }},
                    {"widthOverTrailMultiplier", new MemberRegisterInfo { Name = "widthOverTrailMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TrailModule_Wrap.G_widthOverTrailMultiplier, PropertySetter = UnityEngine_ParticleSystem_TrailModule_Wrap.S_widthOverTrailMultiplier
#endif
                    }},
                    {"colorOverTrail", new MemberRegisterInfo { Name = "colorOverTrail", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TrailModule_Wrap.G_colorOverTrail, PropertySetter = UnityEngine_ParticleSystem_TrailModule_Wrap.S_colorOverTrail
#endif
                    }},
                    {"generateLightingData", new MemberRegisterInfo { Name = "generateLightingData", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TrailModule_Wrap.G_generateLightingData, PropertySetter = UnityEngine_ParticleSystem_TrailModule_Wrap.S_generateLightingData
#endif
                    }},
                    {"ribbonCount", new MemberRegisterInfo { Name = "ribbonCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TrailModule_Wrap.G_ribbonCount, PropertySetter = UnityEngine_ParticleSystem_TrailModule_Wrap.S_ribbonCount
#endif
                    }},
                    {"shadowBias", new MemberRegisterInfo { Name = "shadowBias", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TrailModule_Wrap.G_shadowBias, PropertySetter = UnityEngine_ParticleSystem_TrailModule_Wrap.S_shadowBias
#endif
                    }},
                    {"splitSubEmitterRibbons", new MemberRegisterInfo { Name = "splitSubEmitterRibbons", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TrailModule_Wrap.G_splitSubEmitterRibbons, PropertySetter = UnityEngine_ParticleSystem_TrailModule_Wrap.S_splitSubEmitterRibbons
#endif
                    }},
                    {"attachRibbonsToTransform", new MemberRegisterInfo { Name = "attachRibbonsToTransform", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_TrailModule_Wrap.G_attachRibbonsToTransform, PropertySetter = UnityEngine_ParticleSystem_TrailModule_Wrap.S_attachRibbonsToTransform
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystem_CustomDataModule_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystem_CustomDataModule_Wrap.Constructor
#endif
                    }},
                    {"SetMode", new MemberRegisterInfo { Name = "SetMode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_CustomDataModule_Wrap.M_SetMode
#endif
                    }},
                    {"GetMode", new MemberRegisterInfo { Name = "GetMode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_CustomDataModule_Wrap.M_GetMode
#endif
                    }},
                    {"SetVectorComponentCount", new MemberRegisterInfo { Name = "SetVectorComponentCount", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_CustomDataModule_Wrap.M_SetVectorComponentCount
#endif
                    }},
                    {"GetVectorComponentCount", new MemberRegisterInfo { Name = "GetVectorComponentCount", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_CustomDataModule_Wrap.M_GetVectorComponentCount
#endif
                    }},
                    {"SetVector", new MemberRegisterInfo { Name = "SetVector", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_CustomDataModule_Wrap.M_SetVector
#endif
                    }},
                    {"GetVector", new MemberRegisterInfo { Name = "GetVector", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_CustomDataModule_Wrap.M_GetVector
#endif
                    }},
                    {"SetColor", new MemberRegisterInfo { Name = "SetColor", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_CustomDataModule_Wrap.M_SetColor
#endif
                    }},
                    {"GetColor", new MemberRegisterInfo { Name = "GetColor", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticleSystem_CustomDataModule_Wrap.M_GetColor
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystem_CustomDataModule_Wrap.G_enabled, PropertySetter = UnityEngine_ParticleSystem_CustomDataModule_Wrap.S_enabled
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticlePhysicsExtensions_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"GetSafeCollisionEventSize_static", new MemberRegisterInfo { Name = "GetSafeCollisionEventSize", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticlePhysicsExtensions_Wrap.F_GetSafeCollisionEventSize
#endif
                    }},
                    {"GetCollisionEvents_static", new MemberRegisterInfo { Name = "GetCollisionEvents", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticlePhysicsExtensions_Wrap.F_GetCollisionEvents
#endif
                    }},
                    {"GetSafeTriggerParticlesSize_static", new MemberRegisterInfo { Name = "GetSafeTriggerParticlesSize", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticlePhysicsExtensions_Wrap.F_GetSafeTriggerParticlesSize
#endif
                    }},
                    {"GetTriggerParticles_static", new MemberRegisterInfo { Name = "GetTriggerParticles", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticlePhysicsExtensions_Wrap.F_GetTriggerParticles
#endif
                    }},
                    {"SetTriggerParticles_static", new MemberRegisterInfo { Name = "SetTriggerParticles", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ParticlePhysicsExtensions_Wrap.F_SetTriggerParticles
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleCollisionEvent_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleCollisionEvent_Wrap.Constructor
#endif
                    }},
                    {"intersection", new MemberRegisterInfo { Name = "intersection", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleCollisionEvent_Wrap.G_intersection
#endif
                    }},
                    {"normal", new MemberRegisterInfo { Name = "normal", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleCollisionEvent_Wrap.G_normal
#endif
                    }},
                    {"velocity", new MemberRegisterInfo { Name = "velocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleCollisionEvent_Wrap.G_velocity
#endif
                    }},
                    {"colliderComponent", new MemberRegisterInfo { Name = "colliderComponent", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleCollisionEvent_Wrap.G_colliderComponent
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ParticleSystemForceField_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ParticleSystemForceField_Wrap.Constructor
#endif
                    }},
                    {"shape", new MemberRegisterInfo { Name = "shape", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystemForceField_Wrap.G_shape, PropertySetter = UnityEngine_ParticleSystemForceField_Wrap.S_shape
#endif
                    }},
                    {"startRange", new MemberRegisterInfo { Name = "startRange", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystemForceField_Wrap.G_startRange, PropertySetter = UnityEngine_ParticleSystemForceField_Wrap.S_startRange
#endif
                    }},
                    {"endRange", new MemberRegisterInfo { Name = "endRange", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystemForceField_Wrap.G_endRange, PropertySetter = UnityEngine_ParticleSystemForceField_Wrap.S_endRange
#endif
                    }},
                    {"length", new MemberRegisterInfo { Name = "length", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystemForceField_Wrap.G_length, PropertySetter = UnityEngine_ParticleSystemForceField_Wrap.S_length
#endif
                    }},
                    {"gravityFocus", new MemberRegisterInfo { Name = "gravityFocus", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystemForceField_Wrap.G_gravityFocus, PropertySetter = UnityEngine_ParticleSystemForceField_Wrap.S_gravityFocus
#endif
                    }},
                    {"rotationRandomness", new MemberRegisterInfo { Name = "rotationRandomness", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystemForceField_Wrap.G_rotationRandomness, PropertySetter = UnityEngine_ParticleSystemForceField_Wrap.S_rotationRandomness
#endif
                    }},
                    {"multiplyDragByParticleSize", new MemberRegisterInfo { Name = "multiplyDragByParticleSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystemForceField_Wrap.G_multiplyDragByParticleSize, PropertySetter = UnityEngine_ParticleSystemForceField_Wrap.S_multiplyDragByParticleSize
#endif
                    }},
                    {"multiplyDragByParticleVelocity", new MemberRegisterInfo { Name = "multiplyDragByParticleVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystemForceField_Wrap.G_multiplyDragByParticleVelocity, PropertySetter = UnityEngine_ParticleSystemForceField_Wrap.S_multiplyDragByParticleVelocity
#endif
                    }},
                    {"vectorField", new MemberRegisterInfo { Name = "vectorField", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystemForceField_Wrap.G_vectorField, PropertySetter = UnityEngine_ParticleSystemForceField_Wrap.S_vectorField
#endif
                    }},
                    {"directionX", new MemberRegisterInfo { Name = "directionX", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystemForceField_Wrap.G_directionX, PropertySetter = UnityEngine_ParticleSystemForceField_Wrap.S_directionX
#endif
                    }},
                    {"directionY", new MemberRegisterInfo { Name = "directionY", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystemForceField_Wrap.G_directionY, PropertySetter = UnityEngine_ParticleSystemForceField_Wrap.S_directionY
#endif
                    }},
                    {"directionZ", new MemberRegisterInfo { Name = "directionZ", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystemForceField_Wrap.G_directionZ, PropertySetter = UnityEngine_ParticleSystemForceField_Wrap.S_directionZ
#endif
                    }},
                    {"gravity", new MemberRegisterInfo { Name = "gravity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystemForceField_Wrap.G_gravity, PropertySetter = UnityEngine_ParticleSystemForceField_Wrap.S_gravity
#endif
                    }},
                    {"rotationSpeed", new MemberRegisterInfo { Name = "rotationSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystemForceField_Wrap.G_rotationSpeed, PropertySetter = UnityEngine_ParticleSystemForceField_Wrap.S_rotationSpeed
#endif
                    }},
                    {"rotationAttraction", new MemberRegisterInfo { Name = "rotationAttraction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystemForceField_Wrap.G_rotationAttraction, PropertySetter = UnityEngine_ParticleSystemForceField_Wrap.S_rotationAttraction
#endif
                    }},
                    {"drag", new MemberRegisterInfo { Name = "drag", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystemForceField_Wrap.G_drag, PropertySetter = UnityEngine_ParticleSystemForceField_Wrap.S_drag
#endif
                    }},
                    {"vectorFieldSpeed", new MemberRegisterInfo { Name = "vectorFieldSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystemForceField_Wrap.G_vectorFieldSpeed, PropertySetter = UnityEngine_ParticleSystemForceField_Wrap.S_vectorFieldSpeed
#endif
                    }},
                    {"vectorFieldAttraction", new MemberRegisterInfo { Name = "vectorFieldAttraction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ParticleSystemForceField_Wrap.G_vectorFieldAttraction, PropertySetter = UnityEngine_ParticleSystemForceField_Wrap.S_vectorFieldAttraction
#endif
                    }},
                    {"FindAll_static", new MemberRegisterInfo { Name = "FindAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_WheelFrictionCurve_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_WheelFrictionCurve_Wrap.Constructor
#endif
                    }},
                    {"extremumSlip", new MemberRegisterInfo { Name = "extremumSlip", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelFrictionCurve_Wrap.G_extremumSlip, PropertySetter = UnityEngine_WheelFrictionCurve_Wrap.S_extremumSlip
#endif
                    }},
                    {"extremumValue", new MemberRegisterInfo { Name = "extremumValue", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelFrictionCurve_Wrap.G_extremumValue, PropertySetter = UnityEngine_WheelFrictionCurve_Wrap.S_extremumValue
#endif
                    }},
                    {"asymptoteSlip", new MemberRegisterInfo { Name = "asymptoteSlip", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelFrictionCurve_Wrap.G_asymptoteSlip, PropertySetter = UnityEngine_WheelFrictionCurve_Wrap.S_asymptoteSlip
#endif
                    }},
                    {"asymptoteValue", new MemberRegisterInfo { Name = "asymptoteValue", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelFrictionCurve_Wrap.G_asymptoteValue, PropertySetter = UnityEngine_WheelFrictionCurve_Wrap.S_asymptoteValue
#endif
                    }},
                    {"stiffness", new MemberRegisterInfo { Name = "stiffness", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelFrictionCurve_Wrap.G_stiffness, PropertySetter = UnityEngine_WheelFrictionCurve_Wrap.S_stiffness
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SoftJointLimit_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SoftJointLimit_Wrap.Constructor
#endif
                    }},
                    {"limit", new MemberRegisterInfo { Name = "limit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SoftJointLimit_Wrap.G_limit, PropertySetter = UnityEngine_SoftJointLimit_Wrap.S_limit
#endif
                    }},
                    {"bounciness", new MemberRegisterInfo { Name = "bounciness", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SoftJointLimit_Wrap.G_bounciness, PropertySetter = UnityEngine_SoftJointLimit_Wrap.S_bounciness
#endif
                    }},
                    {"contactDistance", new MemberRegisterInfo { Name = "contactDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SoftJointLimit_Wrap.G_contactDistance, PropertySetter = UnityEngine_SoftJointLimit_Wrap.S_contactDistance
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SoftJointLimitSpring_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SoftJointLimitSpring_Wrap.Constructor
#endif
                    }},
                    {"spring", new MemberRegisterInfo { Name = "spring", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SoftJointLimitSpring_Wrap.G_spring, PropertySetter = UnityEngine_SoftJointLimitSpring_Wrap.S_spring
#endif
                    }},
                    {"damper", new MemberRegisterInfo { Name = "damper", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SoftJointLimitSpring_Wrap.G_damper, PropertySetter = UnityEngine_SoftJointLimitSpring_Wrap.S_damper
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_JointDrive_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_JointDrive_Wrap.Constructor
#endif
                    }},
                    {"positionSpring", new MemberRegisterInfo { Name = "positionSpring", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointDrive_Wrap.G_positionSpring, PropertySetter = UnityEngine_JointDrive_Wrap.S_positionSpring
#endif
                    }},
                    {"positionDamper", new MemberRegisterInfo { Name = "positionDamper", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointDrive_Wrap.G_positionDamper, PropertySetter = UnityEngine_JointDrive_Wrap.S_positionDamper
#endif
                    }},
                    {"maximumForce", new MemberRegisterInfo { Name = "maximumForce", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointDrive_Wrap.G_maximumForce, PropertySetter = UnityEngine_JointDrive_Wrap.S_maximumForce
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_JointMotor_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_JointMotor_Wrap.Constructor
#endif
                    }},
                    {"targetVelocity", new MemberRegisterInfo { Name = "targetVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointMotor_Wrap.G_targetVelocity, PropertySetter = UnityEngine_JointMotor_Wrap.S_targetVelocity
#endif
                    }},
                    {"force", new MemberRegisterInfo { Name = "force", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointMotor_Wrap.G_force, PropertySetter = UnityEngine_JointMotor_Wrap.S_force
#endif
                    }},
                    {"freeSpin", new MemberRegisterInfo { Name = "freeSpin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointMotor_Wrap.G_freeSpin, PropertySetter = UnityEngine_JointMotor_Wrap.S_freeSpin
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_JointSpring_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_JointSpring_Wrap.Constructor
#endif
                    }},
                    {"spring", new MemberRegisterInfo { Name = "spring", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointSpring_Wrap.G_spring, PropertySetter = UnityEngine_JointSpring_Wrap.S_spring
#endif
                    }},
                    {"damper", new MemberRegisterInfo { Name = "damper", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointSpring_Wrap.G_damper, PropertySetter = UnityEngine_JointSpring_Wrap.S_damper
#endif
                    }},
                    {"targetPosition", new MemberRegisterInfo { Name = "targetPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointSpring_Wrap.G_targetPosition, PropertySetter = UnityEngine_JointSpring_Wrap.S_targetPosition
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_JointLimits_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_JointLimits_Wrap.Constructor
#endif
                    }},
                    {"min", new MemberRegisterInfo { Name = "min", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointLimits_Wrap.G_min, PropertySetter = UnityEngine_JointLimits_Wrap.S_min
#endif
                    }},
                    {"max", new MemberRegisterInfo { Name = "max", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointLimits_Wrap.G_max, PropertySetter = UnityEngine_JointLimits_Wrap.S_max
#endif
                    }},
                    {"bounciness", new MemberRegisterInfo { Name = "bounciness", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointLimits_Wrap.G_bounciness, PropertySetter = UnityEngine_JointLimits_Wrap.S_bounciness
#endif
                    }},
                    {"bounceMinVelocity", new MemberRegisterInfo { Name = "bounceMinVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointLimits_Wrap.G_bounceMinVelocity, PropertySetter = UnityEngine_JointLimits_Wrap.S_bounceMinVelocity
#endif
                    }},
                    {"contactDistance", new MemberRegisterInfo { Name = "contactDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointLimits_Wrap.G_contactDistance, PropertySetter = UnityEngine_JointLimits_Wrap.S_contactDistance
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ControllerColliderHit_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ControllerColliderHit_Wrap.Constructor
#endif
                    }},
                    {"controller", new MemberRegisterInfo { Name = "controller", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ControllerColliderHit_Wrap.G_controller
#endif
                    }},
                    {"collider", new MemberRegisterInfo { Name = "collider", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ControllerColliderHit_Wrap.G_collider
#endif
                    }},
                    {"rigidbody", new MemberRegisterInfo { Name = "rigidbody", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ControllerColliderHit_Wrap.G_rigidbody
#endif
                    }},
                    {"gameObject", new MemberRegisterInfo { Name = "gameObject", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ControllerColliderHit_Wrap.G_gameObject
#endif
                    }},
                    {"transform", new MemberRegisterInfo { Name = "transform", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ControllerColliderHit_Wrap.G_transform
#endif
                    }},
                    {"point", new MemberRegisterInfo { Name = "point", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ControllerColliderHit_Wrap.G_point
#endif
                    }},
                    {"normal", new MemberRegisterInfo { Name = "normal", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ControllerColliderHit_Wrap.G_normal
#endif
                    }},
                    {"moveDirection", new MemberRegisterInfo { Name = "moveDirection", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ControllerColliderHit_Wrap.G_moveDirection
#endif
                    }},
                    {"moveLength", new MemberRegisterInfo { Name = "moveLength", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ControllerColliderHit_Wrap.G_moveLength
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Collision_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Collision_Wrap.Constructor
#endif
                    }},
                    {"GetContact", new MemberRegisterInfo { Name = "GetContact", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Collision_Wrap.M_GetContact
#endif
                    }},
                    {"GetContacts", new MemberRegisterInfo { Name = "GetContacts", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Collision_Wrap.M_GetContacts
#endif
                    }},
                    {"relativeVelocity", new MemberRegisterInfo { Name = "relativeVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collision_Wrap.G_relativeVelocity
#endif
                    }},
                    {"rigidbody", new MemberRegisterInfo { Name = "rigidbody", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collision_Wrap.G_rigidbody
#endif
                    }},
                    {"articulationBody", new MemberRegisterInfo { Name = "articulationBody", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collision_Wrap.G_articulationBody
#endif
                    }},
                    {"body", new MemberRegisterInfo { Name = "body", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collision_Wrap.G_body
#endif
                    }},
                    {"collider", new MemberRegisterInfo { Name = "collider", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collision_Wrap.G_collider
#endif
                    }},
                    {"transform", new MemberRegisterInfo { Name = "transform", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collision_Wrap.G_transform
#endif
                    }},
                    {"gameObject", new MemberRegisterInfo { Name = "gameObject", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collision_Wrap.G_gameObject
#endif
                    }},
                    {"contactCount", new MemberRegisterInfo { Name = "contactCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collision_Wrap.G_contactCount
#endif
                    }},
                    {"contacts", new MemberRegisterInfo { Name = "contacts", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collision_Wrap.G_contacts
#endif
                    }},
                    {"impulse", new MemberRegisterInfo { Name = "impulse", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collision_Wrap.G_impulse
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_PhysicMaterial_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_PhysicMaterial_Wrap.Constructor
#endif
                    }},
                    {"bounciness", new MemberRegisterInfo { Name = "bounciness", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicMaterial_Wrap.G_bounciness, PropertySetter = UnityEngine_PhysicMaterial_Wrap.S_bounciness
#endif
                    }},
                    {"dynamicFriction", new MemberRegisterInfo { Name = "dynamicFriction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicMaterial_Wrap.G_dynamicFriction, PropertySetter = UnityEngine_PhysicMaterial_Wrap.S_dynamicFriction
#endif
                    }},
                    {"staticFriction", new MemberRegisterInfo { Name = "staticFriction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicMaterial_Wrap.G_staticFriction, PropertySetter = UnityEngine_PhysicMaterial_Wrap.S_staticFriction
#endif
                    }},
                    {"frictionCombine", new MemberRegisterInfo { Name = "frictionCombine", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicMaterial_Wrap.G_frictionCombine, PropertySetter = UnityEngine_PhysicMaterial_Wrap.S_frictionCombine
#endif
                    }},
                    {"bounceCombine", new MemberRegisterInfo { Name = "bounceCombine", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicMaterial_Wrap.G_bounceCombine, PropertySetter = UnityEngine_PhysicMaterial_Wrap.S_bounceCombine
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RaycastHit_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_RaycastHit_Wrap.Constructor
#endif
                    }},
                    {"collider", new MemberRegisterInfo { Name = "collider", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastHit_Wrap.G_collider
#endif
                    }},
                    {"point", new MemberRegisterInfo { Name = "point", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastHit_Wrap.G_point, PropertySetter = UnityEngine_RaycastHit_Wrap.S_point
#endif
                    }},
                    {"normal", new MemberRegisterInfo { Name = "normal", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastHit_Wrap.G_normal, PropertySetter = UnityEngine_RaycastHit_Wrap.S_normal
#endif
                    }},
                    {"barycentricCoordinate", new MemberRegisterInfo { Name = "barycentricCoordinate", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastHit_Wrap.G_barycentricCoordinate, PropertySetter = UnityEngine_RaycastHit_Wrap.S_barycentricCoordinate
#endif
                    }},
                    {"distance", new MemberRegisterInfo { Name = "distance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastHit_Wrap.G_distance, PropertySetter = UnityEngine_RaycastHit_Wrap.S_distance
#endif
                    }},
                    {"triangleIndex", new MemberRegisterInfo { Name = "triangleIndex", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastHit_Wrap.G_triangleIndex
#endif
                    }},
                    {"textureCoord", new MemberRegisterInfo { Name = "textureCoord", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastHit_Wrap.G_textureCoord
#endif
                    }},
                    {"textureCoord2", new MemberRegisterInfo { Name = "textureCoord2", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastHit_Wrap.G_textureCoord2
#endif
                    }},
                    {"transform", new MemberRegisterInfo { Name = "transform", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastHit_Wrap.G_transform
#endif
                    }},
                    {"rigidbody", new MemberRegisterInfo { Name = "rigidbody", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastHit_Wrap.G_rigidbody
#endif
                    }},
                    {"articulationBody", new MemberRegisterInfo { Name = "articulationBody", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastHit_Wrap.G_articulationBody
#endif
                    }},
                    {"lightmapCoord", new MemberRegisterInfo { Name = "lightmapCoord", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastHit_Wrap.G_lightmapCoord
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Rigidbody_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Rigidbody_Wrap.Constructor
#endif
                    }},
                    {"SetDensity", new MemberRegisterInfo { Name = "SetDensity", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody_Wrap.M_SetDensity
#endif
                    }},
                    {"MovePosition", new MemberRegisterInfo { Name = "MovePosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody_Wrap.M_MovePosition
#endif
                    }},
                    {"MoveRotation", new MemberRegisterInfo { Name = "MoveRotation", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody_Wrap.M_MoveRotation
#endif
                    }},
                    {"Sleep", new MemberRegisterInfo { Name = "Sleep", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody_Wrap.M_Sleep
#endif
                    }},
                    {"IsSleeping", new MemberRegisterInfo { Name = "IsSleeping", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody_Wrap.M_IsSleeping
#endif
                    }},
                    {"WakeUp", new MemberRegisterInfo { Name = "WakeUp", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody_Wrap.M_WakeUp
#endif
                    }},
                    {"ResetCenterOfMass", new MemberRegisterInfo { Name = "ResetCenterOfMass", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody_Wrap.M_ResetCenterOfMass
#endif
                    }},
                    {"ResetInertiaTensor", new MemberRegisterInfo { Name = "ResetInertiaTensor", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody_Wrap.M_ResetInertiaTensor
#endif
                    }},
                    {"GetRelativePointVelocity", new MemberRegisterInfo { Name = "GetRelativePointVelocity", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody_Wrap.M_GetRelativePointVelocity
#endif
                    }},
                    {"GetPointVelocity", new MemberRegisterInfo { Name = "GetPointVelocity", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody_Wrap.M_GetPointVelocity
#endif
                    }},
                    {"AddForce", new MemberRegisterInfo { Name = "AddForce", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody_Wrap.M_AddForce
#endif
                    }},
                    {"AddRelativeForce", new MemberRegisterInfo { Name = "AddRelativeForce", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody_Wrap.M_AddRelativeForce
#endif
                    }},
                    {"AddTorque", new MemberRegisterInfo { Name = "AddTorque", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody_Wrap.M_AddTorque
#endif
                    }},
                    {"AddRelativeTorque", new MemberRegisterInfo { Name = "AddRelativeTorque", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody_Wrap.M_AddRelativeTorque
#endif
                    }},
                    {"AddForceAtPosition", new MemberRegisterInfo { Name = "AddForceAtPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody_Wrap.M_AddForceAtPosition
#endif
                    }},
                    {"AddExplosionForce", new MemberRegisterInfo { Name = "AddExplosionForce", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody_Wrap.M_AddExplosionForce
#endif
                    }},
                    {"ClosestPointOnBounds", new MemberRegisterInfo { Name = "ClosestPointOnBounds", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody_Wrap.M_ClosestPointOnBounds
#endif
                    }},
                    {"SweepTest", new MemberRegisterInfo { Name = "SweepTest", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody_Wrap.M_SweepTest
#endif
                    }},
                    {"SweepTestAll", new MemberRegisterInfo { Name = "SweepTestAll", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody_Wrap.M_SweepTestAll
#endif
                    }},
                    {"velocity", new MemberRegisterInfo { Name = "velocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_velocity, PropertySetter = UnityEngine_Rigidbody_Wrap.S_velocity
#endif
                    }},
                    {"angularVelocity", new MemberRegisterInfo { Name = "angularVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_angularVelocity, PropertySetter = UnityEngine_Rigidbody_Wrap.S_angularVelocity
#endif
                    }},
                    {"drag", new MemberRegisterInfo { Name = "drag", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_drag, PropertySetter = UnityEngine_Rigidbody_Wrap.S_drag
#endif
                    }},
                    {"angularDrag", new MemberRegisterInfo { Name = "angularDrag", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_angularDrag, PropertySetter = UnityEngine_Rigidbody_Wrap.S_angularDrag
#endif
                    }},
                    {"mass", new MemberRegisterInfo { Name = "mass", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_mass, PropertySetter = UnityEngine_Rigidbody_Wrap.S_mass
#endif
                    }},
                    {"useGravity", new MemberRegisterInfo { Name = "useGravity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_useGravity, PropertySetter = UnityEngine_Rigidbody_Wrap.S_useGravity
#endif
                    }},
                    {"maxDepenetrationVelocity", new MemberRegisterInfo { Name = "maxDepenetrationVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_maxDepenetrationVelocity, PropertySetter = UnityEngine_Rigidbody_Wrap.S_maxDepenetrationVelocity
#endif
                    }},
                    {"isKinematic", new MemberRegisterInfo { Name = "isKinematic", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_isKinematic, PropertySetter = UnityEngine_Rigidbody_Wrap.S_isKinematic
#endif
                    }},
                    {"freezeRotation", new MemberRegisterInfo { Name = "freezeRotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_freezeRotation, PropertySetter = UnityEngine_Rigidbody_Wrap.S_freezeRotation
#endif
                    }},
                    {"constraints", new MemberRegisterInfo { Name = "constraints", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_constraints, PropertySetter = UnityEngine_Rigidbody_Wrap.S_constraints
#endif
                    }},
                    {"collisionDetectionMode", new MemberRegisterInfo { Name = "collisionDetectionMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_collisionDetectionMode, PropertySetter = UnityEngine_Rigidbody_Wrap.S_collisionDetectionMode
#endif
                    }},
                    {"centerOfMass", new MemberRegisterInfo { Name = "centerOfMass", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_centerOfMass, PropertySetter = UnityEngine_Rigidbody_Wrap.S_centerOfMass
#endif
                    }},
                    {"worldCenterOfMass", new MemberRegisterInfo { Name = "worldCenterOfMass", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_worldCenterOfMass
#endif
                    }},
                    {"inertiaTensorRotation", new MemberRegisterInfo { Name = "inertiaTensorRotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_inertiaTensorRotation, PropertySetter = UnityEngine_Rigidbody_Wrap.S_inertiaTensorRotation
#endif
                    }},
                    {"inertiaTensor", new MemberRegisterInfo { Name = "inertiaTensor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_inertiaTensor, PropertySetter = UnityEngine_Rigidbody_Wrap.S_inertiaTensor
#endif
                    }},
                    {"detectCollisions", new MemberRegisterInfo { Name = "detectCollisions", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_detectCollisions, PropertySetter = UnityEngine_Rigidbody_Wrap.S_detectCollisions
#endif
                    }},
                    {"position", new MemberRegisterInfo { Name = "position", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_position, PropertySetter = UnityEngine_Rigidbody_Wrap.S_position
#endif
                    }},
                    {"rotation", new MemberRegisterInfo { Name = "rotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_rotation, PropertySetter = UnityEngine_Rigidbody_Wrap.S_rotation
#endif
                    }},
                    {"interpolation", new MemberRegisterInfo { Name = "interpolation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_interpolation, PropertySetter = UnityEngine_Rigidbody_Wrap.S_interpolation
#endif
                    }},
                    {"solverIterations", new MemberRegisterInfo { Name = "solverIterations", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_solverIterations, PropertySetter = UnityEngine_Rigidbody_Wrap.S_solverIterations
#endif
                    }},
                    {"sleepThreshold", new MemberRegisterInfo { Name = "sleepThreshold", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_sleepThreshold, PropertySetter = UnityEngine_Rigidbody_Wrap.S_sleepThreshold
#endif
                    }},
                    {"maxAngularVelocity", new MemberRegisterInfo { Name = "maxAngularVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_maxAngularVelocity, PropertySetter = UnityEngine_Rigidbody_Wrap.S_maxAngularVelocity
#endif
                    }},
                    {"solverVelocityIterations", new MemberRegisterInfo { Name = "solverVelocityIterations", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody_Wrap.G_solverVelocityIterations, PropertySetter = UnityEngine_Rigidbody_Wrap.S_solverVelocityIterations
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Collider_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Collider_Wrap.Constructor
#endif
                    }},
                    {"ClosestPoint", new MemberRegisterInfo { Name = "ClosestPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Collider_Wrap.M_ClosestPoint
#endif
                    }},
                    {"Raycast", new MemberRegisterInfo { Name = "Raycast", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Collider_Wrap.M_Raycast
#endif
                    }},
                    {"ClosestPointOnBounds", new MemberRegisterInfo { Name = "ClosestPointOnBounds", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Collider_Wrap.M_ClosestPointOnBounds
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collider_Wrap.G_enabled, PropertySetter = UnityEngine_Collider_Wrap.S_enabled
#endif
                    }},
                    {"attachedRigidbody", new MemberRegisterInfo { Name = "attachedRigidbody", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collider_Wrap.G_attachedRigidbody
#endif
                    }},
                    {"attachedArticulationBody", new MemberRegisterInfo { Name = "attachedArticulationBody", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collider_Wrap.G_attachedArticulationBody
#endif
                    }},
                    {"isTrigger", new MemberRegisterInfo { Name = "isTrigger", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collider_Wrap.G_isTrigger, PropertySetter = UnityEngine_Collider_Wrap.S_isTrigger
#endif
                    }},
                    {"contactOffset", new MemberRegisterInfo { Name = "contactOffset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collider_Wrap.G_contactOffset, PropertySetter = UnityEngine_Collider_Wrap.S_contactOffset
#endif
                    }},
                    {"bounds", new MemberRegisterInfo { Name = "bounds", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collider_Wrap.G_bounds
#endif
                    }},
                    {"sharedMaterial", new MemberRegisterInfo { Name = "sharedMaterial", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collider_Wrap.G_sharedMaterial, PropertySetter = UnityEngine_Collider_Wrap.S_sharedMaterial
#endif
                    }},
                    {"material", new MemberRegisterInfo { Name = "material", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collider_Wrap.G_material, PropertySetter = UnityEngine_Collider_Wrap.S_material
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CharacterController_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_CharacterController_Wrap.Constructor
#endif
                    }},
                    {"SimpleMove", new MemberRegisterInfo { Name = "SimpleMove", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CharacterController_Wrap.M_SimpleMove
#endif
                    }},
                    {"Move", new MemberRegisterInfo { Name = "Move", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CharacterController_Wrap.M_Move
#endif
                    }},
                    {"velocity", new MemberRegisterInfo { Name = "velocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterController_Wrap.G_velocity
#endif
                    }},
                    {"isGrounded", new MemberRegisterInfo { Name = "isGrounded", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterController_Wrap.G_isGrounded
#endif
                    }},
                    {"collisionFlags", new MemberRegisterInfo { Name = "collisionFlags", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterController_Wrap.G_collisionFlags
#endif
                    }},
                    {"radius", new MemberRegisterInfo { Name = "radius", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterController_Wrap.G_radius, PropertySetter = UnityEngine_CharacterController_Wrap.S_radius
#endif
                    }},
                    {"height", new MemberRegisterInfo { Name = "height", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterController_Wrap.G_height, PropertySetter = UnityEngine_CharacterController_Wrap.S_height
#endif
                    }},
                    {"center", new MemberRegisterInfo { Name = "center", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterController_Wrap.G_center, PropertySetter = UnityEngine_CharacterController_Wrap.S_center
#endif
                    }},
                    {"slopeLimit", new MemberRegisterInfo { Name = "slopeLimit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterController_Wrap.G_slopeLimit, PropertySetter = UnityEngine_CharacterController_Wrap.S_slopeLimit
#endif
                    }},
                    {"stepOffset", new MemberRegisterInfo { Name = "stepOffset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterController_Wrap.G_stepOffset, PropertySetter = UnityEngine_CharacterController_Wrap.S_stepOffset
#endif
                    }},
                    {"skinWidth", new MemberRegisterInfo { Name = "skinWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterController_Wrap.G_skinWidth, PropertySetter = UnityEngine_CharacterController_Wrap.S_skinWidth
#endif
                    }},
                    {"minMoveDistance", new MemberRegisterInfo { Name = "minMoveDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterController_Wrap.G_minMoveDistance, PropertySetter = UnityEngine_CharacterController_Wrap.S_minMoveDistance
#endif
                    }},
                    {"detectCollisions", new MemberRegisterInfo { Name = "detectCollisions", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterController_Wrap.G_detectCollisions, PropertySetter = UnityEngine_CharacterController_Wrap.S_detectCollisions
#endif
                    }},
                    {"enableOverlapRecovery", new MemberRegisterInfo { Name = "enableOverlapRecovery", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterController_Wrap.G_enableOverlapRecovery, PropertySetter = UnityEngine_CharacterController_Wrap.S_enableOverlapRecovery
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_MeshCollider_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_MeshCollider_Wrap.Constructor
#endif
                    }},
                    {"sharedMesh", new MemberRegisterInfo { Name = "sharedMesh", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_MeshCollider_Wrap.G_sharedMesh, PropertySetter = UnityEngine_MeshCollider_Wrap.S_sharedMesh
#endif
                    }},
                    {"convex", new MemberRegisterInfo { Name = "convex", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_MeshCollider_Wrap.G_convex, PropertySetter = UnityEngine_MeshCollider_Wrap.S_convex
#endif
                    }},
                    {"cookingOptions", new MemberRegisterInfo { Name = "cookingOptions", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_MeshCollider_Wrap.G_cookingOptions, PropertySetter = UnityEngine_MeshCollider_Wrap.S_cookingOptions
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CapsuleCollider_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_CapsuleCollider_Wrap.Constructor
#endif
                    }},
                    {"center", new MemberRegisterInfo { Name = "center", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CapsuleCollider_Wrap.G_center, PropertySetter = UnityEngine_CapsuleCollider_Wrap.S_center
#endif
                    }},
                    {"radius", new MemberRegisterInfo { Name = "radius", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CapsuleCollider_Wrap.G_radius, PropertySetter = UnityEngine_CapsuleCollider_Wrap.S_radius
#endif
                    }},
                    {"height", new MemberRegisterInfo { Name = "height", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CapsuleCollider_Wrap.G_height, PropertySetter = UnityEngine_CapsuleCollider_Wrap.S_height
#endif
                    }},
                    {"direction", new MemberRegisterInfo { Name = "direction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CapsuleCollider_Wrap.G_direction, PropertySetter = UnityEngine_CapsuleCollider_Wrap.S_direction
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_BoxCollider_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_BoxCollider_Wrap.Constructor
#endif
                    }},
                    {"center", new MemberRegisterInfo { Name = "center", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoxCollider_Wrap.G_center, PropertySetter = UnityEngine_BoxCollider_Wrap.S_center
#endif
                    }},
                    {"size", new MemberRegisterInfo { Name = "size", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoxCollider_Wrap.G_size, PropertySetter = UnityEngine_BoxCollider_Wrap.S_size
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SphereCollider_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SphereCollider_Wrap.Constructor
#endif
                    }},
                    {"center", new MemberRegisterInfo { Name = "center", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SphereCollider_Wrap.G_center, PropertySetter = UnityEngine_SphereCollider_Wrap.S_center
#endif
                    }},
                    {"radius", new MemberRegisterInfo { Name = "radius", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SphereCollider_Wrap.G_radius, PropertySetter = UnityEngine_SphereCollider_Wrap.S_radius
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ConstantForce_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ConstantForce_Wrap.Constructor
#endif
                    }},
                    {"force", new MemberRegisterInfo { Name = "force", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConstantForce_Wrap.G_force, PropertySetter = UnityEngine_ConstantForce_Wrap.S_force
#endif
                    }},
                    {"relativeForce", new MemberRegisterInfo { Name = "relativeForce", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConstantForce_Wrap.G_relativeForce, PropertySetter = UnityEngine_ConstantForce_Wrap.S_relativeForce
#endif
                    }},
                    {"torque", new MemberRegisterInfo { Name = "torque", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConstantForce_Wrap.G_torque, PropertySetter = UnityEngine_ConstantForce_Wrap.S_torque
#endif
                    }},
                    {"relativeTorque", new MemberRegisterInfo { Name = "relativeTorque", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConstantForce_Wrap.G_relativeTorque, PropertySetter = UnityEngine_ConstantForce_Wrap.S_relativeTorque
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Joint_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Joint_Wrap.Constructor
#endif
                    }},
                    {"connectedBody", new MemberRegisterInfo { Name = "connectedBody", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Joint_Wrap.G_connectedBody, PropertySetter = UnityEngine_Joint_Wrap.S_connectedBody
#endif
                    }},
                    {"connectedArticulationBody", new MemberRegisterInfo { Name = "connectedArticulationBody", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Joint_Wrap.G_connectedArticulationBody, PropertySetter = UnityEngine_Joint_Wrap.S_connectedArticulationBody
#endif
                    }},
                    {"axis", new MemberRegisterInfo { Name = "axis", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Joint_Wrap.G_axis, PropertySetter = UnityEngine_Joint_Wrap.S_axis
#endif
                    }},
                    {"anchor", new MemberRegisterInfo { Name = "anchor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Joint_Wrap.G_anchor, PropertySetter = UnityEngine_Joint_Wrap.S_anchor
#endif
                    }},
                    {"connectedAnchor", new MemberRegisterInfo { Name = "connectedAnchor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Joint_Wrap.G_connectedAnchor, PropertySetter = UnityEngine_Joint_Wrap.S_connectedAnchor
#endif
                    }},
                    {"autoConfigureConnectedAnchor", new MemberRegisterInfo { Name = "autoConfigureConnectedAnchor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Joint_Wrap.G_autoConfigureConnectedAnchor, PropertySetter = UnityEngine_Joint_Wrap.S_autoConfigureConnectedAnchor
#endif
                    }},
                    {"breakForce", new MemberRegisterInfo { Name = "breakForce", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Joint_Wrap.G_breakForce, PropertySetter = UnityEngine_Joint_Wrap.S_breakForce
#endif
                    }},
                    {"breakTorque", new MemberRegisterInfo { Name = "breakTorque", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Joint_Wrap.G_breakTorque, PropertySetter = UnityEngine_Joint_Wrap.S_breakTorque
#endif
                    }},
                    {"enableCollision", new MemberRegisterInfo { Name = "enableCollision", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Joint_Wrap.G_enableCollision, PropertySetter = UnityEngine_Joint_Wrap.S_enableCollision
#endif
                    }},
                    {"enablePreprocessing", new MemberRegisterInfo { Name = "enablePreprocessing", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Joint_Wrap.G_enablePreprocessing, PropertySetter = UnityEngine_Joint_Wrap.S_enablePreprocessing
#endif
                    }},
                    {"massScale", new MemberRegisterInfo { Name = "massScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Joint_Wrap.G_massScale, PropertySetter = UnityEngine_Joint_Wrap.S_massScale
#endif
                    }},
                    {"connectedMassScale", new MemberRegisterInfo { Name = "connectedMassScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Joint_Wrap.G_connectedMassScale, PropertySetter = UnityEngine_Joint_Wrap.S_connectedMassScale
#endif
                    }},
                    {"currentForce", new MemberRegisterInfo { Name = "currentForce", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Joint_Wrap.G_currentForce
#endif
                    }},
                    {"currentTorque", new MemberRegisterInfo { Name = "currentTorque", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Joint_Wrap.G_currentTorque
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_HingeJoint_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_HingeJoint_Wrap.Constructor
#endif
                    }},
                    {"motor", new MemberRegisterInfo { Name = "motor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HingeJoint_Wrap.G_motor, PropertySetter = UnityEngine_HingeJoint_Wrap.S_motor
#endif
                    }},
                    {"limits", new MemberRegisterInfo { Name = "limits", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HingeJoint_Wrap.G_limits, PropertySetter = UnityEngine_HingeJoint_Wrap.S_limits
#endif
                    }},
                    {"spring", new MemberRegisterInfo { Name = "spring", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HingeJoint_Wrap.G_spring, PropertySetter = UnityEngine_HingeJoint_Wrap.S_spring
#endif
                    }},
                    {"useMotor", new MemberRegisterInfo { Name = "useMotor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HingeJoint_Wrap.G_useMotor, PropertySetter = UnityEngine_HingeJoint_Wrap.S_useMotor
#endif
                    }},
                    {"useLimits", new MemberRegisterInfo { Name = "useLimits", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HingeJoint_Wrap.G_useLimits, PropertySetter = UnityEngine_HingeJoint_Wrap.S_useLimits
#endif
                    }},
                    {"useSpring", new MemberRegisterInfo { Name = "useSpring", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HingeJoint_Wrap.G_useSpring, PropertySetter = UnityEngine_HingeJoint_Wrap.S_useSpring
#endif
                    }},
                    {"velocity", new MemberRegisterInfo { Name = "velocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HingeJoint_Wrap.G_velocity
#endif
                    }},
                    {"angle", new MemberRegisterInfo { Name = "angle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HingeJoint_Wrap.G_angle
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SpringJoint_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SpringJoint_Wrap.Constructor
#endif
                    }},
                    {"spring", new MemberRegisterInfo { Name = "spring", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpringJoint_Wrap.G_spring, PropertySetter = UnityEngine_SpringJoint_Wrap.S_spring
#endif
                    }},
                    {"damper", new MemberRegisterInfo { Name = "damper", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpringJoint_Wrap.G_damper, PropertySetter = UnityEngine_SpringJoint_Wrap.S_damper
#endif
                    }},
                    {"minDistance", new MemberRegisterInfo { Name = "minDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpringJoint_Wrap.G_minDistance, PropertySetter = UnityEngine_SpringJoint_Wrap.S_minDistance
#endif
                    }},
                    {"maxDistance", new MemberRegisterInfo { Name = "maxDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpringJoint_Wrap.G_maxDistance, PropertySetter = UnityEngine_SpringJoint_Wrap.S_maxDistance
#endif
                    }},
                    {"tolerance", new MemberRegisterInfo { Name = "tolerance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpringJoint_Wrap.G_tolerance, PropertySetter = UnityEngine_SpringJoint_Wrap.S_tolerance
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_FixedJoint_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_FixedJoint_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CharacterJoint_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_CharacterJoint_Wrap.Constructor
#endif
                    }},
                    {"swingAxis", new MemberRegisterInfo { Name = "swingAxis", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterJoint_Wrap.G_swingAxis, PropertySetter = UnityEngine_CharacterJoint_Wrap.S_swingAxis
#endif
                    }},
                    {"twistLimitSpring", new MemberRegisterInfo { Name = "twistLimitSpring", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterJoint_Wrap.G_twistLimitSpring, PropertySetter = UnityEngine_CharacterJoint_Wrap.S_twistLimitSpring
#endif
                    }},
                    {"swingLimitSpring", new MemberRegisterInfo { Name = "swingLimitSpring", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterJoint_Wrap.G_swingLimitSpring, PropertySetter = UnityEngine_CharacterJoint_Wrap.S_swingLimitSpring
#endif
                    }},
                    {"lowTwistLimit", new MemberRegisterInfo { Name = "lowTwistLimit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterJoint_Wrap.G_lowTwistLimit, PropertySetter = UnityEngine_CharacterJoint_Wrap.S_lowTwistLimit
#endif
                    }},
                    {"highTwistLimit", new MemberRegisterInfo { Name = "highTwistLimit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterJoint_Wrap.G_highTwistLimit, PropertySetter = UnityEngine_CharacterJoint_Wrap.S_highTwistLimit
#endif
                    }},
                    {"swing1Limit", new MemberRegisterInfo { Name = "swing1Limit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterJoint_Wrap.G_swing1Limit, PropertySetter = UnityEngine_CharacterJoint_Wrap.S_swing1Limit
#endif
                    }},
                    {"swing2Limit", new MemberRegisterInfo { Name = "swing2Limit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterJoint_Wrap.G_swing2Limit, PropertySetter = UnityEngine_CharacterJoint_Wrap.S_swing2Limit
#endif
                    }},
                    {"enableProjection", new MemberRegisterInfo { Name = "enableProjection", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterJoint_Wrap.G_enableProjection, PropertySetter = UnityEngine_CharacterJoint_Wrap.S_enableProjection
#endif
                    }},
                    {"projectionDistance", new MemberRegisterInfo { Name = "projectionDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterJoint_Wrap.G_projectionDistance, PropertySetter = UnityEngine_CharacterJoint_Wrap.S_projectionDistance
#endif
                    }},
                    {"projectionAngle", new MemberRegisterInfo { Name = "projectionAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterJoint_Wrap.G_projectionAngle, PropertySetter = UnityEngine_CharacterJoint_Wrap.S_projectionAngle
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ConfigurableJoint_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ConfigurableJoint_Wrap.Constructor
#endif
                    }},
                    {"secondaryAxis", new MemberRegisterInfo { Name = "secondaryAxis", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_secondaryAxis, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_secondaryAxis
#endif
                    }},
                    {"xMotion", new MemberRegisterInfo { Name = "xMotion", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_xMotion, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_xMotion
#endif
                    }},
                    {"yMotion", new MemberRegisterInfo { Name = "yMotion", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_yMotion, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_yMotion
#endif
                    }},
                    {"zMotion", new MemberRegisterInfo { Name = "zMotion", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_zMotion, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_zMotion
#endif
                    }},
                    {"angularXMotion", new MemberRegisterInfo { Name = "angularXMotion", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_angularXMotion, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_angularXMotion
#endif
                    }},
                    {"angularYMotion", new MemberRegisterInfo { Name = "angularYMotion", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_angularYMotion, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_angularYMotion
#endif
                    }},
                    {"angularZMotion", new MemberRegisterInfo { Name = "angularZMotion", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_angularZMotion, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_angularZMotion
#endif
                    }},
                    {"linearLimitSpring", new MemberRegisterInfo { Name = "linearLimitSpring", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_linearLimitSpring, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_linearLimitSpring
#endif
                    }},
                    {"angularXLimitSpring", new MemberRegisterInfo { Name = "angularXLimitSpring", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_angularXLimitSpring, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_angularXLimitSpring
#endif
                    }},
                    {"angularYZLimitSpring", new MemberRegisterInfo { Name = "angularYZLimitSpring", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_angularYZLimitSpring, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_angularYZLimitSpring
#endif
                    }},
                    {"linearLimit", new MemberRegisterInfo { Name = "linearLimit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_linearLimit, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_linearLimit
#endif
                    }},
                    {"lowAngularXLimit", new MemberRegisterInfo { Name = "lowAngularXLimit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_lowAngularXLimit, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_lowAngularXLimit
#endif
                    }},
                    {"highAngularXLimit", new MemberRegisterInfo { Name = "highAngularXLimit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_highAngularXLimit, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_highAngularXLimit
#endif
                    }},
                    {"angularYLimit", new MemberRegisterInfo { Name = "angularYLimit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_angularYLimit, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_angularYLimit
#endif
                    }},
                    {"angularZLimit", new MemberRegisterInfo { Name = "angularZLimit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_angularZLimit, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_angularZLimit
#endif
                    }},
                    {"targetPosition", new MemberRegisterInfo { Name = "targetPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_targetPosition, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_targetPosition
#endif
                    }},
                    {"targetVelocity", new MemberRegisterInfo { Name = "targetVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_targetVelocity, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_targetVelocity
#endif
                    }},
                    {"xDrive", new MemberRegisterInfo { Name = "xDrive", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_xDrive, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_xDrive
#endif
                    }},
                    {"yDrive", new MemberRegisterInfo { Name = "yDrive", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_yDrive, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_yDrive
#endif
                    }},
                    {"zDrive", new MemberRegisterInfo { Name = "zDrive", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_zDrive, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_zDrive
#endif
                    }},
                    {"targetRotation", new MemberRegisterInfo { Name = "targetRotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_targetRotation, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_targetRotation
#endif
                    }},
                    {"targetAngularVelocity", new MemberRegisterInfo { Name = "targetAngularVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_targetAngularVelocity, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_targetAngularVelocity
#endif
                    }},
                    {"rotationDriveMode", new MemberRegisterInfo { Name = "rotationDriveMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_rotationDriveMode, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_rotationDriveMode
#endif
                    }},
                    {"angularXDrive", new MemberRegisterInfo { Name = "angularXDrive", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_angularXDrive, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_angularXDrive
#endif
                    }},
                    {"angularYZDrive", new MemberRegisterInfo { Name = "angularYZDrive", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_angularYZDrive, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_angularYZDrive
#endif
                    }},
                    {"slerpDrive", new MemberRegisterInfo { Name = "slerpDrive", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_slerpDrive, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_slerpDrive
#endif
                    }},
                    {"projectionMode", new MemberRegisterInfo { Name = "projectionMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_projectionMode, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_projectionMode
#endif
                    }},
                    {"projectionDistance", new MemberRegisterInfo { Name = "projectionDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_projectionDistance, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_projectionDistance
#endif
                    }},
                    {"projectionAngle", new MemberRegisterInfo { Name = "projectionAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_projectionAngle, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_projectionAngle
#endif
                    }},
                    {"configuredInWorldSpace", new MemberRegisterInfo { Name = "configuredInWorldSpace", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_configuredInWorldSpace, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_configuredInWorldSpace
#endif
                    }},
                    {"swapBodies", new MemberRegisterInfo { Name = "swapBodies", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConfigurableJoint_Wrap.G_swapBodies, PropertySetter = UnityEngine_ConfigurableJoint_Wrap.S_swapBodies
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ContactPoint_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ContactPoint_Wrap.Constructor
#endif
                    }},
                    {"point", new MemberRegisterInfo { Name = "point", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactPoint_Wrap.G_point
#endif
                    }},
                    {"normal", new MemberRegisterInfo { Name = "normal", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactPoint_Wrap.G_normal
#endif
                    }},
                    {"thisCollider", new MemberRegisterInfo { Name = "thisCollider", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactPoint_Wrap.G_thisCollider
#endif
                    }},
                    {"otherCollider", new MemberRegisterInfo { Name = "otherCollider", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactPoint_Wrap.G_otherCollider
#endif
                    }},
                    {"separation", new MemberRegisterInfo { Name = "separation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactPoint_Wrap.G_separation
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_PhysicsScene_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_PhysicsScene_Wrap.Constructor
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene_Wrap.M_ToString
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene_Wrap.O_op_Inequality
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene_Wrap.M_GetHashCode
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene_Wrap.M_Equals
#endif
                    }},
                    {"IsValid", new MemberRegisterInfo { Name = "IsValid", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene_Wrap.M_IsValid
#endif
                    }},
                    {"IsEmpty", new MemberRegisterInfo { Name = "IsEmpty", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene_Wrap.M_IsEmpty
#endif
                    }},
                    {"Simulate", new MemberRegisterInfo { Name = "Simulate", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene_Wrap.M_Simulate
#endif
                    }},
                    {"Raycast", new MemberRegisterInfo { Name = "Raycast", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene_Wrap.M_Raycast
#endif
                    }},
                    {"CapsuleCast", new MemberRegisterInfo { Name = "CapsuleCast", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene_Wrap.M_CapsuleCast
#endif
                    }},
                    {"OverlapCapsule", new MemberRegisterInfo { Name = "OverlapCapsule", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene_Wrap.M_OverlapCapsule
#endif
                    }},
                    {"SphereCast", new MemberRegisterInfo { Name = "SphereCast", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene_Wrap.M_SphereCast
#endif
                    }},
                    {"OverlapSphere", new MemberRegisterInfo { Name = "OverlapSphere", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene_Wrap.M_OverlapSphere
#endif
                    }},
                    {"BoxCast", new MemberRegisterInfo { Name = "BoxCast", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene_Wrap.M_BoxCast
#endif
                    }},
                    {"OverlapBox", new MemberRegisterInfo { Name = "OverlapBox", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene_Wrap.M_OverlapBox
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_PhysicsSceneExtensions_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"GetPhysicsScene_static", new MemberRegisterInfo { Name = "GetPhysicsScene", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsSceneExtensions_Wrap.F_GetPhysicsScene
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ArticulationDrive_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ArticulationDrive_Wrap.Constructor
#endif
                    }},
                    {"lowerLimit", new MemberRegisterInfo { Name = "lowerLimit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationDrive_Wrap.G_lowerLimit, PropertySetter = UnityEngine_ArticulationDrive_Wrap.S_lowerLimit
#endif
                    }},
                    {"upperLimit", new MemberRegisterInfo { Name = "upperLimit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationDrive_Wrap.G_upperLimit, PropertySetter = UnityEngine_ArticulationDrive_Wrap.S_upperLimit
#endif
                    }},
                    {"stiffness", new MemberRegisterInfo { Name = "stiffness", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationDrive_Wrap.G_stiffness, PropertySetter = UnityEngine_ArticulationDrive_Wrap.S_stiffness
#endif
                    }},
                    {"damping", new MemberRegisterInfo { Name = "damping", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationDrive_Wrap.G_damping, PropertySetter = UnityEngine_ArticulationDrive_Wrap.S_damping
#endif
                    }},
                    {"forceLimit", new MemberRegisterInfo { Name = "forceLimit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationDrive_Wrap.G_forceLimit, PropertySetter = UnityEngine_ArticulationDrive_Wrap.S_forceLimit
#endif
                    }},
                    {"target", new MemberRegisterInfo { Name = "target", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationDrive_Wrap.G_target, PropertySetter = UnityEngine_ArticulationDrive_Wrap.S_target
#endif
                    }},
                    {"targetVelocity", new MemberRegisterInfo { Name = "targetVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationDrive_Wrap.G_targetVelocity, PropertySetter = UnityEngine_ArticulationDrive_Wrap.S_targetVelocity
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ArticulationReducedSpace_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ArticulationReducedSpace_Wrap.Constructor
#endif
                    }},
                    {"get_Item", new MemberRegisterInfo { Name = "get_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationReducedSpace_Wrap.GetItem
#endif
                    }},
                    {"set_Item", new MemberRegisterInfo { Name = "set_Item", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationReducedSpace_Wrap.SetItem
#endif
                    }},
                    {"dofCount", new MemberRegisterInfo { Name = "dofCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationReducedSpace_Wrap.G_dofCount, PropertySetter = UnityEngine_ArticulationReducedSpace_Wrap.S_dofCount
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ArticulationJacobian_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ArticulationJacobian_Wrap.Constructor
#endif
                    }},
                    {"rows", new MemberRegisterInfo { Name = "rows", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationJacobian_Wrap.G_rows, PropertySetter = UnityEngine_ArticulationJacobian_Wrap.S_rows
#endif
                    }},
                    {"columns", new MemberRegisterInfo { Name = "columns", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationJacobian_Wrap.G_columns, PropertySetter = UnityEngine_ArticulationJacobian_Wrap.S_columns
#endif
                    }},
                    {"elements", new MemberRegisterInfo { Name = "elements", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationJacobian_Wrap.G_elements, PropertySetter = UnityEngine_ArticulationJacobian_Wrap.S_elements
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ArticulationBody_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ArticulationBody_Wrap.Constructor
#endif
                    }},
                    {"AddForce", new MemberRegisterInfo { Name = "AddForce", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_AddForce
#endif
                    }},
                    {"AddRelativeForce", new MemberRegisterInfo { Name = "AddRelativeForce", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_AddRelativeForce
#endif
                    }},
                    {"AddTorque", new MemberRegisterInfo { Name = "AddTorque", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_AddTorque
#endif
                    }},
                    {"AddRelativeTorque", new MemberRegisterInfo { Name = "AddRelativeTorque", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_AddRelativeTorque
#endif
                    }},
                    {"AddForceAtPosition", new MemberRegisterInfo { Name = "AddForceAtPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_AddForceAtPosition
#endif
                    }},
                    {"ResetCenterOfMass", new MemberRegisterInfo { Name = "ResetCenterOfMass", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_ResetCenterOfMass
#endif
                    }},
                    {"ResetInertiaTensor", new MemberRegisterInfo { Name = "ResetInertiaTensor", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_ResetInertiaTensor
#endif
                    }},
                    {"Sleep", new MemberRegisterInfo { Name = "Sleep", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_Sleep
#endif
                    }},
                    {"IsSleeping", new MemberRegisterInfo { Name = "IsSleeping", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_IsSleeping
#endif
                    }},
                    {"WakeUp", new MemberRegisterInfo { Name = "WakeUp", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_WakeUp
#endif
                    }},
                    {"TeleportRoot", new MemberRegisterInfo { Name = "TeleportRoot", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_TeleportRoot
#endif
                    }},
                    {"GetClosestPoint", new MemberRegisterInfo { Name = "GetClosestPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_GetClosestPoint
#endif
                    }},
                    {"GetRelativePointVelocity", new MemberRegisterInfo { Name = "GetRelativePointVelocity", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_GetRelativePointVelocity
#endif
                    }},
                    {"GetPointVelocity", new MemberRegisterInfo { Name = "GetPointVelocity", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_GetPointVelocity
#endif
                    }},
                    {"GetDenseJacobian", new MemberRegisterInfo { Name = "GetDenseJacobian", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_GetDenseJacobian
#endif
                    }},
                    {"GetJointPositions", new MemberRegisterInfo { Name = "GetJointPositions", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_GetJointPositions
#endif
                    }},
                    {"SetJointPositions", new MemberRegisterInfo { Name = "SetJointPositions", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_SetJointPositions
#endif
                    }},
                    {"GetJointVelocities", new MemberRegisterInfo { Name = "GetJointVelocities", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_GetJointVelocities
#endif
                    }},
                    {"SetJointVelocities", new MemberRegisterInfo { Name = "SetJointVelocities", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_SetJointVelocities
#endif
                    }},
                    {"GetJointAccelerations", new MemberRegisterInfo { Name = "GetJointAccelerations", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_GetJointAccelerations
#endif
                    }},
                    {"SetJointAccelerations", new MemberRegisterInfo { Name = "SetJointAccelerations", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_SetJointAccelerations
#endif
                    }},
                    {"GetJointForces", new MemberRegisterInfo { Name = "GetJointForces", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_GetJointForces
#endif
                    }},
                    {"SetJointForces", new MemberRegisterInfo { Name = "SetJointForces", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_SetJointForces
#endif
                    }},
                    {"GetDriveTargets", new MemberRegisterInfo { Name = "GetDriveTargets", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_GetDriveTargets
#endif
                    }},
                    {"SetDriveTargets", new MemberRegisterInfo { Name = "SetDriveTargets", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_SetDriveTargets
#endif
                    }},
                    {"GetDriveTargetVelocities", new MemberRegisterInfo { Name = "GetDriveTargetVelocities", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_GetDriveTargetVelocities
#endif
                    }},
                    {"SetDriveTargetVelocities", new MemberRegisterInfo { Name = "SetDriveTargetVelocities", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_SetDriveTargetVelocities
#endif
                    }},
                    {"GetDofStartIndices", new MemberRegisterInfo { Name = "GetDofStartIndices", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ArticulationBody_Wrap.M_GetDofStartIndices
#endif
                    }},
                    {"jointType", new MemberRegisterInfo { Name = "jointType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_jointType, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_jointType
#endif
                    }},
                    {"anchorPosition", new MemberRegisterInfo { Name = "anchorPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_anchorPosition, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_anchorPosition
#endif
                    }},
                    {"parentAnchorPosition", new MemberRegisterInfo { Name = "parentAnchorPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_parentAnchorPosition, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_parentAnchorPosition
#endif
                    }},
                    {"anchorRotation", new MemberRegisterInfo { Name = "anchorRotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_anchorRotation, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_anchorRotation
#endif
                    }},
                    {"parentAnchorRotation", new MemberRegisterInfo { Name = "parentAnchorRotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_parentAnchorRotation, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_parentAnchorRotation
#endif
                    }},
                    {"isRoot", new MemberRegisterInfo { Name = "isRoot", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_isRoot
#endif
                    }},
                    {"linearLockX", new MemberRegisterInfo { Name = "linearLockX", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_linearLockX, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_linearLockX
#endif
                    }},
                    {"linearLockY", new MemberRegisterInfo { Name = "linearLockY", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_linearLockY, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_linearLockY
#endif
                    }},
                    {"linearLockZ", new MemberRegisterInfo { Name = "linearLockZ", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_linearLockZ, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_linearLockZ
#endif
                    }},
                    {"swingYLock", new MemberRegisterInfo { Name = "swingYLock", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_swingYLock, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_swingYLock
#endif
                    }},
                    {"swingZLock", new MemberRegisterInfo { Name = "swingZLock", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_swingZLock, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_swingZLock
#endif
                    }},
                    {"twistLock", new MemberRegisterInfo { Name = "twistLock", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_twistLock, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_twistLock
#endif
                    }},
                    {"xDrive", new MemberRegisterInfo { Name = "xDrive", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_xDrive, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_xDrive
#endif
                    }},
                    {"yDrive", new MemberRegisterInfo { Name = "yDrive", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_yDrive, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_yDrive
#endif
                    }},
                    {"zDrive", new MemberRegisterInfo { Name = "zDrive", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_zDrive, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_zDrive
#endif
                    }},
                    {"immovable", new MemberRegisterInfo { Name = "immovable", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_immovable, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_immovable
#endif
                    }},
                    {"useGravity", new MemberRegisterInfo { Name = "useGravity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_useGravity, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_useGravity
#endif
                    }},
                    {"linearDamping", new MemberRegisterInfo { Name = "linearDamping", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_linearDamping, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_linearDamping
#endif
                    }},
                    {"angularDamping", new MemberRegisterInfo { Name = "angularDamping", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_angularDamping, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_angularDamping
#endif
                    }},
                    {"jointFriction", new MemberRegisterInfo { Name = "jointFriction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_jointFriction, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_jointFriction
#endif
                    }},
                    {"velocity", new MemberRegisterInfo { Name = "velocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_velocity, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_velocity
#endif
                    }},
                    {"angularVelocity", new MemberRegisterInfo { Name = "angularVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_angularVelocity, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_angularVelocity
#endif
                    }},
                    {"mass", new MemberRegisterInfo { Name = "mass", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_mass, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_mass
#endif
                    }},
                    {"centerOfMass", new MemberRegisterInfo { Name = "centerOfMass", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_centerOfMass, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_centerOfMass
#endif
                    }},
                    {"worldCenterOfMass", new MemberRegisterInfo { Name = "worldCenterOfMass", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_worldCenterOfMass
#endif
                    }},
                    {"inertiaTensor", new MemberRegisterInfo { Name = "inertiaTensor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_inertiaTensor, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_inertiaTensor
#endif
                    }},
                    {"inertiaTensorRotation", new MemberRegisterInfo { Name = "inertiaTensorRotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_inertiaTensorRotation, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_inertiaTensorRotation
#endif
                    }},
                    {"sleepThreshold", new MemberRegisterInfo { Name = "sleepThreshold", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_sleepThreshold, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_sleepThreshold
#endif
                    }},
                    {"solverIterations", new MemberRegisterInfo { Name = "solverIterations", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_solverIterations, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_solverIterations
#endif
                    }},
                    {"solverVelocityIterations", new MemberRegisterInfo { Name = "solverVelocityIterations", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_solverVelocityIterations, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_solverVelocityIterations
#endif
                    }},
                    {"maxAngularVelocity", new MemberRegisterInfo { Name = "maxAngularVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_maxAngularVelocity, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_maxAngularVelocity
#endif
                    }},
                    {"maxLinearVelocity", new MemberRegisterInfo { Name = "maxLinearVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_maxLinearVelocity, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_maxLinearVelocity
#endif
                    }},
                    {"maxJointVelocity", new MemberRegisterInfo { Name = "maxJointVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_maxJointVelocity, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_maxJointVelocity
#endif
                    }},
                    {"maxDepenetrationVelocity", new MemberRegisterInfo { Name = "maxDepenetrationVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_maxDepenetrationVelocity, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_maxDepenetrationVelocity
#endif
                    }},
                    {"jointPosition", new MemberRegisterInfo { Name = "jointPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_jointPosition, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_jointPosition
#endif
                    }},
                    {"jointVelocity", new MemberRegisterInfo { Name = "jointVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_jointVelocity, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_jointVelocity
#endif
                    }},
                    {"jointAcceleration", new MemberRegisterInfo { Name = "jointAcceleration", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_jointAcceleration, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_jointAcceleration
#endif
                    }},
                    {"jointForce", new MemberRegisterInfo { Name = "jointForce", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_jointForce, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_jointForce
#endif
                    }},
                    {"dofCount", new MemberRegisterInfo { Name = "dofCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_dofCount
#endif
                    }},
                    {"index", new MemberRegisterInfo { Name = "index", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_index
#endif
                    }},
                    {"collisionDetectionMode", new MemberRegisterInfo { Name = "collisionDetectionMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ArticulationBody_Wrap.G_collisionDetectionMode, PropertySetter = UnityEngine_ArticulationBody_Wrap.S_collisionDetectionMode
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Physics_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Physics_Wrap.Constructor
#endif
                    }},
                    {"IgnoreCollision_static", new MemberRegisterInfo { Name = "IgnoreCollision", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_IgnoreCollision
#endif
                    }},
                    {"IgnoreLayerCollision_static", new MemberRegisterInfo { Name = "IgnoreLayerCollision", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_IgnoreLayerCollision
#endif
                    }},
                    {"GetIgnoreLayerCollision_static", new MemberRegisterInfo { Name = "GetIgnoreLayerCollision", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_GetIgnoreLayerCollision
#endif
                    }},
                    {"GetIgnoreCollision_static", new MemberRegisterInfo { Name = "GetIgnoreCollision", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_GetIgnoreCollision
#endif
                    }},
                    {"Raycast_static", new MemberRegisterInfo { Name = "Raycast", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_Raycast
#endif
                    }},
                    {"Linecast_static", new MemberRegisterInfo { Name = "Linecast", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_Linecast
#endif
                    }},
                    {"CapsuleCast_static", new MemberRegisterInfo { Name = "CapsuleCast", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_CapsuleCast
#endif
                    }},
                    {"SphereCast_static", new MemberRegisterInfo { Name = "SphereCast", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_SphereCast
#endif
                    }},
                    {"BoxCast_static", new MemberRegisterInfo { Name = "BoxCast", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_BoxCast
#endif
                    }},
                    {"RaycastAll_static", new MemberRegisterInfo { Name = "RaycastAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_RaycastAll
#endif
                    }},
                    {"RaycastNonAlloc_static", new MemberRegisterInfo { Name = "RaycastNonAlloc", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_RaycastNonAlloc
#endif
                    }},
                    {"CapsuleCastAll_static", new MemberRegisterInfo { Name = "CapsuleCastAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_CapsuleCastAll
#endif
                    }},
                    {"SphereCastAll_static", new MemberRegisterInfo { Name = "SphereCastAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_SphereCastAll
#endif
                    }},
                    {"OverlapCapsule_static", new MemberRegisterInfo { Name = "OverlapCapsule", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_OverlapCapsule
#endif
                    }},
                    {"OverlapSphere_static", new MemberRegisterInfo { Name = "OverlapSphere", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_OverlapSphere
#endif
                    }},
                    {"Simulate_static", new MemberRegisterInfo { Name = "Simulate", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_Simulate
#endif
                    }},
                    {"SyncTransforms_static", new MemberRegisterInfo { Name = "SyncTransforms", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_SyncTransforms
#endif
                    }},
                    {"ComputePenetration_static", new MemberRegisterInfo { Name = "ComputePenetration", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_ComputePenetration
#endif
                    }},
                    {"ClosestPoint_static", new MemberRegisterInfo { Name = "ClosestPoint", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_ClosestPoint
#endif
                    }},
                    {"OverlapSphereNonAlloc_static", new MemberRegisterInfo { Name = "OverlapSphereNonAlloc", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_OverlapSphereNonAlloc
#endif
                    }},
                    {"CheckSphere_static", new MemberRegisterInfo { Name = "CheckSphere", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_CheckSphere
#endif
                    }},
                    {"CapsuleCastNonAlloc_static", new MemberRegisterInfo { Name = "CapsuleCastNonAlloc", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_CapsuleCastNonAlloc
#endif
                    }},
                    {"SphereCastNonAlloc_static", new MemberRegisterInfo { Name = "SphereCastNonAlloc", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_SphereCastNonAlloc
#endif
                    }},
                    {"CheckCapsule_static", new MemberRegisterInfo { Name = "CheckCapsule", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_CheckCapsule
#endif
                    }},
                    {"CheckBox_static", new MemberRegisterInfo { Name = "CheckBox", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_CheckBox
#endif
                    }},
                    {"OverlapBox_static", new MemberRegisterInfo { Name = "OverlapBox", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_OverlapBox
#endif
                    }},
                    {"OverlapBoxNonAlloc_static", new MemberRegisterInfo { Name = "OverlapBoxNonAlloc", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_OverlapBoxNonAlloc
#endif
                    }},
                    {"BoxCastNonAlloc_static", new MemberRegisterInfo { Name = "BoxCastNonAlloc", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_BoxCastNonAlloc
#endif
                    }},
                    {"BoxCastAll_static", new MemberRegisterInfo { Name = "BoxCastAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_BoxCastAll
#endif
                    }},
                    {"OverlapCapsuleNonAlloc_static", new MemberRegisterInfo { Name = "OverlapCapsuleNonAlloc", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_OverlapCapsuleNonAlloc
#endif
                    }},
                    {"RebuildBroadphaseRegions_static", new MemberRegisterInfo { Name = "RebuildBroadphaseRegions", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_RebuildBroadphaseRegions
#endif
                    }},
                    {"BakeMesh_static", new MemberRegisterInfo { Name = "BakeMesh", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics_Wrap.F_BakeMesh
#endif
                    }},
                    {"gravity_static", new MemberRegisterInfo { Name = "gravity", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics_Wrap.G_gravity, PropertySetter = UnityEngine_Physics_Wrap.S_gravity
#endif
                    }},
                    {"defaultContactOffset_static", new MemberRegisterInfo { Name = "defaultContactOffset", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics_Wrap.G_defaultContactOffset, PropertySetter = UnityEngine_Physics_Wrap.S_defaultContactOffset
#endif
                    }},
                    {"sleepThreshold_static", new MemberRegisterInfo { Name = "sleepThreshold", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics_Wrap.G_sleepThreshold, PropertySetter = UnityEngine_Physics_Wrap.S_sleepThreshold
#endif
                    }},
                    {"queriesHitTriggers_static", new MemberRegisterInfo { Name = "queriesHitTriggers", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics_Wrap.G_queriesHitTriggers, PropertySetter = UnityEngine_Physics_Wrap.S_queriesHitTriggers
#endif
                    }},
                    {"queriesHitBackfaces_static", new MemberRegisterInfo { Name = "queriesHitBackfaces", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics_Wrap.G_queriesHitBackfaces, PropertySetter = UnityEngine_Physics_Wrap.S_queriesHitBackfaces
#endif
                    }},
                    {"bounceThreshold_static", new MemberRegisterInfo { Name = "bounceThreshold", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics_Wrap.G_bounceThreshold, PropertySetter = UnityEngine_Physics_Wrap.S_bounceThreshold
#endif
                    }},
                    {"defaultMaxDepenetrationVelocity_static", new MemberRegisterInfo { Name = "defaultMaxDepenetrationVelocity", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics_Wrap.G_defaultMaxDepenetrationVelocity, PropertySetter = UnityEngine_Physics_Wrap.S_defaultMaxDepenetrationVelocity
#endif
                    }},
                    {"defaultSolverIterations_static", new MemberRegisterInfo { Name = "defaultSolverIterations", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics_Wrap.G_defaultSolverIterations, PropertySetter = UnityEngine_Physics_Wrap.S_defaultSolverIterations
#endif
                    }},
                    {"defaultSolverVelocityIterations_static", new MemberRegisterInfo { Name = "defaultSolverVelocityIterations", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics_Wrap.G_defaultSolverVelocityIterations, PropertySetter = UnityEngine_Physics_Wrap.S_defaultSolverVelocityIterations
#endif
                    }},
                    {"defaultMaxAngularSpeed_static", new MemberRegisterInfo { Name = "defaultMaxAngularSpeed", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics_Wrap.G_defaultMaxAngularSpeed, PropertySetter = UnityEngine_Physics_Wrap.S_defaultMaxAngularSpeed
#endif
                    }},
                    {"defaultPhysicsScene_static", new MemberRegisterInfo { Name = "defaultPhysicsScene", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics_Wrap.G_defaultPhysicsScene
#endif
                    }},
                    {"autoSimulation_static", new MemberRegisterInfo { Name = "autoSimulation", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics_Wrap.G_autoSimulation, PropertySetter = UnityEngine_Physics_Wrap.S_autoSimulation
#endif
                    }},
                    {"autoSyncTransforms_static", new MemberRegisterInfo { Name = "autoSyncTransforms", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics_Wrap.G_autoSyncTransforms, PropertySetter = UnityEngine_Physics_Wrap.S_autoSyncTransforms
#endif
                    }},
                    {"reuseCollisionCallbacks_static", new MemberRegisterInfo { Name = "reuseCollisionCallbacks", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics_Wrap.G_reuseCollisionCallbacks, PropertySetter = UnityEngine_Physics_Wrap.S_reuseCollisionCallbacks
#endif
                    }},
                    {"interCollisionDistance_static", new MemberRegisterInfo { Name = "interCollisionDistance", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics_Wrap.G_interCollisionDistance, PropertySetter = UnityEngine_Physics_Wrap.S_interCollisionDistance
#endif
                    }},
                    {"interCollisionStiffness_static", new MemberRegisterInfo { Name = "interCollisionStiffness", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics_Wrap.G_interCollisionStiffness, PropertySetter = UnityEngine_Physics_Wrap.S_interCollisionStiffness
#endif
                    }},
                    {"interCollisionSettingsToggle_static", new MemberRegisterInfo { Name = "interCollisionSettingsToggle", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics_Wrap.G_interCollisionSettingsToggle, PropertySetter = UnityEngine_Physics_Wrap.S_interCollisionSettingsToggle
#endif
                    }},
                    {"clothGravity_static", new MemberRegisterInfo { Name = "clothGravity", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics_Wrap.G_clothGravity, PropertySetter = UnityEngine_Physics_Wrap.S_clothGravity
#endif
                    }},
                    {"IgnoreRaycastLayer_static", new MemberRegisterInfo { Name = "IgnoreRaycastLayer", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics_Wrap.G_IgnoreRaycastLayer
#endif
                    }},
                    {"DefaultRaycastLayers_static", new MemberRegisterInfo { Name = "DefaultRaycastLayers", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics_Wrap.G_DefaultRaycastLayers
#endif
                    }},
                    {"AllLayers_static", new MemberRegisterInfo { Name = "AllLayers", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics_Wrap.G_AllLayers
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RaycastCommand_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_RaycastCommand_Wrap.Constructor
#endif
                    }},
                    {"from", new MemberRegisterInfo { Name = "from", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastCommand_Wrap.G_from, PropertySetter = UnityEngine_RaycastCommand_Wrap.S_from
#endif
                    }},
                    {"direction", new MemberRegisterInfo { Name = "direction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastCommand_Wrap.G_direction, PropertySetter = UnityEngine_RaycastCommand_Wrap.S_direction
#endif
                    }},
                    {"distance", new MemberRegisterInfo { Name = "distance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastCommand_Wrap.G_distance, PropertySetter = UnityEngine_RaycastCommand_Wrap.S_distance
#endif
                    }},
                    {"layerMask", new MemberRegisterInfo { Name = "layerMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastCommand_Wrap.G_layerMask, PropertySetter = UnityEngine_RaycastCommand_Wrap.S_layerMask
#endif
                    }},
                    {"maxHits", new MemberRegisterInfo { Name = "maxHits", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastCommand_Wrap.G_maxHits, PropertySetter = UnityEngine_RaycastCommand_Wrap.S_maxHits
#endif
                    }},
                    {"ScheduleBatch_static", new MemberRegisterInfo { Name = "ScheduleBatch", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RaycastCommand_Wrap.F_ScheduleBatch
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SpherecastCommand_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SpherecastCommand_Wrap.Constructor
#endif
                    }},
                    {"origin", new MemberRegisterInfo { Name = "origin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpherecastCommand_Wrap.G_origin, PropertySetter = UnityEngine_SpherecastCommand_Wrap.S_origin
#endif
                    }},
                    {"radius", new MemberRegisterInfo { Name = "radius", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpherecastCommand_Wrap.G_radius, PropertySetter = UnityEngine_SpherecastCommand_Wrap.S_radius
#endif
                    }},
                    {"direction", new MemberRegisterInfo { Name = "direction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpherecastCommand_Wrap.G_direction, PropertySetter = UnityEngine_SpherecastCommand_Wrap.S_direction
#endif
                    }},
                    {"distance", new MemberRegisterInfo { Name = "distance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpherecastCommand_Wrap.G_distance, PropertySetter = UnityEngine_SpherecastCommand_Wrap.S_distance
#endif
                    }},
                    {"layerMask", new MemberRegisterInfo { Name = "layerMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpherecastCommand_Wrap.G_layerMask, PropertySetter = UnityEngine_SpherecastCommand_Wrap.S_layerMask
#endif
                    }},
                    {"ScheduleBatch_static", new MemberRegisterInfo { Name = "ScheduleBatch", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SpherecastCommand_Wrap.F_ScheduleBatch
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CapsulecastCommand_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_CapsulecastCommand_Wrap.Constructor
#endif
                    }},
                    {"point1", new MemberRegisterInfo { Name = "point1", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CapsulecastCommand_Wrap.G_point1, PropertySetter = UnityEngine_CapsulecastCommand_Wrap.S_point1
#endif
                    }},
                    {"point2", new MemberRegisterInfo { Name = "point2", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CapsulecastCommand_Wrap.G_point2, PropertySetter = UnityEngine_CapsulecastCommand_Wrap.S_point2
#endif
                    }},
                    {"radius", new MemberRegisterInfo { Name = "radius", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CapsulecastCommand_Wrap.G_radius, PropertySetter = UnityEngine_CapsulecastCommand_Wrap.S_radius
#endif
                    }},
                    {"direction", new MemberRegisterInfo { Name = "direction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CapsulecastCommand_Wrap.G_direction, PropertySetter = UnityEngine_CapsulecastCommand_Wrap.S_direction
#endif
                    }},
                    {"distance", new MemberRegisterInfo { Name = "distance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CapsulecastCommand_Wrap.G_distance, PropertySetter = UnityEngine_CapsulecastCommand_Wrap.S_distance
#endif
                    }},
                    {"layerMask", new MemberRegisterInfo { Name = "layerMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CapsulecastCommand_Wrap.G_layerMask, PropertySetter = UnityEngine_CapsulecastCommand_Wrap.S_layerMask
#endif
                    }},
                    {"ScheduleBatch_static", new MemberRegisterInfo { Name = "ScheduleBatch", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CapsulecastCommand_Wrap.F_ScheduleBatch
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_BoxcastCommand_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_BoxcastCommand_Wrap.Constructor
#endif
                    }},
                    {"center", new MemberRegisterInfo { Name = "center", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoxcastCommand_Wrap.G_center, PropertySetter = UnityEngine_BoxcastCommand_Wrap.S_center
#endif
                    }},
                    {"halfExtents", new MemberRegisterInfo { Name = "halfExtents", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoxcastCommand_Wrap.G_halfExtents, PropertySetter = UnityEngine_BoxcastCommand_Wrap.S_halfExtents
#endif
                    }},
                    {"orientation", new MemberRegisterInfo { Name = "orientation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoxcastCommand_Wrap.G_orientation, PropertySetter = UnityEngine_BoxcastCommand_Wrap.S_orientation
#endif
                    }},
                    {"direction", new MemberRegisterInfo { Name = "direction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoxcastCommand_Wrap.G_direction, PropertySetter = UnityEngine_BoxcastCommand_Wrap.S_direction
#endif
                    }},
                    {"distance", new MemberRegisterInfo { Name = "distance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoxcastCommand_Wrap.G_distance, PropertySetter = UnityEngine_BoxcastCommand_Wrap.S_distance
#endif
                    }},
                    {"layerMask", new MemberRegisterInfo { Name = "layerMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoxcastCommand_Wrap.G_layerMask, PropertySetter = UnityEngine_BoxcastCommand_Wrap.S_layerMask
#endif
                    }},
                    {"ScheduleBatch_static", new MemberRegisterInfo { Name = "ScheduleBatch", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_BoxcastCommand_Wrap.F_ScheduleBatch
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_PhysicsScene2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_PhysicsScene2D_Wrap.Constructor
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene2D_Wrap.M_ToString
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene2D_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene2D_Wrap.O_op_Inequality
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene2D_Wrap.M_GetHashCode
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene2D_Wrap.M_Equals
#endif
                    }},
                    {"IsValid", new MemberRegisterInfo { Name = "IsValid", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene2D_Wrap.M_IsValid
#endif
                    }},
                    {"IsEmpty", new MemberRegisterInfo { Name = "IsEmpty", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene2D_Wrap.M_IsEmpty
#endif
                    }},
                    {"Simulate", new MemberRegisterInfo { Name = "Simulate", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene2D_Wrap.M_Simulate
#endif
                    }},
                    {"Linecast", new MemberRegisterInfo { Name = "Linecast", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene2D_Wrap.M_Linecast
#endif
                    }},
                    {"Raycast", new MemberRegisterInfo { Name = "Raycast", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene2D_Wrap.M_Raycast
#endif
                    }},
                    {"CircleCast", new MemberRegisterInfo { Name = "CircleCast", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene2D_Wrap.M_CircleCast
#endif
                    }},
                    {"BoxCast", new MemberRegisterInfo { Name = "BoxCast", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene2D_Wrap.M_BoxCast
#endif
                    }},
                    {"CapsuleCast", new MemberRegisterInfo { Name = "CapsuleCast", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene2D_Wrap.M_CapsuleCast
#endif
                    }},
                    {"GetRayIntersection", new MemberRegisterInfo { Name = "GetRayIntersection", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene2D_Wrap.M_GetRayIntersection
#endif
                    }},
                    {"OverlapPoint", new MemberRegisterInfo { Name = "OverlapPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene2D_Wrap.M_OverlapPoint
#endif
                    }},
                    {"OverlapCircle", new MemberRegisterInfo { Name = "OverlapCircle", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene2D_Wrap.M_OverlapCircle
#endif
                    }},
                    {"OverlapBox", new MemberRegisterInfo { Name = "OverlapBox", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene2D_Wrap.M_OverlapBox
#endif
                    }},
                    {"OverlapArea", new MemberRegisterInfo { Name = "OverlapArea", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene2D_Wrap.M_OverlapArea
#endif
                    }},
                    {"OverlapCapsule", new MemberRegisterInfo { Name = "OverlapCapsule", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene2D_Wrap.M_OverlapCapsule
#endif
                    }},
                    {"OverlapCollider_static", new MemberRegisterInfo { Name = "OverlapCollider", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsScene2D_Wrap.F_OverlapCollider
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_PhysicsSceneExtensions2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"GetPhysicsScene2D_static", new MemberRegisterInfo { Name = "GetPhysicsScene2D", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PhysicsSceneExtensions2D_Wrap.F_GetPhysicsScene2D
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Physics2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Physics2D_Wrap.Constructor
#endif
                    }},
                    {"Simulate_static", new MemberRegisterInfo { Name = "Simulate", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_Simulate
#endif
                    }},
                    {"SyncTransforms_static", new MemberRegisterInfo { Name = "SyncTransforms", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_SyncTransforms
#endif
                    }},
                    {"IgnoreCollision_static", new MemberRegisterInfo { Name = "IgnoreCollision", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_IgnoreCollision
#endif
                    }},
                    {"GetIgnoreCollision_static", new MemberRegisterInfo { Name = "GetIgnoreCollision", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_GetIgnoreCollision
#endif
                    }},
                    {"IgnoreLayerCollision_static", new MemberRegisterInfo { Name = "IgnoreLayerCollision", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_IgnoreLayerCollision
#endif
                    }},
                    {"GetIgnoreLayerCollision_static", new MemberRegisterInfo { Name = "GetIgnoreLayerCollision", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_GetIgnoreLayerCollision
#endif
                    }},
                    {"SetLayerCollisionMask_static", new MemberRegisterInfo { Name = "SetLayerCollisionMask", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_SetLayerCollisionMask
#endif
                    }},
                    {"GetLayerCollisionMask_static", new MemberRegisterInfo { Name = "GetLayerCollisionMask", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_GetLayerCollisionMask
#endif
                    }},
                    {"IsTouching_static", new MemberRegisterInfo { Name = "IsTouching", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_IsTouching
#endif
                    }},
                    {"IsTouchingLayers_static", new MemberRegisterInfo { Name = "IsTouchingLayers", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_IsTouchingLayers
#endif
                    }},
                    {"Distance_static", new MemberRegisterInfo { Name = "Distance", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_Distance
#endif
                    }},
                    {"ClosestPoint_static", new MemberRegisterInfo { Name = "ClosestPoint", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_ClosestPoint
#endif
                    }},
                    {"Linecast_static", new MemberRegisterInfo { Name = "Linecast", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_Linecast
#endif
                    }},
                    {"LinecastAll_static", new MemberRegisterInfo { Name = "LinecastAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_LinecastAll
#endif
                    }},
                    {"LinecastNonAlloc_static", new MemberRegisterInfo { Name = "LinecastNonAlloc", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_LinecastNonAlloc
#endif
                    }},
                    {"Raycast_static", new MemberRegisterInfo { Name = "Raycast", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_Raycast
#endif
                    }},
                    {"RaycastNonAlloc_static", new MemberRegisterInfo { Name = "RaycastNonAlloc", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_RaycastNonAlloc
#endif
                    }},
                    {"RaycastAll_static", new MemberRegisterInfo { Name = "RaycastAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_RaycastAll
#endif
                    }},
                    {"CircleCast_static", new MemberRegisterInfo { Name = "CircleCast", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_CircleCast
#endif
                    }},
                    {"CircleCastAll_static", new MemberRegisterInfo { Name = "CircleCastAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_CircleCastAll
#endif
                    }},
                    {"CircleCastNonAlloc_static", new MemberRegisterInfo { Name = "CircleCastNonAlloc", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_CircleCastNonAlloc
#endif
                    }},
                    {"BoxCast_static", new MemberRegisterInfo { Name = "BoxCast", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_BoxCast
#endif
                    }},
                    {"BoxCastAll_static", new MemberRegisterInfo { Name = "BoxCastAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_BoxCastAll
#endif
                    }},
                    {"BoxCastNonAlloc_static", new MemberRegisterInfo { Name = "BoxCastNonAlloc", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_BoxCastNonAlloc
#endif
                    }},
                    {"CapsuleCast_static", new MemberRegisterInfo { Name = "CapsuleCast", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_CapsuleCast
#endif
                    }},
                    {"CapsuleCastAll_static", new MemberRegisterInfo { Name = "CapsuleCastAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_CapsuleCastAll
#endif
                    }},
                    {"CapsuleCastNonAlloc_static", new MemberRegisterInfo { Name = "CapsuleCastNonAlloc", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_CapsuleCastNonAlloc
#endif
                    }},
                    {"GetRayIntersection_static", new MemberRegisterInfo { Name = "GetRayIntersection", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_GetRayIntersection
#endif
                    }},
                    {"GetRayIntersectionAll_static", new MemberRegisterInfo { Name = "GetRayIntersectionAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_GetRayIntersectionAll
#endif
                    }},
                    {"GetRayIntersectionNonAlloc_static", new MemberRegisterInfo { Name = "GetRayIntersectionNonAlloc", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_GetRayIntersectionNonAlloc
#endif
                    }},
                    {"OverlapPoint_static", new MemberRegisterInfo { Name = "OverlapPoint", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_OverlapPoint
#endif
                    }},
                    {"OverlapPointAll_static", new MemberRegisterInfo { Name = "OverlapPointAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_OverlapPointAll
#endif
                    }},
                    {"OverlapPointNonAlloc_static", new MemberRegisterInfo { Name = "OverlapPointNonAlloc", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_OverlapPointNonAlloc
#endif
                    }},
                    {"OverlapCircle_static", new MemberRegisterInfo { Name = "OverlapCircle", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_OverlapCircle
#endif
                    }},
                    {"OverlapCircleAll_static", new MemberRegisterInfo { Name = "OverlapCircleAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_OverlapCircleAll
#endif
                    }},
                    {"OverlapCircleNonAlloc_static", new MemberRegisterInfo { Name = "OverlapCircleNonAlloc", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_OverlapCircleNonAlloc
#endif
                    }},
                    {"OverlapBox_static", new MemberRegisterInfo { Name = "OverlapBox", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_OverlapBox
#endif
                    }},
                    {"OverlapBoxAll_static", new MemberRegisterInfo { Name = "OverlapBoxAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_OverlapBoxAll
#endif
                    }},
                    {"OverlapBoxNonAlloc_static", new MemberRegisterInfo { Name = "OverlapBoxNonAlloc", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_OverlapBoxNonAlloc
#endif
                    }},
                    {"OverlapArea_static", new MemberRegisterInfo { Name = "OverlapArea", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_OverlapArea
#endif
                    }},
                    {"OverlapAreaAll_static", new MemberRegisterInfo { Name = "OverlapAreaAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_OverlapAreaAll
#endif
                    }},
                    {"OverlapAreaNonAlloc_static", new MemberRegisterInfo { Name = "OverlapAreaNonAlloc", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_OverlapAreaNonAlloc
#endif
                    }},
                    {"OverlapCapsule_static", new MemberRegisterInfo { Name = "OverlapCapsule", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_OverlapCapsule
#endif
                    }},
                    {"OverlapCapsuleAll_static", new MemberRegisterInfo { Name = "OverlapCapsuleAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_OverlapCapsuleAll
#endif
                    }},
                    {"OverlapCapsuleNonAlloc_static", new MemberRegisterInfo { Name = "OverlapCapsuleNonAlloc", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_OverlapCapsuleNonAlloc
#endif
                    }},
                    {"OverlapCollider_static", new MemberRegisterInfo { Name = "OverlapCollider", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_OverlapCollider
#endif
                    }},
                    {"GetContacts_static", new MemberRegisterInfo { Name = "GetContacts", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Physics2D_Wrap.F_GetContacts
#endif
                    }},
                    {"defaultPhysicsScene_static", new MemberRegisterInfo { Name = "defaultPhysicsScene", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_defaultPhysicsScene
#endif
                    }},
                    {"velocityIterations_static", new MemberRegisterInfo { Name = "velocityIterations", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_velocityIterations, PropertySetter = UnityEngine_Physics2D_Wrap.S_velocityIterations
#endif
                    }},
                    {"positionIterations_static", new MemberRegisterInfo { Name = "positionIterations", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_positionIterations, PropertySetter = UnityEngine_Physics2D_Wrap.S_positionIterations
#endif
                    }},
                    {"gravity_static", new MemberRegisterInfo { Name = "gravity", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_gravity, PropertySetter = UnityEngine_Physics2D_Wrap.S_gravity
#endif
                    }},
                    {"queriesHitTriggers_static", new MemberRegisterInfo { Name = "queriesHitTriggers", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_queriesHitTriggers, PropertySetter = UnityEngine_Physics2D_Wrap.S_queriesHitTriggers
#endif
                    }},
                    {"queriesStartInColliders_static", new MemberRegisterInfo { Name = "queriesStartInColliders", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_queriesStartInColliders, PropertySetter = UnityEngine_Physics2D_Wrap.S_queriesStartInColliders
#endif
                    }},
                    {"callbacksOnDisable_static", new MemberRegisterInfo { Name = "callbacksOnDisable", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_callbacksOnDisable, PropertySetter = UnityEngine_Physics2D_Wrap.S_callbacksOnDisable
#endif
                    }},
                    {"reuseCollisionCallbacks_static", new MemberRegisterInfo { Name = "reuseCollisionCallbacks", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_reuseCollisionCallbacks, PropertySetter = UnityEngine_Physics2D_Wrap.S_reuseCollisionCallbacks
#endif
                    }},
                    {"autoSyncTransforms_static", new MemberRegisterInfo { Name = "autoSyncTransforms", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_autoSyncTransforms, PropertySetter = UnityEngine_Physics2D_Wrap.S_autoSyncTransforms
#endif
                    }},
                    {"simulationMode_static", new MemberRegisterInfo { Name = "simulationMode", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_simulationMode, PropertySetter = UnityEngine_Physics2D_Wrap.S_simulationMode
#endif
                    }},
                    {"jobOptions_static", new MemberRegisterInfo { Name = "jobOptions", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_jobOptions, PropertySetter = UnityEngine_Physics2D_Wrap.S_jobOptions
#endif
                    }},
                    {"velocityThreshold_static", new MemberRegisterInfo { Name = "velocityThreshold", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_velocityThreshold, PropertySetter = UnityEngine_Physics2D_Wrap.S_velocityThreshold
#endif
                    }},
                    {"maxLinearCorrection_static", new MemberRegisterInfo { Name = "maxLinearCorrection", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_maxLinearCorrection, PropertySetter = UnityEngine_Physics2D_Wrap.S_maxLinearCorrection
#endif
                    }},
                    {"maxAngularCorrection_static", new MemberRegisterInfo { Name = "maxAngularCorrection", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_maxAngularCorrection, PropertySetter = UnityEngine_Physics2D_Wrap.S_maxAngularCorrection
#endif
                    }},
                    {"maxTranslationSpeed_static", new MemberRegisterInfo { Name = "maxTranslationSpeed", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_maxTranslationSpeed, PropertySetter = UnityEngine_Physics2D_Wrap.S_maxTranslationSpeed
#endif
                    }},
                    {"maxRotationSpeed_static", new MemberRegisterInfo { Name = "maxRotationSpeed", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_maxRotationSpeed, PropertySetter = UnityEngine_Physics2D_Wrap.S_maxRotationSpeed
#endif
                    }},
                    {"defaultContactOffset_static", new MemberRegisterInfo { Name = "defaultContactOffset", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_defaultContactOffset, PropertySetter = UnityEngine_Physics2D_Wrap.S_defaultContactOffset
#endif
                    }},
                    {"baumgarteScale_static", new MemberRegisterInfo { Name = "baumgarteScale", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_baumgarteScale, PropertySetter = UnityEngine_Physics2D_Wrap.S_baumgarteScale
#endif
                    }},
                    {"baumgarteTOIScale_static", new MemberRegisterInfo { Name = "baumgarteTOIScale", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_baumgarteTOIScale, PropertySetter = UnityEngine_Physics2D_Wrap.S_baumgarteTOIScale
#endif
                    }},
                    {"timeToSleep_static", new MemberRegisterInfo { Name = "timeToSleep", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_timeToSleep, PropertySetter = UnityEngine_Physics2D_Wrap.S_timeToSleep
#endif
                    }},
                    {"linearSleepTolerance_static", new MemberRegisterInfo { Name = "linearSleepTolerance", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_linearSleepTolerance, PropertySetter = UnityEngine_Physics2D_Wrap.S_linearSleepTolerance
#endif
                    }},
                    {"angularSleepTolerance_static", new MemberRegisterInfo { Name = "angularSleepTolerance", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_angularSleepTolerance, PropertySetter = UnityEngine_Physics2D_Wrap.S_angularSleepTolerance
#endif
                    }},
                    {"alwaysShowColliders_static", new MemberRegisterInfo { Name = "alwaysShowColliders", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_alwaysShowColliders, PropertySetter = UnityEngine_Physics2D_Wrap.S_alwaysShowColliders
#endif
                    }},
                    {"showColliderSleep_static", new MemberRegisterInfo { Name = "showColliderSleep", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_showColliderSleep, PropertySetter = UnityEngine_Physics2D_Wrap.S_showColliderSleep
#endif
                    }},
                    {"showColliderContacts_static", new MemberRegisterInfo { Name = "showColliderContacts", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_showColliderContacts, PropertySetter = UnityEngine_Physics2D_Wrap.S_showColliderContacts
#endif
                    }},
                    {"showColliderAABB_static", new MemberRegisterInfo { Name = "showColliderAABB", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_showColliderAABB, PropertySetter = UnityEngine_Physics2D_Wrap.S_showColliderAABB
#endif
                    }},
                    {"contactArrowScale_static", new MemberRegisterInfo { Name = "contactArrowScale", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_contactArrowScale, PropertySetter = UnityEngine_Physics2D_Wrap.S_contactArrowScale
#endif
                    }},
                    {"colliderAwakeColor_static", new MemberRegisterInfo { Name = "colliderAwakeColor", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_colliderAwakeColor, PropertySetter = UnityEngine_Physics2D_Wrap.S_colliderAwakeColor
#endif
                    }},
                    {"colliderAsleepColor_static", new MemberRegisterInfo { Name = "colliderAsleepColor", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_colliderAsleepColor, PropertySetter = UnityEngine_Physics2D_Wrap.S_colliderAsleepColor
#endif
                    }},
                    {"colliderContactColor_static", new MemberRegisterInfo { Name = "colliderContactColor", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_colliderContactColor, PropertySetter = UnityEngine_Physics2D_Wrap.S_colliderContactColor
#endif
                    }},
                    {"colliderAABBColor_static", new MemberRegisterInfo { Name = "colliderAABBColor", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_colliderAABBColor, PropertySetter = UnityEngine_Physics2D_Wrap.S_colliderAABBColor
#endif
                    }},
                    {"IgnoreRaycastLayer_static", new MemberRegisterInfo { Name = "IgnoreRaycastLayer", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_IgnoreRaycastLayer
#endif
                    }},
                    {"DefaultRaycastLayers_static", new MemberRegisterInfo { Name = "DefaultRaycastLayers", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_DefaultRaycastLayers
#endif
                    }},
                    {"AllLayers_static", new MemberRegisterInfo { Name = "AllLayers", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Physics2D_Wrap.G_AllLayers
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ColliderDistance2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ColliderDistance2D_Wrap.Constructor
#endif
                    }},
                    {"pointA", new MemberRegisterInfo { Name = "pointA", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ColliderDistance2D_Wrap.G_pointA, PropertySetter = UnityEngine_ColliderDistance2D_Wrap.S_pointA
#endif
                    }},
                    {"pointB", new MemberRegisterInfo { Name = "pointB", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ColliderDistance2D_Wrap.G_pointB, PropertySetter = UnityEngine_ColliderDistance2D_Wrap.S_pointB
#endif
                    }},
                    {"normal", new MemberRegisterInfo { Name = "normal", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ColliderDistance2D_Wrap.G_normal
#endif
                    }},
                    {"distance", new MemberRegisterInfo { Name = "distance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ColliderDistance2D_Wrap.G_distance, PropertySetter = UnityEngine_ColliderDistance2D_Wrap.S_distance
#endif
                    }},
                    {"isOverlapped", new MemberRegisterInfo { Name = "isOverlapped", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ColliderDistance2D_Wrap.G_isOverlapped
#endif
                    }},
                    {"isValid", new MemberRegisterInfo { Name = "isValid", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ColliderDistance2D_Wrap.G_isValid, PropertySetter = UnityEngine_ColliderDistance2D_Wrap.S_isValid
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ContactFilter2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ContactFilter2D_Wrap.Constructor
#endif
                    }},
                    {"NoFilter", new MemberRegisterInfo { Name = "NoFilter", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ContactFilter2D_Wrap.M_NoFilter
#endif
                    }},
                    {"ClearLayerMask", new MemberRegisterInfo { Name = "ClearLayerMask", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ContactFilter2D_Wrap.M_ClearLayerMask
#endif
                    }},
                    {"SetLayerMask", new MemberRegisterInfo { Name = "SetLayerMask", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ContactFilter2D_Wrap.M_SetLayerMask
#endif
                    }},
                    {"ClearDepth", new MemberRegisterInfo { Name = "ClearDepth", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ContactFilter2D_Wrap.M_ClearDepth
#endif
                    }},
                    {"SetDepth", new MemberRegisterInfo { Name = "SetDepth", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ContactFilter2D_Wrap.M_SetDepth
#endif
                    }},
                    {"ClearNormalAngle", new MemberRegisterInfo { Name = "ClearNormalAngle", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ContactFilter2D_Wrap.M_ClearNormalAngle
#endif
                    }},
                    {"SetNormalAngle", new MemberRegisterInfo { Name = "SetNormalAngle", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ContactFilter2D_Wrap.M_SetNormalAngle
#endif
                    }},
                    {"IsFilteringTrigger", new MemberRegisterInfo { Name = "IsFilteringTrigger", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ContactFilter2D_Wrap.M_IsFilteringTrigger
#endif
                    }},
                    {"IsFilteringLayerMask", new MemberRegisterInfo { Name = "IsFilteringLayerMask", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ContactFilter2D_Wrap.M_IsFilteringLayerMask
#endif
                    }},
                    {"IsFilteringDepth", new MemberRegisterInfo { Name = "IsFilteringDepth", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ContactFilter2D_Wrap.M_IsFilteringDepth
#endif
                    }},
                    {"IsFilteringNormalAngle", new MemberRegisterInfo { Name = "IsFilteringNormalAngle", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ContactFilter2D_Wrap.M_IsFilteringNormalAngle
#endif
                    }},
                    {"isFiltering", new MemberRegisterInfo { Name = "isFiltering", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactFilter2D_Wrap.G_isFiltering
#endif
                    }},
                    {"useTriggers", new MemberRegisterInfo { Name = "useTriggers", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactFilter2D_Wrap.G_useTriggers, PropertySetter = UnityEngine_ContactFilter2D_Wrap.S_useTriggers
#endif
                    }},
                    {"useLayerMask", new MemberRegisterInfo { Name = "useLayerMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactFilter2D_Wrap.G_useLayerMask, PropertySetter = UnityEngine_ContactFilter2D_Wrap.S_useLayerMask
#endif
                    }},
                    {"useDepth", new MemberRegisterInfo { Name = "useDepth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactFilter2D_Wrap.G_useDepth, PropertySetter = UnityEngine_ContactFilter2D_Wrap.S_useDepth
#endif
                    }},
                    {"useOutsideDepth", new MemberRegisterInfo { Name = "useOutsideDepth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactFilter2D_Wrap.G_useOutsideDepth, PropertySetter = UnityEngine_ContactFilter2D_Wrap.S_useOutsideDepth
#endif
                    }},
                    {"useNormalAngle", new MemberRegisterInfo { Name = "useNormalAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactFilter2D_Wrap.G_useNormalAngle, PropertySetter = UnityEngine_ContactFilter2D_Wrap.S_useNormalAngle
#endif
                    }},
                    {"useOutsideNormalAngle", new MemberRegisterInfo { Name = "useOutsideNormalAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactFilter2D_Wrap.G_useOutsideNormalAngle, PropertySetter = UnityEngine_ContactFilter2D_Wrap.S_useOutsideNormalAngle
#endif
                    }},
                    {"layerMask", new MemberRegisterInfo { Name = "layerMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactFilter2D_Wrap.G_layerMask, PropertySetter = UnityEngine_ContactFilter2D_Wrap.S_layerMask
#endif
                    }},
                    {"minDepth", new MemberRegisterInfo { Name = "minDepth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactFilter2D_Wrap.G_minDepth, PropertySetter = UnityEngine_ContactFilter2D_Wrap.S_minDepth
#endif
                    }},
                    {"maxDepth", new MemberRegisterInfo { Name = "maxDepth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactFilter2D_Wrap.G_maxDepth, PropertySetter = UnityEngine_ContactFilter2D_Wrap.S_maxDepth
#endif
                    }},
                    {"minNormalAngle", new MemberRegisterInfo { Name = "minNormalAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactFilter2D_Wrap.G_minNormalAngle, PropertySetter = UnityEngine_ContactFilter2D_Wrap.S_minNormalAngle
#endif
                    }},
                    {"maxNormalAngle", new MemberRegisterInfo { Name = "maxNormalAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactFilter2D_Wrap.G_maxNormalAngle, PropertySetter = UnityEngine_ContactFilter2D_Wrap.S_maxNormalAngle
#endif
                    }},
                    {"NormalAngleUpperLimit_static", new MemberRegisterInfo { Name = "NormalAngleUpperLimit", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactFilter2D_Wrap.G_NormalAngleUpperLimit
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Collision2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Collision2D_Wrap.Constructor
#endif
                    }},
                    {"GetContact", new MemberRegisterInfo { Name = "GetContact", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Collision2D_Wrap.M_GetContact
#endif
                    }},
                    {"GetContacts", new MemberRegisterInfo { Name = "GetContacts", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Collision2D_Wrap.M_GetContacts
#endif
                    }},
                    {"collider", new MemberRegisterInfo { Name = "collider", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collision2D_Wrap.G_collider
#endif
                    }},
                    {"otherCollider", new MemberRegisterInfo { Name = "otherCollider", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collision2D_Wrap.G_otherCollider
#endif
                    }},
                    {"rigidbody", new MemberRegisterInfo { Name = "rigidbody", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collision2D_Wrap.G_rigidbody
#endif
                    }},
                    {"otherRigidbody", new MemberRegisterInfo { Name = "otherRigidbody", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collision2D_Wrap.G_otherRigidbody
#endif
                    }},
                    {"transform", new MemberRegisterInfo { Name = "transform", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collision2D_Wrap.G_transform
#endif
                    }},
                    {"gameObject", new MemberRegisterInfo { Name = "gameObject", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collision2D_Wrap.G_gameObject
#endif
                    }},
                    {"relativeVelocity", new MemberRegisterInfo { Name = "relativeVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collision2D_Wrap.G_relativeVelocity
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collision2D_Wrap.G_enabled
#endif
                    }},
                    {"contacts", new MemberRegisterInfo { Name = "contacts", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collision2D_Wrap.G_contacts
#endif
                    }},
                    {"contactCount", new MemberRegisterInfo { Name = "contactCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collision2D_Wrap.G_contactCount
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ContactPoint2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ContactPoint2D_Wrap.Constructor
#endif
                    }},
                    {"point", new MemberRegisterInfo { Name = "point", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactPoint2D_Wrap.G_point
#endif
                    }},
                    {"normal", new MemberRegisterInfo { Name = "normal", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactPoint2D_Wrap.G_normal
#endif
                    }},
                    {"separation", new MemberRegisterInfo { Name = "separation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactPoint2D_Wrap.G_separation
#endif
                    }},
                    {"normalImpulse", new MemberRegisterInfo { Name = "normalImpulse", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactPoint2D_Wrap.G_normalImpulse
#endif
                    }},
                    {"tangentImpulse", new MemberRegisterInfo { Name = "tangentImpulse", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactPoint2D_Wrap.G_tangentImpulse
#endif
                    }},
                    {"relativeVelocity", new MemberRegisterInfo { Name = "relativeVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactPoint2D_Wrap.G_relativeVelocity
#endif
                    }},
                    {"collider", new MemberRegisterInfo { Name = "collider", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactPoint2D_Wrap.G_collider
#endif
                    }},
                    {"otherCollider", new MemberRegisterInfo { Name = "otherCollider", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactPoint2D_Wrap.G_otherCollider
#endif
                    }},
                    {"rigidbody", new MemberRegisterInfo { Name = "rigidbody", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactPoint2D_Wrap.G_rigidbody
#endif
                    }},
                    {"otherRigidbody", new MemberRegisterInfo { Name = "otherRigidbody", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactPoint2D_Wrap.G_otherRigidbody
#endif
                    }},
                    {"enabled", new MemberRegisterInfo { Name = "enabled", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ContactPoint2D_Wrap.G_enabled
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_JointAngleLimits2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_JointAngleLimits2D_Wrap.Constructor
#endif
                    }},
                    {"min", new MemberRegisterInfo { Name = "min", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointAngleLimits2D_Wrap.G_min, PropertySetter = UnityEngine_JointAngleLimits2D_Wrap.S_min
#endif
                    }},
                    {"max", new MemberRegisterInfo { Name = "max", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointAngleLimits2D_Wrap.G_max, PropertySetter = UnityEngine_JointAngleLimits2D_Wrap.S_max
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_JointTranslationLimits2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_JointTranslationLimits2D_Wrap.Constructor
#endif
                    }},
                    {"min", new MemberRegisterInfo { Name = "min", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointTranslationLimits2D_Wrap.G_min, PropertySetter = UnityEngine_JointTranslationLimits2D_Wrap.S_min
#endif
                    }},
                    {"max", new MemberRegisterInfo { Name = "max", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointTranslationLimits2D_Wrap.G_max, PropertySetter = UnityEngine_JointTranslationLimits2D_Wrap.S_max
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_JointMotor2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_JointMotor2D_Wrap.Constructor
#endif
                    }},
                    {"motorSpeed", new MemberRegisterInfo { Name = "motorSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointMotor2D_Wrap.G_motorSpeed, PropertySetter = UnityEngine_JointMotor2D_Wrap.S_motorSpeed
#endif
                    }},
                    {"maxMotorTorque", new MemberRegisterInfo { Name = "maxMotorTorque", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointMotor2D_Wrap.G_maxMotorTorque, PropertySetter = UnityEngine_JointMotor2D_Wrap.S_maxMotorTorque
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_JointSuspension2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_JointSuspension2D_Wrap.Constructor
#endif
                    }},
                    {"dampingRatio", new MemberRegisterInfo { Name = "dampingRatio", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointSuspension2D_Wrap.G_dampingRatio, PropertySetter = UnityEngine_JointSuspension2D_Wrap.S_dampingRatio
#endif
                    }},
                    {"frequency", new MemberRegisterInfo { Name = "frequency", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointSuspension2D_Wrap.G_frequency, PropertySetter = UnityEngine_JointSuspension2D_Wrap.S_frequency
#endif
                    }},
                    {"angle", new MemberRegisterInfo { Name = "angle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_JointSuspension2D_Wrap.G_angle, PropertySetter = UnityEngine_JointSuspension2D_Wrap.S_angle
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RaycastHit2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_RaycastHit2D_Wrap.Constructor
#endif
                    }},
                    {"CompareTo", new MemberRegisterInfo { Name = "CompareTo", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RaycastHit2D_Wrap.M_CompareTo
#endif
                    }},
                    {"centroid", new MemberRegisterInfo { Name = "centroid", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastHit2D_Wrap.G_centroid, PropertySetter = UnityEngine_RaycastHit2D_Wrap.S_centroid
#endif
                    }},
                    {"point", new MemberRegisterInfo { Name = "point", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastHit2D_Wrap.G_point, PropertySetter = UnityEngine_RaycastHit2D_Wrap.S_point
#endif
                    }},
                    {"normal", new MemberRegisterInfo { Name = "normal", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastHit2D_Wrap.G_normal, PropertySetter = UnityEngine_RaycastHit2D_Wrap.S_normal
#endif
                    }},
                    {"distance", new MemberRegisterInfo { Name = "distance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastHit2D_Wrap.G_distance, PropertySetter = UnityEngine_RaycastHit2D_Wrap.S_distance
#endif
                    }},
                    {"fraction", new MemberRegisterInfo { Name = "fraction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastHit2D_Wrap.G_fraction, PropertySetter = UnityEngine_RaycastHit2D_Wrap.S_fraction
#endif
                    }},
                    {"collider", new MemberRegisterInfo { Name = "collider", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastHit2D_Wrap.G_collider
#endif
                    }},
                    {"rigidbody", new MemberRegisterInfo { Name = "rigidbody", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastHit2D_Wrap.G_rigidbody
#endif
                    }},
                    {"transform", new MemberRegisterInfo { Name = "transform", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RaycastHit2D_Wrap.G_transform
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_PhysicsJobOptions2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_PhysicsJobOptions2D_Wrap.Constructor
#endif
                    }},
                    {"useMultithreading", new MemberRegisterInfo { Name = "useMultithreading", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicsJobOptions2D_Wrap.G_useMultithreading, PropertySetter = UnityEngine_PhysicsJobOptions2D_Wrap.S_useMultithreading
#endif
                    }},
                    {"useConsistencySorting", new MemberRegisterInfo { Name = "useConsistencySorting", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicsJobOptions2D_Wrap.G_useConsistencySorting, PropertySetter = UnityEngine_PhysicsJobOptions2D_Wrap.S_useConsistencySorting
#endif
                    }},
                    {"interpolationPosesPerJob", new MemberRegisterInfo { Name = "interpolationPosesPerJob", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicsJobOptions2D_Wrap.G_interpolationPosesPerJob, PropertySetter = UnityEngine_PhysicsJobOptions2D_Wrap.S_interpolationPosesPerJob
#endif
                    }},
                    {"newContactsPerJob", new MemberRegisterInfo { Name = "newContactsPerJob", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicsJobOptions2D_Wrap.G_newContactsPerJob, PropertySetter = UnityEngine_PhysicsJobOptions2D_Wrap.S_newContactsPerJob
#endif
                    }},
                    {"collideContactsPerJob", new MemberRegisterInfo { Name = "collideContactsPerJob", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicsJobOptions2D_Wrap.G_collideContactsPerJob, PropertySetter = UnityEngine_PhysicsJobOptions2D_Wrap.S_collideContactsPerJob
#endif
                    }},
                    {"clearFlagsPerJob", new MemberRegisterInfo { Name = "clearFlagsPerJob", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicsJobOptions2D_Wrap.G_clearFlagsPerJob, PropertySetter = UnityEngine_PhysicsJobOptions2D_Wrap.S_clearFlagsPerJob
#endif
                    }},
                    {"clearBodyForcesPerJob", new MemberRegisterInfo { Name = "clearBodyForcesPerJob", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicsJobOptions2D_Wrap.G_clearBodyForcesPerJob, PropertySetter = UnityEngine_PhysicsJobOptions2D_Wrap.S_clearBodyForcesPerJob
#endif
                    }},
                    {"syncDiscreteFixturesPerJob", new MemberRegisterInfo { Name = "syncDiscreteFixturesPerJob", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicsJobOptions2D_Wrap.G_syncDiscreteFixturesPerJob, PropertySetter = UnityEngine_PhysicsJobOptions2D_Wrap.S_syncDiscreteFixturesPerJob
#endif
                    }},
                    {"syncContinuousFixturesPerJob", new MemberRegisterInfo { Name = "syncContinuousFixturesPerJob", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicsJobOptions2D_Wrap.G_syncContinuousFixturesPerJob, PropertySetter = UnityEngine_PhysicsJobOptions2D_Wrap.S_syncContinuousFixturesPerJob
#endif
                    }},
                    {"findNearestContactsPerJob", new MemberRegisterInfo { Name = "findNearestContactsPerJob", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicsJobOptions2D_Wrap.G_findNearestContactsPerJob, PropertySetter = UnityEngine_PhysicsJobOptions2D_Wrap.S_findNearestContactsPerJob
#endif
                    }},
                    {"updateTriggerContactsPerJob", new MemberRegisterInfo { Name = "updateTriggerContactsPerJob", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicsJobOptions2D_Wrap.G_updateTriggerContactsPerJob, PropertySetter = UnityEngine_PhysicsJobOptions2D_Wrap.S_updateTriggerContactsPerJob
#endif
                    }},
                    {"islandSolverCostThreshold", new MemberRegisterInfo { Name = "islandSolverCostThreshold", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicsJobOptions2D_Wrap.G_islandSolverCostThreshold, PropertySetter = UnityEngine_PhysicsJobOptions2D_Wrap.S_islandSolverCostThreshold
#endif
                    }},
                    {"islandSolverBodyCostScale", new MemberRegisterInfo { Name = "islandSolverBodyCostScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicsJobOptions2D_Wrap.G_islandSolverBodyCostScale, PropertySetter = UnityEngine_PhysicsJobOptions2D_Wrap.S_islandSolverBodyCostScale
#endif
                    }},
                    {"islandSolverContactCostScale", new MemberRegisterInfo { Name = "islandSolverContactCostScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicsJobOptions2D_Wrap.G_islandSolverContactCostScale, PropertySetter = UnityEngine_PhysicsJobOptions2D_Wrap.S_islandSolverContactCostScale
#endif
                    }},
                    {"islandSolverJointCostScale", new MemberRegisterInfo { Name = "islandSolverJointCostScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicsJobOptions2D_Wrap.G_islandSolverJointCostScale, PropertySetter = UnityEngine_PhysicsJobOptions2D_Wrap.S_islandSolverJointCostScale
#endif
                    }},
                    {"islandSolverBodiesPerJob", new MemberRegisterInfo { Name = "islandSolverBodiesPerJob", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicsJobOptions2D_Wrap.G_islandSolverBodiesPerJob, PropertySetter = UnityEngine_PhysicsJobOptions2D_Wrap.S_islandSolverBodiesPerJob
#endif
                    }},
                    {"islandSolverContactsPerJob", new MemberRegisterInfo { Name = "islandSolverContactsPerJob", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicsJobOptions2D_Wrap.G_islandSolverContactsPerJob, PropertySetter = UnityEngine_PhysicsJobOptions2D_Wrap.S_islandSolverContactsPerJob
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Rigidbody2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Rigidbody2D_Wrap.Constructor
#endif
                    }},
                    {"SetRotation", new MemberRegisterInfo { Name = "SetRotation", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_SetRotation
#endif
                    }},
                    {"MovePosition", new MemberRegisterInfo { Name = "MovePosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_MovePosition
#endif
                    }},
                    {"MoveRotation", new MemberRegisterInfo { Name = "MoveRotation", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_MoveRotation
#endif
                    }},
                    {"IsSleeping", new MemberRegisterInfo { Name = "IsSleeping", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_IsSleeping
#endif
                    }},
                    {"IsAwake", new MemberRegisterInfo { Name = "IsAwake", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_IsAwake
#endif
                    }},
                    {"Sleep", new MemberRegisterInfo { Name = "Sleep", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_Sleep
#endif
                    }},
                    {"WakeUp", new MemberRegisterInfo { Name = "WakeUp", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_WakeUp
#endif
                    }},
                    {"IsTouching", new MemberRegisterInfo { Name = "IsTouching", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_IsTouching
#endif
                    }},
                    {"IsTouchingLayers", new MemberRegisterInfo { Name = "IsTouchingLayers", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_IsTouchingLayers
#endif
                    }},
                    {"OverlapPoint", new MemberRegisterInfo { Name = "OverlapPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_OverlapPoint
#endif
                    }},
                    {"Distance", new MemberRegisterInfo { Name = "Distance", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_Distance
#endif
                    }},
                    {"ClosestPoint", new MemberRegisterInfo { Name = "ClosestPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_ClosestPoint
#endif
                    }},
                    {"AddForce", new MemberRegisterInfo { Name = "AddForce", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_AddForce
#endif
                    }},
                    {"AddRelativeForce", new MemberRegisterInfo { Name = "AddRelativeForce", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_AddRelativeForce
#endif
                    }},
                    {"AddForceAtPosition", new MemberRegisterInfo { Name = "AddForceAtPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_AddForceAtPosition
#endif
                    }},
                    {"AddTorque", new MemberRegisterInfo { Name = "AddTorque", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_AddTorque
#endif
                    }},
                    {"GetPoint", new MemberRegisterInfo { Name = "GetPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_GetPoint
#endif
                    }},
                    {"GetRelativePoint", new MemberRegisterInfo { Name = "GetRelativePoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_GetRelativePoint
#endif
                    }},
                    {"GetVector", new MemberRegisterInfo { Name = "GetVector", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_GetVector
#endif
                    }},
                    {"GetRelativeVector", new MemberRegisterInfo { Name = "GetRelativeVector", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_GetRelativeVector
#endif
                    }},
                    {"GetPointVelocity", new MemberRegisterInfo { Name = "GetPointVelocity", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_GetPointVelocity
#endif
                    }},
                    {"GetRelativePointVelocity", new MemberRegisterInfo { Name = "GetRelativePointVelocity", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_GetRelativePointVelocity
#endif
                    }},
                    {"OverlapCollider", new MemberRegisterInfo { Name = "OverlapCollider", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_OverlapCollider
#endif
                    }},
                    {"GetContacts", new MemberRegisterInfo { Name = "GetContacts", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_GetContacts
#endif
                    }},
                    {"GetAttachedColliders", new MemberRegisterInfo { Name = "GetAttachedColliders", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_GetAttachedColliders
#endif
                    }},
                    {"Cast", new MemberRegisterInfo { Name = "Cast", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Rigidbody2D_Wrap.M_Cast
#endif
                    }},
                    {"position", new MemberRegisterInfo { Name = "position", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_position, PropertySetter = UnityEngine_Rigidbody2D_Wrap.S_position
#endif
                    }},
                    {"rotation", new MemberRegisterInfo { Name = "rotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_rotation, PropertySetter = UnityEngine_Rigidbody2D_Wrap.S_rotation
#endif
                    }},
                    {"velocity", new MemberRegisterInfo { Name = "velocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_velocity, PropertySetter = UnityEngine_Rigidbody2D_Wrap.S_velocity
#endif
                    }},
                    {"angularVelocity", new MemberRegisterInfo { Name = "angularVelocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_angularVelocity, PropertySetter = UnityEngine_Rigidbody2D_Wrap.S_angularVelocity
#endif
                    }},
                    {"useAutoMass", new MemberRegisterInfo { Name = "useAutoMass", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_useAutoMass, PropertySetter = UnityEngine_Rigidbody2D_Wrap.S_useAutoMass
#endif
                    }},
                    {"mass", new MemberRegisterInfo { Name = "mass", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_mass, PropertySetter = UnityEngine_Rigidbody2D_Wrap.S_mass
#endif
                    }},
                    {"sharedMaterial", new MemberRegisterInfo { Name = "sharedMaterial", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_sharedMaterial, PropertySetter = UnityEngine_Rigidbody2D_Wrap.S_sharedMaterial
#endif
                    }},
                    {"centerOfMass", new MemberRegisterInfo { Name = "centerOfMass", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_centerOfMass, PropertySetter = UnityEngine_Rigidbody2D_Wrap.S_centerOfMass
#endif
                    }},
                    {"worldCenterOfMass", new MemberRegisterInfo { Name = "worldCenterOfMass", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_worldCenterOfMass
#endif
                    }},
                    {"inertia", new MemberRegisterInfo { Name = "inertia", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_inertia, PropertySetter = UnityEngine_Rigidbody2D_Wrap.S_inertia
#endif
                    }},
                    {"drag", new MemberRegisterInfo { Name = "drag", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_drag, PropertySetter = UnityEngine_Rigidbody2D_Wrap.S_drag
#endif
                    }},
                    {"angularDrag", new MemberRegisterInfo { Name = "angularDrag", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_angularDrag, PropertySetter = UnityEngine_Rigidbody2D_Wrap.S_angularDrag
#endif
                    }},
                    {"gravityScale", new MemberRegisterInfo { Name = "gravityScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_gravityScale, PropertySetter = UnityEngine_Rigidbody2D_Wrap.S_gravityScale
#endif
                    }},
                    {"bodyType", new MemberRegisterInfo { Name = "bodyType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_bodyType, PropertySetter = UnityEngine_Rigidbody2D_Wrap.S_bodyType
#endif
                    }},
                    {"useFullKinematicContacts", new MemberRegisterInfo { Name = "useFullKinematicContacts", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_useFullKinematicContacts, PropertySetter = UnityEngine_Rigidbody2D_Wrap.S_useFullKinematicContacts
#endif
                    }},
                    {"isKinematic", new MemberRegisterInfo { Name = "isKinematic", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_isKinematic, PropertySetter = UnityEngine_Rigidbody2D_Wrap.S_isKinematic
#endif
                    }},
                    {"freezeRotation", new MemberRegisterInfo { Name = "freezeRotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_freezeRotation, PropertySetter = UnityEngine_Rigidbody2D_Wrap.S_freezeRotation
#endif
                    }},
                    {"constraints", new MemberRegisterInfo { Name = "constraints", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_constraints, PropertySetter = UnityEngine_Rigidbody2D_Wrap.S_constraints
#endif
                    }},
                    {"simulated", new MemberRegisterInfo { Name = "simulated", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_simulated, PropertySetter = UnityEngine_Rigidbody2D_Wrap.S_simulated
#endif
                    }},
                    {"interpolation", new MemberRegisterInfo { Name = "interpolation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_interpolation, PropertySetter = UnityEngine_Rigidbody2D_Wrap.S_interpolation
#endif
                    }},
                    {"sleepMode", new MemberRegisterInfo { Name = "sleepMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_sleepMode, PropertySetter = UnityEngine_Rigidbody2D_Wrap.S_sleepMode
#endif
                    }},
                    {"collisionDetectionMode", new MemberRegisterInfo { Name = "collisionDetectionMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_collisionDetectionMode, PropertySetter = UnityEngine_Rigidbody2D_Wrap.S_collisionDetectionMode
#endif
                    }},
                    {"attachedColliderCount", new MemberRegisterInfo { Name = "attachedColliderCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Rigidbody2D_Wrap.G_attachedColliderCount
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Collider2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Collider2D_Wrap.Constructor
#endif
                    }},
                    {"CreateMesh", new MemberRegisterInfo { Name = "CreateMesh", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Collider2D_Wrap.M_CreateMesh
#endif
                    }},
                    {"GetShapeHash", new MemberRegisterInfo { Name = "GetShapeHash", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Collider2D_Wrap.M_GetShapeHash
#endif
                    }},
                    {"IsTouching", new MemberRegisterInfo { Name = "IsTouching", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Collider2D_Wrap.M_IsTouching
#endif
                    }},
                    {"IsTouchingLayers", new MemberRegisterInfo { Name = "IsTouchingLayers", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Collider2D_Wrap.M_IsTouchingLayers
#endif
                    }},
                    {"OverlapPoint", new MemberRegisterInfo { Name = "OverlapPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Collider2D_Wrap.M_OverlapPoint
#endif
                    }},
                    {"Distance", new MemberRegisterInfo { Name = "Distance", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Collider2D_Wrap.M_Distance
#endif
                    }},
                    {"OverlapCollider", new MemberRegisterInfo { Name = "OverlapCollider", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Collider2D_Wrap.M_OverlapCollider
#endif
                    }},
                    {"GetContacts", new MemberRegisterInfo { Name = "GetContacts", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Collider2D_Wrap.M_GetContacts
#endif
                    }},
                    {"Cast", new MemberRegisterInfo { Name = "Cast", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Collider2D_Wrap.M_Cast
#endif
                    }},
                    {"Raycast", new MemberRegisterInfo { Name = "Raycast", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Collider2D_Wrap.M_Raycast
#endif
                    }},
                    {"ClosestPoint", new MemberRegisterInfo { Name = "ClosestPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Collider2D_Wrap.M_ClosestPoint
#endif
                    }},
                    {"density", new MemberRegisterInfo { Name = "density", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collider2D_Wrap.G_density, PropertySetter = UnityEngine_Collider2D_Wrap.S_density
#endif
                    }},
                    {"isTrigger", new MemberRegisterInfo { Name = "isTrigger", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collider2D_Wrap.G_isTrigger, PropertySetter = UnityEngine_Collider2D_Wrap.S_isTrigger
#endif
                    }},
                    {"usedByEffector", new MemberRegisterInfo { Name = "usedByEffector", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collider2D_Wrap.G_usedByEffector, PropertySetter = UnityEngine_Collider2D_Wrap.S_usedByEffector
#endif
                    }},
                    {"usedByComposite", new MemberRegisterInfo { Name = "usedByComposite", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collider2D_Wrap.G_usedByComposite, PropertySetter = UnityEngine_Collider2D_Wrap.S_usedByComposite
#endif
                    }},
                    {"composite", new MemberRegisterInfo { Name = "composite", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collider2D_Wrap.G_composite
#endif
                    }},
                    {"offset", new MemberRegisterInfo { Name = "offset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collider2D_Wrap.G_offset, PropertySetter = UnityEngine_Collider2D_Wrap.S_offset
#endif
                    }},
                    {"attachedRigidbody", new MemberRegisterInfo { Name = "attachedRigidbody", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collider2D_Wrap.G_attachedRigidbody
#endif
                    }},
                    {"shapeCount", new MemberRegisterInfo { Name = "shapeCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collider2D_Wrap.G_shapeCount
#endif
                    }},
                    {"bounds", new MemberRegisterInfo { Name = "bounds", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collider2D_Wrap.G_bounds
#endif
                    }},
                    {"sharedMaterial", new MemberRegisterInfo { Name = "sharedMaterial", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collider2D_Wrap.G_sharedMaterial, PropertySetter = UnityEngine_Collider2D_Wrap.S_sharedMaterial
#endif
                    }},
                    {"friction", new MemberRegisterInfo { Name = "friction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collider2D_Wrap.G_friction
#endif
                    }},
                    {"bounciness", new MemberRegisterInfo { Name = "bounciness", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Collider2D_Wrap.G_bounciness
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CircleCollider2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_CircleCollider2D_Wrap.Constructor
#endif
                    }},
                    {"radius", new MemberRegisterInfo { Name = "radius", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CircleCollider2D_Wrap.G_radius, PropertySetter = UnityEngine_CircleCollider2D_Wrap.S_radius
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CapsuleCollider2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_CapsuleCollider2D_Wrap.Constructor
#endif
                    }},
                    {"size", new MemberRegisterInfo { Name = "size", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CapsuleCollider2D_Wrap.G_size, PropertySetter = UnityEngine_CapsuleCollider2D_Wrap.S_size
#endif
                    }},
                    {"direction", new MemberRegisterInfo { Name = "direction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CapsuleCollider2D_Wrap.G_direction, PropertySetter = UnityEngine_CapsuleCollider2D_Wrap.S_direction
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_EdgeCollider2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_EdgeCollider2D_Wrap.Constructor
#endif
                    }},
                    {"Reset", new MemberRegisterInfo { Name = "Reset", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_EdgeCollider2D_Wrap.M_Reset
#endif
                    }},
                    {"GetPoints", new MemberRegisterInfo { Name = "GetPoints", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_EdgeCollider2D_Wrap.M_GetPoints
#endif
                    }},
                    {"SetPoints", new MemberRegisterInfo { Name = "SetPoints", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_EdgeCollider2D_Wrap.M_SetPoints
#endif
                    }},
                    {"edgeRadius", new MemberRegisterInfo { Name = "edgeRadius", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_EdgeCollider2D_Wrap.G_edgeRadius, PropertySetter = UnityEngine_EdgeCollider2D_Wrap.S_edgeRadius
#endif
                    }},
                    {"edgeCount", new MemberRegisterInfo { Name = "edgeCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_EdgeCollider2D_Wrap.G_edgeCount
#endif
                    }},
                    {"pointCount", new MemberRegisterInfo { Name = "pointCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_EdgeCollider2D_Wrap.G_pointCount
#endif
                    }},
                    {"points", new MemberRegisterInfo { Name = "points", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_EdgeCollider2D_Wrap.G_points, PropertySetter = UnityEngine_EdgeCollider2D_Wrap.S_points
#endif
                    }},
                    {"useAdjacentStartPoint", new MemberRegisterInfo { Name = "useAdjacentStartPoint", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_EdgeCollider2D_Wrap.G_useAdjacentStartPoint, PropertySetter = UnityEngine_EdgeCollider2D_Wrap.S_useAdjacentStartPoint
#endif
                    }},
                    {"useAdjacentEndPoint", new MemberRegisterInfo { Name = "useAdjacentEndPoint", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_EdgeCollider2D_Wrap.G_useAdjacentEndPoint, PropertySetter = UnityEngine_EdgeCollider2D_Wrap.S_useAdjacentEndPoint
#endif
                    }},
                    {"adjacentStartPoint", new MemberRegisterInfo { Name = "adjacentStartPoint", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_EdgeCollider2D_Wrap.G_adjacentStartPoint, PropertySetter = UnityEngine_EdgeCollider2D_Wrap.S_adjacentStartPoint
#endif
                    }},
                    {"adjacentEndPoint", new MemberRegisterInfo { Name = "adjacentEndPoint", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_EdgeCollider2D_Wrap.G_adjacentEndPoint, PropertySetter = UnityEngine_EdgeCollider2D_Wrap.S_adjacentEndPoint
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_BoxCollider2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_BoxCollider2D_Wrap.Constructor
#endif
                    }},
                    {"size", new MemberRegisterInfo { Name = "size", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoxCollider2D_Wrap.G_size, PropertySetter = UnityEngine_BoxCollider2D_Wrap.S_size
#endif
                    }},
                    {"edgeRadius", new MemberRegisterInfo { Name = "edgeRadius", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoxCollider2D_Wrap.G_edgeRadius, PropertySetter = UnityEngine_BoxCollider2D_Wrap.S_edgeRadius
#endif
                    }},
                    {"autoTiling", new MemberRegisterInfo { Name = "autoTiling", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BoxCollider2D_Wrap.G_autoTiling, PropertySetter = UnityEngine_BoxCollider2D_Wrap.S_autoTiling
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_PolygonCollider2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_PolygonCollider2D_Wrap.Constructor
#endif
                    }},
                    {"GetTotalPointCount", new MemberRegisterInfo { Name = "GetTotalPointCount", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PolygonCollider2D_Wrap.M_GetTotalPointCount
#endif
                    }},
                    {"GetPath", new MemberRegisterInfo { Name = "GetPath", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PolygonCollider2D_Wrap.M_GetPath
#endif
                    }},
                    {"SetPath", new MemberRegisterInfo { Name = "SetPath", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PolygonCollider2D_Wrap.M_SetPath
#endif
                    }},
                    {"CreatePrimitive", new MemberRegisterInfo { Name = "CreatePrimitive", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_PolygonCollider2D_Wrap.M_CreatePrimitive
#endif
                    }},
                    {"autoTiling", new MemberRegisterInfo { Name = "autoTiling", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PolygonCollider2D_Wrap.G_autoTiling, PropertySetter = UnityEngine_PolygonCollider2D_Wrap.S_autoTiling
#endif
                    }},
                    {"points", new MemberRegisterInfo { Name = "points", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PolygonCollider2D_Wrap.G_points, PropertySetter = UnityEngine_PolygonCollider2D_Wrap.S_points
#endif
                    }},
                    {"pathCount", new MemberRegisterInfo { Name = "pathCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PolygonCollider2D_Wrap.G_pathCount, PropertySetter = UnityEngine_PolygonCollider2D_Wrap.S_pathCount
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CompositeCollider2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_CompositeCollider2D_Wrap.Constructor
#endif
                    }},
                    {"GenerateGeometry", new MemberRegisterInfo { Name = "GenerateGeometry", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CompositeCollider2D_Wrap.M_GenerateGeometry
#endif
                    }},
                    {"GetPathPointCount", new MemberRegisterInfo { Name = "GetPathPointCount", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CompositeCollider2D_Wrap.M_GetPathPointCount
#endif
                    }},
                    {"GetPath", new MemberRegisterInfo { Name = "GetPath", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CompositeCollider2D_Wrap.M_GetPath
#endif
                    }},
                    {"geometryType", new MemberRegisterInfo { Name = "geometryType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CompositeCollider2D_Wrap.G_geometryType, PropertySetter = UnityEngine_CompositeCollider2D_Wrap.S_geometryType
#endif
                    }},
                    {"generationType", new MemberRegisterInfo { Name = "generationType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CompositeCollider2D_Wrap.G_generationType, PropertySetter = UnityEngine_CompositeCollider2D_Wrap.S_generationType
#endif
                    }},
                    {"vertexDistance", new MemberRegisterInfo { Name = "vertexDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CompositeCollider2D_Wrap.G_vertexDistance, PropertySetter = UnityEngine_CompositeCollider2D_Wrap.S_vertexDistance
#endif
                    }},
                    {"edgeRadius", new MemberRegisterInfo { Name = "edgeRadius", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CompositeCollider2D_Wrap.G_edgeRadius, PropertySetter = UnityEngine_CompositeCollider2D_Wrap.S_edgeRadius
#endif
                    }},
                    {"offsetDistance", new MemberRegisterInfo { Name = "offsetDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CompositeCollider2D_Wrap.G_offsetDistance, PropertySetter = UnityEngine_CompositeCollider2D_Wrap.S_offsetDistance
#endif
                    }},
                    {"pathCount", new MemberRegisterInfo { Name = "pathCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CompositeCollider2D_Wrap.G_pathCount
#endif
                    }},
                    {"pointCount", new MemberRegisterInfo { Name = "pointCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CompositeCollider2D_Wrap.G_pointCount
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Joint2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Joint2D_Wrap.Constructor
#endif
                    }},
                    {"GetReactionForce", new MemberRegisterInfo { Name = "GetReactionForce", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Joint2D_Wrap.M_GetReactionForce
#endif
                    }},
                    {"GetReactionTorque", new MemberRegisterInfo { Name = "GetReactionTorque", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Joint2D_Wrap.M_GetReactionTorque
#endif
                    }},
                    {"attachedRigidbody", new MemberRegisterInfo { Name = "attachedRigidbody", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Joint2D_Wrap.G_attachedRigidbody
#endif
                    }},
                    {"connectedBody", new MemberRegisterInfo { Name = "connectedBody", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Joint2D_Wrap.G_connectedBody, PropertySetter = UnityEngine_Joint2D_Wrap.S_connectedBody
#endif
                    }},
                    {"enableCollision", new MemberRegisterInfo { Name = "enableCollision", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Joint2D_Wrap.G_enableCollision, PropertySetter = UnityEngine_Joint2D_Wrap.S_enableCollision
#endif
                    }},
                    {"breakForce", new MemberRegisterInfo { Name = "breakForce", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Joint2D_Wrap.G_breakForce, PropertySetter = UnityEngine_Joint2D_Wrap.S_breakForce
#endif
                    }},
                    {"breakTorque", new MemberRegisterInfo { Name = "breakTorque", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Joint2D_Wrap.G_breakTorque, PropertySetter = UnityEngine_Joint2D_Wrap.S_breakTorque
#endif
                    }},
                    {"reactionForce", new MemberRegisterInfo { Name = "reactionForce", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Joint2D_Wrap.G_reactionForce
#endif
                    }},
                    {"reactionTorque", new MemberRegisterInfo { Name = "reactionTorque", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Joint2D_Wrap.G_reactionTorque
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AnchoredJoint2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AnchoredJoint2D_Wrap.Constructor
#endif
                    }},
                    {"anchor", new MemberRegisterInfo { Name = "anchor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnchoredJoint2D_Wrap.G_anchor, PropertySetter = UnityEngine_AnchoredJoint2D_Wrap.S_anchor
#endif
                    }},
                    {"connectedAnchor", new MemberRegisterInfo { Name = "connectedAnchor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnchoredJoint2D_Wrap.G_connectedAnchor, PropertySetter = UnityEngine_AnchoredJoint2D_Wrap.S_connectedAnchor
#endif
                    }},
                    {"autoConfigureConnectedAnchor", new MemberRegisterInfo { Name = "autoConfigureConnectedAnchor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AnchoredJoint2D_Wrap.G_autoConfigureConnectedAnchor, PropertySetter = UnityEngine_AnchoredJoint2D_Wrap.S_autoConfigureConnectedAnchor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SpringJoint2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SpringJoint2D_Wrap.Constructor
#endif
                    }},
                    {"autoConfigureDistance", new MemberRegisterInfo { Name = "autoConfigureDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpringJoint2D_Wrap.G_autoConfigureDistance, PropertySetter = UnityEngine_SpringJoint2D_Wrap.S_autoConfigureDistance
#endif
                    }},
                    {"distance", new MemberRegisterInfo { Name = "distance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpringJoint2D_Wrap.G_distance, PropertySetter = UnityEngine_SpringJoint2D_Wrap.S_distance
#endif
                    }},
                    {"dampingRatio", new MemberRegisterInfo { Name = "dampingRatio", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpringJoint2D_Wrap.G_dampingRatio, PropertySetter = UnityEngine_SpringJoint2D_Wrap.S_dampingRatio
#endif
                    }},
                    {"frequency", new MemberRegisterInfo { Name = "frequency", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpringJoint2D_Wrap.G_frequency, PropertySetter = UnityEngine_SpringJoint2D_Wrap.S_frequency
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_DistanceJoint2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_DistanceJoint2D_Wrap.Constructor
#endif
                    }},
                    {"autoConfigureDistance", new MemberRegisterInfo { Name = "autoConfigureDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_DistanceJoint2D_Wrap.G_autoConfigureDistance, PropertySetter = UnityEngine_DistanceJoint2D_Wrap.S_autoConfigureDistance
#endif
                    }},
                    {"distance", new MemberRegisterInfo { Name = "distance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_DistanceJoint2D_Wrap.G_distance, PropertySetter = UnityEngine_DistanceJoint2D_Wrap.S_distance
#endif
                    }},
                    {"maxDistanceOnly", new MemberRegisterInfo { Name = "maxDistanceOnly", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_DistanceJoint2D_Wrap.G_maxDistanceOnly, PropertySetter = UnityEngine_DistanceJoint2D_Wrap.S_maxDistanceOnly
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_FrictionJoint2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_FrictionJoint2D_Wrap.Constructor
#endif
                    }},
                    {"maxForce", new MemberRegisterInfo { Name = "maxForce", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_FrictionJoint2D_Wrap.G_maxForce, PropertySetter = UnityEngine_FrictionJoint2D_Wrap.S_maxForce
#endif
                    }},
                    {"maxTorque", new MemberRegisterInfo { Name = "maxTorque", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_FrictionJoint2D_Wrap.G_maxTorque, PropertySetter = UnityEngine_FrictionJoint2D_Wrap.S_maxTorque
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_HingeJoint2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_HingeJoint2D_Wrap.Constructor
#endif
                    }},
                    {"GetMotorTorque", new MemberRegisterInfo { Name = "GetMotorTorque", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_HingeJoint2D_Wrap.M_GetMotorTorque
#endif
                    }},
                    {"useMotor", new MemberRegisterInfo { Name = "useMotor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HingeJoint2D_Wrap.G_useMotor, PropertySetter = UnityEngine_HingeJoint2D_Wrap.S_useMotor
#endif
                    }},
                    {"useLimits", new MemberRegisterInfo { Name = "useLimits", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HingeJoint2D_Wrap.G_useLimits, PropertySetter = UnityEngine_HingeJoint2D_Wrap.S_useLimits
#endif
                    }},
                    {"motor", new MemberRegisterInfo { Name = "motor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HingeJoint2D_Wrap.G_motor, PropertySetter = UnityEngine_HingeJoint2D_Wrap.S_motor
#endif
                    }},
                    {"limits", new MemberRegisterInfo { Name = "limits", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HingeJoint2D_Wrap.G_limits, PropertySetter = UnityEngine_HingeJoint2D_Wrap.S_limits
#endif
                    }},
                    {"limitState", new MemberRegisterInfo { Name = "limitState", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HingeJoint2D_Wrap.G_limitState
#endif
                    }},
                    {"referenceAngle", new MemberRegisterInfo { Name = "referenceAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HingeJoint2D_Wrap.G_referenceAngle
#endif
                    }},
                    {"jointAngle", new MemberRegisterInfo { Name = "jointAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HingeJoint2D_Wrap.G_jointAngle
#endif
                    }},
                    {"jointSpeed", new MemberRegisterInfo { Name = "jointSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_HingeJoint2D_Wrap.G_jointSpeed
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RelativeJoint2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_RelativeJoint2D_Wrap.Constructor
#endif
                    }},
                    {"maxForce", new MemberRegisterInfo { Name = "maxForce", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RelativeJoint2D_Wrap.G_maxForce, PropertySetter = UnityEngine_RelativeJoint2D_Wrap.S_maxForce
#endif
                    }},
                    {"maxTorque", new MemberRegisterInfo { Name = "maxTorque", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RelativeJoint2D_Wrap.G_maxTorque, PropertySetter = UnityEngine_RelativeJoint2D_Wrap.S_maxTorque
#endif
                    }},
                    {"correctionScale", new MemberRegisterInfo { Name = "correctionScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RelativeJoint2D_Wrap.G_correctionScale, PropertySetter = UnityEngine_RelativeJoint2D_Wrap.S_correctionScale
#endif
                    }},
                    {"autoConfigureOffset", new MemberRegisterInfo { Name = "autoConfigureOffset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RelativeJoint2D_Wrap.G_autoConfigureOffset, PropertySetter = UnityEngine_RelativeJoint2D_Wrap.S_autoConfigureOffset
#endif
                    }},
                    {"linearOffset", new MemberRegisterInfo { Name = "linearOffset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RelativeJoint2D_Wrap.G_linearOffset, PropertySetter = UnityEngine_RelativeJoint2D_Wrap.S_linearOffset
#endif
                    }},
                    {"angularOffset", new MemberRegisterInfo { Name = "angularOffset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RelativeJoint2D_Wrap.G_angularOffset, PropertySetter = UnityEngine_RelativeJoint2D_Wrap.S_angularOffset
#endif
                    }},
                    {"target", new MemberRegisterInfo { Name = "target", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_RelativeJoint2D_Wrap.G_target
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SliderJoint2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SliderJoint2D_Wrap.Constructor
#endif
                    }},
                    {"GetMotorForce", new MemberRegisterInfo { Name = "GetMotorForce", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SliderJoint2D_Wrap.M_GetMotorForce
#endif
                    }},
                    {"autoConfigureAngle", new MemberRegisterInfo { Name = "autoConfigureAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SliderJoint2D_Wrap.G_autoConfigureAngle, PropertySetter = UnityEngine_SliderJoint2D_Wrap.S_autoConfigureAngle
#endif
                    }},
                    {"angle", new MemberRegisterInfo { Name = "angle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SliderJoint2D_Wrap.G_angle, PropertySetter = UnityEngine_SliderJoint2D_Wrap.S_angle
#endif
                    }},
                    {"useMotor", new MemberRegisterInfo { Name = "useMotor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SliderJoint2D_Wrap.G_useMotor, PropertySetter = UnityEngine_SliderJoint2D_Wrap.S_useMotor
#endif
                    }},
                    {"useLimits", new MemberRegisterInfo { Name = "useLimits", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SliderJoint2D_Wrap.G_useLimits, PropertySetter = UnityEngine_SliderJoint2D_Wrap.S_useLimits
#endif
                    }},
                    {"motor", new MemberRegisterInfo { Name = "motor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SliderJoint2D_Wrap.G_motor, PropertySetter = UnityEngine_SliderJoint2D_Wrap.S_motor
#endif
                    }},
                    {"limits", new MemberRegisterInfo { Name = "limits", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SliderJoint2D_Wrap.G_limits, PropertySetter = UnityEngine_SliderJoint2D_Wrap.S_limits
#endif
                    }},
                    {"limitState", new MemberRegisterInfo { Name = "limitState", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SliderJoint2D_Wrap.G_limitState
#endif
                    }},
                    {"referenceAngle", new MemberRegisterInfo { Name = "referenceAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SliderJoint2D_Wrap.G_referenceAngle
#endif
                    }},
                    {"jointTranslation", new MemberRegisterInfo { Name = "jointTranslation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SliderJoint2D_Wrap.G_jointTranslation
#endif
                    }},
                    {"jointSpeed", new MemberRegisterInfo { Name = "jointSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SliderJoint2D_Wrap.G_jointSpeed
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_TargetJoint2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_TargetJoint2D_Wrap.Constructor
#endif
                    }},
                    {"anchor", new MemberRegisterInfo { Name = "anchor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TargetJoint2D_Wrap.G_anchor, PropertySetter = UnityEngine_TargetJoint2D_Wrap.S_anchor
#endif
                    }},
                    {"target", new MemberRegisterInfo { Name = "target", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TargetJoint2D_Wrap.G_target, PropertySetter = UnityEngine_TargetJoint2D_Wrap.S_target
#endif
                    }},
                    {"autoConfigureTarget", new MemberRegisterInfo { Name = "autoConfigureTarget", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TargetJoint2D_Wrap.G_autoConfigureTarget, PropertySetter = UnityEngine_TargetJoint2D_Wrap.S_autoConfigureTarget
#endif
                    }},
                    {"maxForce", new MemberRegisterInfo { Name = "maxForce", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TargetJoint2D_Wrap.G_maxForce, PropertySetter = UnityEngine_TargetJoint2D_Wrap.S_maxForce
#endif
                    }},
                    {"dampingRatio", new MemberRegisterInfo { Name = "dampingRatio", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TargetJoint2D_Wrap.G_dampingRatio, PropertySetter = UnityEngine_TargetJoint2D_Wrap.S_dampingRatio
#endif
                    }},
                    {"frequency", new MemberRegisterInfo { Name = "frequency", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TargetJoint2D_Wrap.G_frequency, PropertySetter = UnityEngine_TargetJoint2D_Wrap.S_frequency
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_FixedJoint2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_FixedJoint2D_Wrap.Constructor
#endif
                    }},
                    {"dampingRatio", new MemberRegisterInfo { Name = "dampingRatio", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_FixedJoint2D_Wrap.G_dampingRatio, PropertySetter = UnityEngine_FixedJoint2D_Wrap.S_dampingRatio
#endif
                    }},
                    {"frequency", new MemberRegisterInfo { Name = "frequency", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_FixedJoint2D_Wrap.G_frequency, PropertySetter = UnityEngine_FixedJoint2D_Wrap.S_frequency
#endif
                    }},
                    {"referenceAngle", new MemberRegisterInfo { Name = "referenceAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_FixedJoint2D_Wrap.G_referenceAngle
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_WheelJoint2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_WheelJoint2D_Wrap.Constructor
#endif
                    }},
                    {"GetMotorTorque", new MemberRegisterInfo { Name = "GetMotorTorque", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_WheelJoint2D_Wrap.M_GetMotorTorque
#endif
                    }},
                    {"suspension", new MemberRegisterInfo { Name = "suspension", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelJoint2D_Wrap.G_suspension, PropertySetter = UnityEngine_WheelJoint2D_Wrap.S_suspension
#endif
                    }},
                    {"useMotor", new MemberRegisterInfo { Name = "useMotor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelJoint2D_Wrap.G_useMotor, PropertySetter = UnityEngine_WheelJoint2D_Wrap.S_useMotor
#endif
                    }},
                    {"motor", new MemberRegisterInfo { Name = "motor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelJoint2D_Wrap.G_motor, PropertySetter = UnityEngine_WheelJoint2D_Wrap.S_motor
#endif
                    }},
                    {"jointTranslation", new MemberRegisterInfo { Name = "jointTranslation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelJoint2D_Wrap.G_jointTranslation
#endif
                    }},
                    {"jointLinearSpeed", new MemberRegisterInfo { Name = "jointLinearSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelJoint2D_Wrap.G_jointLinearSpeed
#endif
                    }},
                    {"jointSpeed", new MemberRegisterInfo { Name = "jointSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelJoint2D_Wrap.G_jointSpeed
#endif
                    }},
                    {"jointAngle", new MemberRegisterInfo { Name = "jointAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelJoint2D_Wrap.G_jointAngle
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Effector2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Effector2D_Wrap.Constructor
#endif
                    }},
                    {"useColliderMask", new MemberRegisterInfo { Name = "useColliderMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Effector2D_Wrap.G_useColliderMask, PropertySetter = UnityEngine_Effector2D_Wrap.S_useColliderMask
#endif
                    }},
                    {"colliderMask", new MemberRegisterInfo { Name = "colliderMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Effector2D_Wrap.G_colliderMask, PropertySetter = UnityEngine_Effector2D_Wrap.S_colliderMask
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_AreaEffector2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_AreaEffector2D_Wrap.Constructor
#endif
                    }},
                    {"forceAngle", new MemberRegisterInfo { Name = "forceAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AreaEffector2D_Wrap.G_forceAngle, PropertySetter = UnityEngine_AreaEffector2D_Wrap.S_forceAngle
#endif
                    }},
                    {"useGlobalAngle", new MemberRegisterInfo { Name = "useGlobalAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AreaEffector2D_Wrap.G_useGlobalAngle, PropertySetter = UnityEngine_AreaEffector2D_Wrap.S_useGlobalAngle
#endif
                    }},
                    {"forceMagnitude", new MemberRegisterInfo { Name = "forceMagnitude", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AreaEffector2D_Wrap.G_forceMagnitude, PropertySetter = UnityEngine_AreaEffector2D_Wrap.S_forceMagnitude
#endif
                    }},
                    {"forceVariation", new MemberRegisterInfo { Name = "forceVariation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AreaEffector2D_Wrap.G_forceVariation, PropertySetter = UnityEngine_AreaEffector2D_Wrap.S_forceVariation
#endif
                    }},
                    {"drag", new MemberRegisterInfo { Name = "drag", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AreaEffector2D_Wrap.G_drag, PropertySetter = UnityEngine_AreaEffector2D_Wrap.S_drag
#endif
                    }},
                    {"angularDrag", new MemberRegisterInfo { Name = "angularDrag", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AreaEffector2D_Wrap.G_angularDrag, PropertySetter = UnityEngine_AreaEffector2D_Wrap.S_angularDrag
#endif
                    }},
                    {"forceTarget", new MemberRegisterInfo { Name = "forceTarget", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_AreaEffector2D_Wrap.G_forceTarget, PropertySetter = UnityEngine_AreaEffector2D_Wrap.S_forceTarget
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_BuoyancyEffector2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_BuoyancyEffector2D_Wrap.Constructor
#endif
                    }},
                    {"surfaceLevel", new MemberRegisterInfo { Name = "surfaceLevel", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BuoyancyEffector2D_Wrap.G_surfaceLevel, PropertySetter = UnityEngine_BuoyancyEffector2D_Wrap.S_surfaceLevel
#endif
                    }},
                    {"density", new MemberRegisterInfo { Name = "density", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BuoyancyEffector2D_Wrap.G_density, PropertySetter = UnityEngine_BuoyancyEffector2D_Wrap.S_density
#endif
                    }},
                    {"linearDrag", new MemberRegisterInfo { Name = "linearDrag", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BuoyancyEffector2D_Wrap.G_linearDrag, PropertySetter = UnityEngine_BuoyancyEffector2D_Wrap.S_linearDrag
#endif
                    }},
                    {"angularDrag", new MemberRegisterInfo { Name = "angularDrag", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BuoyancyEffector2D_Wrap.G_angularDrag, PropertySetter = UnityEngine_BuoyancyEffector2D_Wrap.S_angularDrag
#endif
                    }},
                    {"flowAngle", new MemberRegisterInfo { Name = "flowAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BuoyancyEffector2D_Wrap.G_flowAngle, PropertySetter = UnityEngine_BuoyancyEffector2D_Wrap.S_flowAngle
#endif
                    }},
                    {"flowMagnitude", new MemberRegisterInfo { Name = "flowMagnitude", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BuoyancyEffector2D_Wrap.G_flowMagnitude, PropertySetter = UnityEngine_BuoyancyEffector2D_Wrap.S_flowMagnitude
#endif
                    }},
                    {"flowVariation", new MemberRegisterInfo { Name = "flowVariation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_BuoyancyEffector2D_Wrap.G_flowVariation, PropertySetter = UnityEngine_BuoyancyEffector2D_Wrap.S_flowVariation
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_PointEffector2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_PointEffector2D_Wrap.Constructor
#endif
                    }},
                    {"forceMagnitude", new MemberRegisterInfo { Name = "forceMagnitude", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PointEffector2D_Wrap.G_forceMagnitude, PropertySetter = UnityEngine_PointEffector2D_Wrap.S_forceMagnitude
#endif
                    }},
                    {"forceVariation", new MemberRegisterInfo { Name = "forceVariation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PointEffector2D_Wrap.G_forceVariation, PropertySetter = UnityEngine_PointEffector2D_Wrap.S_forceVariation
#endif
                    }},
                    {"distanceScale", new MemberRegisterInfo { Name = "distanceScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PointEffector2D_Wrap.G_distanceScale, PropertySetter = UnityEngine_PointEffector2D_Wrap.S_distanceScale
#endif
                    }},
                    {"drag", new MemberRegisterInfo { Name = "drag", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PointEffector2D_Wrap.G_drag, PropertySetter = UnityEngine_PointEffector2D_Wrap.S_drag
#endif
                    }},
                    {"angularDrag", new MemberRegisterInfo { Name = "angularDrag", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PointEffector2D_Wrap.G_angularDrag, PropertySetter = UnityEngine_PointEffector2D_Wrap.S_angularDrag
#endif
                    }},
                    {"forceSource", new MemberRegisterInfo { Name = "forceSource", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PointEffector2D_Wrap.G_forceSource, PropertySetter = UnityEngine_PointEffector2D_Wrap.S_forceSource
#endif
                    }},
                    {"forceTarget", new MemberRegisterInfo { Name = "forceTarget", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PointEffector2D_Wrap.G_forceTarget, PropertySetter = UnityEngine_PointEffector2D_Wrap.S_forceTarget
#endif
                    }},
                    {"forceMode", new MemberRegisterInfo { Name = "forceMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PointEffector2D_Wrap.G_forceMode, PropertySetter = UnityEngine_PointEffector2D_Wrap.S_forceMode
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_PlatformEffector2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_PlatformEffector2D_Wrap.Constructor
#endif
                    }},
                    {"useOneWay", new MemberRegisterInfo { Name = "useOneWay", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PlatformEffector2D_Wrap.G_useOneWay, PropertySetter = UnityEngine_PlatformEffector2D_Wrap.S_useOneWay
#endif
                    }},
                    {"useOneWayGrouping", new MemberRegisterInfo { Name = "useOneWayGrouping", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PlatformEffector2D_Wrap.G_useOneWayGrouping, PropertySetter = UnityEngine_PlatformEffector2D_Wrap.S_useOneWayGrouping
#endif
                    }},
                    {"useSideFriction", new MemberRegisterInfo { Name = "useSideFriction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PlatformEffector2D_Wrap.G_useSideFriction, PropertySetter = UnityEngine_PlatformEffector2D_Wrap.S_useSideFriction
#endif
                    }},
                    {"useSideBounce", new MemberRegisterInfo { Name = "useSideBounce", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PlatformEffector2D_Wrap.G_useSideBounce, PropertySetter = UnityEngine_PlatformEffector2D_Wrap.S_useSideBounce
#endif
                    }},
                    {"surfaceArc", new MemberRegisterInfo { Name = "surfaceArc", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PlatformEffector2D_Wrap.G_surfaceArc, PropertySetter = UnityEngine_PlatformEffector2D_Wrap.S_surfaceArc
#endif
                    }},
                    {"sideArc", new MemberRegisterInfo { Name = "sideArc", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PlatformEffector2D_Wrap.G_sideArc, PropertySetter = UnityEngine_PlatformEffector2D_Wrap.S_sideArc
#endif
                    }},
                    {"rotationalOffset", new MemberRegisterInfo { Name = "rotationalOffset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PlatformEffector2D_Wrap.G_rotationalOffset, PropertySetter = UnityEngine_PlatformEffector2D_Wrap.S_rotationalOffset
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SurfaceEffector2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SurfaceEffector2D_Wrap.Constructor
#endif
                    }},
                    {"speed", new MemberRegisterInfo { Name = "speed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SurfaceEffector2D_Wrap.G_speed, PropertySetter = UnityEngine_SurfaceEffector2D_Wrap.S_speed
#endif
                    }},
                    {"speedVariation", new MemberRegisterInfo { Name = "speedVariation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SurfaceEffector2D_Wrap.G_speedVariation, PropertySetter = UnityEngine_SurfaceEffector2D_Wrap.S_speedVariation
#endif
                    }},
                    {"forceScale", new MemberRegisterInfo { Name = "forceScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SurfaceEffector2D_Wrap.G_forceScale, PropertySetter = UnityEngine_SurfaceEffector2D_Wrap.S_forceScale
#endif
                    }},
                    {"useContactForce", new MemberRegisterInfo { Name = "useContactForce", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SurfaceEffector2D_Wrap.G_useContactForce, PropertySetter = UnityEngine_SurfaceEffector2D_Wrap.S_useContactForce
#endif
                    }},
                    {"useFriction", new MemberRegisterInfo { Name = "useFriction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SurfaceEffector2D_Wrap.G_useFriction, PropertySetter = UnityEngine_SurfaceEffector2D_Wrap.S_useFriction
#endif
                    }},
                    {"useBounce", new MemberRegisterInfo { Name = "useBounce", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SurfaceEffector2D_Wrap.G_useBounce, PropertySetter = UnityEngine_SurfaceEffector2D_Wrap.S_useBounce
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_PhysicsUpdateBehaviour2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_PhysicsUpdateBehaviour2D_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ConstantForce2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_ConstantForce2D_Wrap.Constructor
#endif
                    }},
                    {"force", new MemberRegisterInfo { Name = "force", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConstantForce2D_Wrap.G_force, PropertySetter = UnityEngine_ConstantForce2D_Wrap.S_force
#endif
                    }},
                    {"relativeForce", new MemberRegisterInfo { Name = "relativeForce", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConstantForce2D_Wrap.G_relativeForce, PropertySetter = UnityEngine_ConstantForce2D_Wrap.S_relativeForce
#endif
                    }},
                    {"torque", new MemberRegisterInfo { Name = "torque", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ConstantForce2D_Wrap.G_torque, PropertySetter = UnityEngine_ConstantForce2D_Wrap.S_torque
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_PhysicsMaterial2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_PhysicsMaterial2D_Wrap.Constructor
#endif
                    }},
                    {"bounciness", new MemberRegisterInfo { Name = "bounciness", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicsMaterial2D_Wrap.G_bounciness, PropertySetter = UnityEngine_PhysicsMaterial2D_Wrap.S_bounciness
#endif
                    }},
                    {"friction", new MemberRegisterInfo { Name = "friction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PhysicsMaterial2D_Wrap.G_friction, PropertySetter = UnityEngine_PhysicsMaterial2D_Wrap.S_friction
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ScreenCapture_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"CaptureScreenshot_static", new MemberRegisterInfo { Name = "CaptureScreenshot", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ScreenCapture_Wrap.F_CaptureScreenshot
#endif
                    }},
                    {"CaptureScreenshotAsTexture_static", new MemberRegisterInfo { Name = "CaptureScreenshotAsTexture", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ScreenCapture_Wrap.F_CaptureScreenshotAsTexture
#endif
                    }},
                    {"CaptureScreenshotIntoRenderTexture_static", new MemberRegisterInfo { Name = "CaptureScreenshotIntoRenderTexture", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ScreenCapture_Wrap.F_CaptureScreenshotIntoRenderTexture
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SpriteMask_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SpriteMask_Wrap.Constructor
#endif
                    }},
                    {"frontSortingLayerID", new MemberRegisterInfo { Name = "frontSortingLayerID", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpriteMask_Wrap.G_frontSortingLayerID, PropertySetter = UnityEngine_SpriteMask_Wrap.S_frontSortingLayerID
#endif
                    }},
                    {"frontSortingOrder", new MemberRegisterInfo { Name = "frontSortingOrder", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpriteMask_Wrap.G_frontSortingOrder, PropertySetter = UnityEngine_SpriteMask_Wrap.S_frontSortingOrder
#endif
                    }},
                    {"backSortingLayerID", new MemberRegisterInfo { Name = "backSortingLayerID", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpriteMask_Wrap.G_backSortingLayerID, PropertySetter = UnityEngine_SpriteMask_Wrap.S_backSortingLayerID
#endif
                    }},
                    {"backSortingOrder", new MemberRegisterInfo { Name = "backSortingOrder", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpriteMask_Wrap.G_backSortingOrder, PropertySetter = UnityEngine_SpriteMask_Wrap.S_backSortingOrder
#endif
                    }},
                    {"alphaCutoff", new MemberRegisterInfo { Name = "alphaCutoff", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpriteMask_Wrap.G_alphaCutoff, PropertySetter = UnityEngine_SpriteMask_Wrap.S_alphaCutoff
#endif
                    }},
                    {"sprite", new MemberRegisterInfo { Name = "sprite", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpriteMask_Wrap.G_sprite, PropertySetter = UnityEngine_SpriteMask_Wrap.S_sprite
#endif
                    }},
                    {"isCustomRangeActive", new MemberRegisterInfo { Name = "isCustomRangeActive", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpriteMask_Wrap.G_isCustomRangeActive, PropertySetter = UnityEngine_SpriteMask_Wrap.S_isCustomRangeActive
#endif
                    }},
                    {"spriteSortPoint", new MemberRegisterInfo { Name = "spriteSortPoint", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SpriteMask_Wrap.G_spriteSortPoint, PropertySetter = UnityEngine_SpriteMask_Wrap.S_spriteSortPoint
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_StreamingController_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_StreamingController_Wrap.Constructor
#endif
                    }},
                    {"SetPreloading", new MemberRegisterInfo { Name = "SetPreloading", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_StreamingController_Wrap.M_SetPreloading
#endif
                    }},
                    {"CancelPreloading", new MemberRegisterInfo { Name = "CancelPreloading", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_StreamingController_Wrap.M_CancelPreloading
#endif
                    }},
                    {"IsPreloading", new MemberRegisterInfo { Name = "IsPreloading", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_StreamingController_Wrap.M_IsPreloading
#endif
                    }},
                    {"streamingMipmapBias", new MemberRegisterInfo { Name = "streamingMipmapBias", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_StreamingController_Wrap.G_streamingMipmapBias, PropertySetter = UnityEngine_StreamingController_Wrap.S_streamingMipmapBias
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_IntegratedSubsystem_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_IntegratedSubsystem_Wrap.Constructor
#endif
                    }},
                    {"Start", new MemberRegisterInfo { Name = "Start", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_IntegratedSubsystem_Wrap.M_Start
#endif
                    }},
                    {"Stop", new MemberRegisterInfo { Name = "Stop", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_IntegratedSubsystem_Wrap.M_Stop
#endif
                    }},
                    {"Destroy", new MemberRegisterInfo { Name = "Destroy", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_IntegratedSubsystem_Wrap.M_Destroy
#endif
                    }},
                    {"running", new MemberRegisterInfo { Name = "running", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_IntegratedSubsystem_Wrap.G_running
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_IntegratedSubsystemDescriptor_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"id", new MemberRegisterInfo { Name = "id", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_IntegratedSubsystemDescriptor_Wrap.G_id
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ISubsystem_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"Start", new MemberRegisterInfo { Name = "Start", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ISubsystem_Wrap.M_Start
#endif
                    }},
                    {"Stop", new MemberRegisterInfo { Name = "Stop", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ISubsystem_Wrap.M_Stop
#endif
                    }},
                    {"Destroy", new MemberRegisterInfo { Name = "Destroy", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ISubsystem_Wrap.M_Destroy
#endif
                    }},
                    {"running", new MemberRegisterInfo { Name = "running", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ISubsystem_Wrap.G_running
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ISubsystemDescriptor_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"Create", new MemberRegisterInfo { Name = "Create", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ISubsystemDescriptor_Wrap.M_Create
#endif
                    }},
                    {"id", new MemberRegisterInfo { Name = "id", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_ISubsystemDescriptor_Wrap.G_id
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Subsystem_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"Start", new MemberRegisterInfo { Name = "Start", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Subsystem_Wrap.M_Start
#endif
                    }},
                    {"Stop", new MemberRegisterInfo { Name = "Stop", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Subsystem_Wrap.M_Stop
#endif
                    }},
                    {"Destroy", new MemberRegisterInfo { Name = "Destroy", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Subsystem_Wrap.M_Destroy
#endif
                    }},
                    {"running", new MemberRegisterInfo { Name = "running", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Subsystem_Wrap.G_running
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SubsystemDescriptor_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"id", new MemberRegisterInfo { Name = "id", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SubsystemDescriptor_Wrap.G_id, PropertySetter = UnityEngine_SubsystemDescriptor_Wrap.S_id
#endif
                    }},
                    {"subsystemImplementationType", new MemberRegisterInfo { Name = "subsystemImplementationType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SubsystemDescriptor_Wrap.G_subsystemImplementationType, PropertySetter = UnityEngine_SubsystemDescriptor_Wrap.S_subsystemImplementationType
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SubsystemManager_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"add_beforeReloadSubsystems_static", new MemberRegisterInfo { Name = "add_beforeReloadSubsystems", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SubsystemManager_Wrap.A_beforeReloadSubsystems
#endif
                    }},
                    {"remove_beforeReloadSubsystems_static", new MemberRegisterInfo { Name = "remove_beforeReloadSubsystems", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SubsystemManager_Wrap.R_beforeReloadSubsystems
#endif
                    }},
                    {"add_afterReloadSubsystems_static", new MemberRegisterInfo { Name = "add_afterReloadSubsystems", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SubsystemManager_Wrap.A_afterReloadSubsystems
#endif
                    }},
                    {"remove_afterReloadSubsystems_static", new MemberRegisterInfo { Name = "remove_afterReloadSubsystems", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SubsystemManager_Wrap.R_afterReloadSubsystems
#endif
                    }},
                    {"add_reloadSubsytemsStarted_static", new MemberRegisterInfo { Name = "add_reloadSubsytemsStarted", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SubsystemManager_Wrap.A_reloadSubsytemsStarted
#endif
                    }},
                    {"remove_reloadSubsytemsStarted_static", new MemberRegisterInfo { Name = "remove_reloadSubsytemsStarted", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SubsystemManager_Wrap.R_reloadSubsytemsStarted
#endif
                    }},
                    {"add_reloadSubsytemsCompleted_static", new MemberRegisterInfo { Name = "add_reloadSubsytemsCompleted", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SubsystemManager_Wrap.A_reloadSubsytemsCompleted
#endif
                    }},
                    {"remove_reloadSubsytemsCompleted_static", new MemberRegisterInfo { Name = "remove_reloadSubsytemsCompleted", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SubsystemManager_Wrap.R_reloadSubsytemsCompleted
#endif
                    }},
                    {"GetAllSubsystemDescriptors_static", new MemberRegisterInfo { Name = "GetAllSubsystemDescriptors", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_SubsystemManager_Wrap.F_GetAllSubsystemDescriptors
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Terrain_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Terrain_Wrap.Constructor
#endif
                    }},
                    {"GetClosestReflectionProbes", new MemberRegisterInfo { Name = "GetClosestReflectionProbes", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Terrain_Wrap.M_GetClosestReflectionProbes
#endif
                    }},
                    {"SampleHeight", new MemberRegisterInfo { Name = "SampleHeight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Terrain_Wrap.M_SampleHeight
#endif
                    }},
                    {"AddTreeInstance", new MemberRegisterInfo { Name = "AddTreeInstance", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Terrain_Wrap.M_AddTreeInstance
#endif
                    }},
                    {"SetNeighbors", new MemberRegisterInfo { Name = "SetNeighbors", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Terrain_Wrap.M_SetNeighbors
#endif
                    }},
                    {"GetPosition", new MemberRegisterInfo { Name = "GetPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Terrain_Wrap.M_GetPosition
#endif
                    }},
                    {"Flush", new MemberRegisterInfo { Name = "Flush", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Terrain_Wrap.M_Flush
#endif
                    }},
                    {"SetSplatMaterialPropertyBlock", new MemberRegisterInfo { Name = "SetSplatMaterialPropertyBlock", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Terrain_Wrap.M_SetSplatMaterialPropertyBlock
#endif
                    }},
                    {"GetSplatMaterialPropertyBlock", new MemberRegisterInfo { Name = "GetSplatMaterialPropertyBlock", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Terrain_Wrap.M_GetSplatMaterialPropertyBlock
#endif
                    }},
                    {"UpdateGIMaterials", new MemberRegisterInfo { Name = "UpdateGIMaterials", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Terrain_Wrap.M_UpdateGIMaterials
#endif
                    }},
                    {"terrainData", new MemberRegisterInfo { Name = "terrainData", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_terrainData, PropertySetter = UnityEngine_Terrain_Wrap.S_terrainData
#endif
                    }},
                    {"treeDistance", new MemberRegisterInfo { Name = "treeDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_treeDistance, PropertySetter = UnityEngine_Terrain_Wrap.S_treeDistance
#endif
                    }},
                    {"treeBillboardDistance", new MemberRegisterInfo { Name = "treeBillboardDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_treeBillboardDistance, PropertySetter = UnityEngine_Terrain_Wrap.S_treeBillboardDistance
#endif
                    }},
                    {"treeCrossFadeLength", new MemberRegisterInfo { Name = "treeCrossFadeLength", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_treeCrossFadeLength, PropertySetter = UnityEngine_Terrain_Wrap.S_treeCrossFadeLength
#endif
                    }},
                    {"treeMaximumFullLODCount", new MemberRegisterInfo { Name = "treeMaximumFullLODCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_treeMaximumFullLODCount, PropertySetter = UnityEngine_Terrain_Wrap.S_treeMaximumFullLODCount
#endif
                    }},
                    {"detailObjectDistance", new MemberRegisterInfo { Name = "detailObjectDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_detailObjectDistance, PropertySetter = UnityEngine_Terrain_Wrap.S_detailObjectDistance
#endif
                    }},
                    {"detailObjectDensity", new MemberRegisterInfo { Name = "detailObjectDensity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_detailObjectDensity, PropertySetter = UnityEngine_Terrain_Wrap.S_detailObjectDensity
#endif
                    }},
                    {"heightmapPixelError", new MemberRegisterInfo { Name = "heightmapPixelError", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_heightmapPixelError, PropertySetter = UnityEngine_Terrain_Wrap.S_heightmapPixelError
#endif
                    }},
                    {"heightmapMaximumLOD", new MemberRegisterInfo { Name = "heightmapMaximumLOD", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_heightmapMaximumLOD, PropertySetter = UnityEngine_Terrain_Wrap.S_heightmapMaximumLOD
#endif
                    }},
                    {"basemapDistance", new MemberRegisterInfo { Name = "basemapDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_basemapDistance, PropertySetter = UnityEngine_Terrain_Wrap.S_basemapDistance
#endif
                    }},
                    {"lightmapIndex", new MemberRegisterInfo { Name = "lightmapIndex", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_lightmapIndex, PropertySetter = UnityEngine_Terrain_Wrap.S_lightmapIndex
#endif
                    }},
                    {"realtimeLightmapIndex", new MemberRegisterInfo { Name = "realtimeLightmapIndex", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_realtimeLightmapIndex, PropertySetter = UnityEngine_Terrain_Wrap.S_realtimeLightmapIndex
#endif
                    }},
                    {"lightmapScaleOffset", new MemberRegisterInfo { Name = "lightmapScaleOffset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_lightmapScaleOffset, PropertySetter = UnityEngine_Terrain_Wrap.S_lightmapScaleOffset
#endif
                    }},
                    {"realtimeLightmapScaleOffset", new MemberRegisterInfo { Name = "realtimeLightmapScaleOffset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_realtimeLightmapScaleOffset, PropertySetter = UnityEngine_Terrain_Wrap.S_realtimeLightmapScaleOffset
#endif
                    }},
                    {"freeUnusedRenderingResources", new MemberRegisterInfo { Name = "freeUnusedRenderingResources", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_freeUnusedRenderingResources, PropertySetter = UnityEngine_Terrain_Wrap.S_freeUnusedRenderingResources
#endif
                    }},
                    {"shadowCastingMode", new MemberRegisterInfo { Name = "shadowCastingMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_shadowCastingMode, PropertySetter = UnityEngine_Terrain_Wrap.S_shadowCastingMode
#endif
                    }},
                    {"reflectionProbeUsage", new MemberRegisterInfo { Name = "reflectionProbeUsage", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_reflectionProbeUsage, PropertySetter = UnityEngine_Terrain_Wrap.S_reflectionProbeUsage
#endif
                    }},
                    {"materialTemplate", new MemberRegisterInfo { Name = "materialTemplate", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_materialTemplate, PropertySetter = UnityEngine_Terrain_Wrap.S_materialTemplate
#endif
                    }},
                    {"drawHeightmap", new MemberRegisterInfo { Name = "drawHeightmap", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_drawHeightmap, PropertySetter = UnityEngine_Terrain_Wrap.S_drawHeightmap
#endif
                    }},
                    {"allowAutoConnect", new MemberRegisterInfo { Name = "allowAutoConnect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_allowAutoConnect, PropertySetter = UnityEngine_Terrain_Wrap.S_allowAutoConnect
#endif
                    }},
                    {"groupingID", new MemberRegisterInfo { Name = "groupingID", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_groupingID, PropertySetter = UnityEngine_Terrain_Wrap.S_groupingID
#endif
                    }},
                    {"drawInstanced", new MemberRegisterInfo { Name = "drawInstanced", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_drawInstanced, PropertySetter = UnityEngine_Terrain_Wrap.S_drawInstanced
#endif
                    }},
                    {"normalmapTexture", new MemberRegisterInfo { Name = "normalmapTexture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_normalmapTexture
#endif
                    }},
                    {"drawTreesAndFoliage", new MemberRegisterInfo { Name = "drawTreesAndFoliage", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_drawTreesAndFoliage, PropertySetter = UnityEngine_Terrain_Wrap.S_drawTreesAndFoliage
#endif
                    }},
                    {"patchBoundsMultiplier", new MemberRegisterInfo { Name = "patchBoundsMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_patchBoundsMultiplier, PropertySetter = UnityEngine_Terrain_Wrap.S_patchBoundsMultiplier
#endif
                    }},
                    {"treeLODBiasMultiplier", new MemberRegisterInfo { Name = "treeLODBiasMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_treeLODBiasMultiplier, PropertySetter = UnityEngine_Terrain_Wrap.S_treeLODBiasMultiplier
#endif
                    }},
                    {"collectDetailPatches", new MemberRegisterInfo { Name = "collectDetailPatches", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_collectDetailPatches, PropertySetter = UnityEngine_Terrain_Wrap.S_collectDetailPatches
#endif
                    }},
                    {"editorRenderFlags", new MemberRegisterInfo { Name = "editorRenderFlags", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_editorRenderFlags, PropertySetter = UnityEngine_Terrain_Wrap.S_editorRenderFlags
#endif
                    }},
                    {"bakeLightProbesForTrees", new MemberRegisterInfo { Name = "bakeLightProbesForTrees", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"deringLightProbesForTrees", new MemberRegisterInfo { Name = "deringLightProbesForTrees", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"preserveTreePrototypeLayers", new MemberRegisterInfo { Name = "preserveTreePrototypeLayers", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_preserveTreePrototypeLayers, PropertySetter = UnityEngine_Terrain_Wrap.S_preserveTreePrototypeLayers
#endif
                    }},
                    {"leftNeighbor", new MemberRegisterInfo { Name = "leftNeighbor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_leftNeighbor
#endif
                    }},
                    {"rightNeighbor", new MemberRegisterInfo { Name = "rightNeighbor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_rightNeighbor
#endif
                    }},
                    {"topNeighbor", new MemberRegisterInfo { Name = "topNeighbor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_topNeighbor
#endif
                    }},
                    {"bottomNeighbor", new MemberRegisterInfo { Name = "bottomNeighbor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_bottomNeighbor
#endif
                    }},
                    {"renderingLayerMask", new MemberRegisterInfo { Name = "renderingLayerMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_renderingLayerMask, PropertySetter = UnityEngine_Terrain_Wrap.S_renderingLayerMask
#endif
                    }},
                    {"SetConnectivityDirty_static", new MemberRegisterInfo { Name = "SetConnectivityDirty", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Terrain_Wrap.F_SetConnectivityDirty
#endif
                    }},
                    {"CreateTerrainGameObject_static", new MemberRegisterInfo { Name = "CreateTerrainGameObject", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Terrain_Wrap.F_CreateTerrainGameObject
#endif
                    }},
                    {"heightmapFormat_static", new MemberRegisterInfo { Name = "heightmapFormat", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_heightmapFormat
#endif
                    }},
                    {"heightmapTextureFormat_static", new MemberRegisterInfo { Name = "heightmapTextureFormat", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_heightmapTextureFormat
#endif
                    }},
                    {"heightmapRenderTextureFormat_static", new MemberRegisterInfo { Name = "heightmapRenderTextureFormat", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_heightmapRenderTextureFormat
#endif
                    }},
                    {"normalmapFormat_static", new MemberRegisterInfo { Name = "normalmapFormat", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_normalmapFormat
#endif
                    }},
                    {"normalmapTextureFormat_static", new MemberRegisterInfo { Name = "normalmapTextureFormat", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_normalmapTextureFormat
#endif
                    }},
                    {"normalmapRenderTextureFormat_static", new MemberRegisterInfo { Name = "normalmapRenderTextureFormat", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_normalmapRenderTextureFormat
#endif
                    }},
                    {"holesFormat_static", new MemberRegisterInfo { Name = "holesFormat", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_holesFormat
#endif
                    }},
                    {"holesRenderTextureFormat_static", new MemberRegisterInfo { Name = "holesRenderTextureFormat", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_holesRenderTextureFormat
#endif
                    }},
                    {"compressedHolesFormat_static", new MemberRegisterInfo { Name = "compressedHolesFormat", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_compressedHolesFormat
#endif
                    }},
                    {"compressedHolesTextureFormat_static", new MemberRegisterInfo { Name = "compressedHolesTextureFormat", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_compressedHolesTextureFormat
#endif
                    }},
                    {"activeTerrain_static", new MemberRegisterInfo { Name = "activeTerrain", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_activeTerrain
#endif
                    }},
                    {"activeTerrains_static", new MemberRegisterInfo { Name = "activeTerrains", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Terrain_Wrap.G_activeTerrains
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_TerrainExtensions_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"UpdateGIMaterials_static", new MemberRegisterInfo { Name = "UpdateGIMaterials", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TerrainExtensions_Wrap.F_UpdateGIMaterials
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Tree_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Tree_Wrap.Constructor
#endif
                    }},
                    {"data", new MemberRegisterInfo { Name = "data", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Tree_Wrap.G_data, PropertySetter = UnityEngine_Tree_Wrap.S_data
#endif
                    }},
                    {"hasSpeedTreeWind", new MemberRegisterInfo { Name = "hasSpeedTreeWind", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Tree_Wrap.G_hasSpeedTreeWind
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_TreePrototype_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_TreePrototype_Wrap.Constructor
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TreePrototype_Wrap.M_Equals
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TreePrototype_Wrap.M_GetHashCode
#endif
                    }},
                    {"prefab", new MemberRegisterInfo { Name = "prefab", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TreePrototype_Wrap.G_prefab, PropertySetter = UnityEngine_TreePrototype_Wrap.S_prefab
#endif
                    }},
                    {"bendFactor", new MemberRegisterInfo { Name = "bendFactor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TreePrototype_Wrap.G_bendFactor, PropertySetter = UnityEngine_TreePrototype_Wrap.S_bendFactor
#endif
                    }},
                    {"navMeshLod", new MemberRegisterInfo { Name = "navMeshLod", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TreePrototype_Wrap.G_navMeshLod, PropertySetter = UnityEngine_TreePrototype_Wrap.S_navMeshLod
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_DetailPrototype_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_DetailPrototype_Wrap.Constructor
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_DetailPrototype_Wrap.M_Equals
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_DetailPrototype_Wrap.M_GetHashCode
#endif
                    }},
                    {"Validate", new MemberRegisterInfo { Name = "Validate", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_DetailPrototype_Wrap.M_Validate
#endif
                    }},
                    {"prototype", new MemberRegisterInfo { Name = "prototype", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_DetailPrototype_Wrap.G_prototype, PropertySetter = UnityEngine_DetailPrototype_Wrap.S_prototype
#endif
                    }},
                    {"prototypeTexture", new MemberRegisterInfo { Name = "prototypeTexture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_DetailPrototype_Wrap.G_prototypeTexture, PropertySetter = UnityEngine_DetailPrototype_Wrap.S_prototypeTexture
#endif
                    }},
                    {"minWidth", new MemberRegisterInfo { Name = "minWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_DetailPrototype_Wrap.G_minWidth, PropertySetter = UnityEngine_DetailPrototype_Wrap.S_minWidth
#endif
                    }},
                    {"maxWidth", new MemberRegisterInfo { Name = "maxWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_DetailPrototype_Wrap.G_maxWidth, PropertySetter = UnityEngine_DetailPrototype_Wrap.S_maxWidth
#endif
                    }},
                    {"minHeight", new MemberRegisterInfo { Name = "minHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_DetailPrototype_Wrap.G_minHeight, PropertySetter = UnityEngine_DetailPrototype_Wrap.S_minHeight
#endif
                    }},
                    {"maxHeight", new MemberRegisterInfo { Name = "maxHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_DetailPrototype_Wrap.G_maxHeight, PropertySetter = UnityEngine_DetailPrototype_Wrap.S_maxHeight
#endif
                    }},
                    {"noiseSpread", new MemberRegisterInfo { Name = "noiseSpread", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_DetailPrototype_Wrap.G_noiseSpread, PropertySetter = UnityEngine_DetailPrototype_Wrap.S_noiseSpread
#endif
                    }},
                    {"holeEdgePadding", new MemberRegisterInfo { Name = "holeEdgePadding", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_DetailPrototype_Wrap.G_holeEdgePadding, PropertySetter = UnityEngine_DetailPrototype_Wrap.S_holeEdgePadding
#endif
                    }},
                    {"healthyColor", new MemberRegisterInfo { Name = "healthyColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_DetailPrototype_Wrap.G_healthyColor, PropertySetter = UnityEngine_DetailPrototype_Wrap.S_healthyColor
#endif
                    }},
                    {"dryColor", new MemberRegisterInfo { Name = "dryColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_DetailPrototype_Wrap.G_dryColor, PropertySetter = UnityEngine_DetailPrototype_Wrap.S_dryColor
#endif
                    }},
                    {"renderMode", new MemberRegisterInfo { Name = "renderMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_DetailPrototype_Wrap.G_renderMode, PropertySetter = UnityEngine_DetailPrototype_Wrap.S_renderMode
#endif
                    }},
                    {"usePrototypeMesh", new MemberRegisterInfo { Name = "usePrototypeMesh", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_DetailPrototype_Wrap.G_usePrototypeMesh, PropertySetter = UnityEngine_DetailPrototype_Wrap.S_usePrototypeMesh
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_SplatPrototype_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_SplatPrototype_Wrap.Constructor
#endif
                    }},
                    {"texture", new MemberRegisterInfo { Name = "texture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SplatPrototype_Wrap.G_texture, PropertySetter = UnityEngine_SplatPrototype_Wrap.S_texture
#endif
                    }},
                    {"normalMap", new MemberRegisterInfo { Name = "normalMap", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SplatPrototype_Wrap.G_normalMap, PropertySetter = UnityEngine_SplatPrototype_Wrap.S_normalMap
#endif
                    }},
                    {"tileSize", new MemberRegisterInfo { Name = "tileSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SplatPrototype_Wrap.G_tileSize, PropertySetter = UnityEngine_SplatPrototype_Wrap.S_tileSize
#endif
                    }},
                    {"tileOffset", new MemberRegisterInfo { Name = "tileOffset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SplatPrototype_Wrap.G_tileOffset, PropertySetter = UnityEngine_SplatPrototype_Wrap.S_tileOffset
#endif
                    }},
                    {"specular", new MemberRegisterInfo { Name = "specular", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SplatPrototype_Wrap.G_specular, PropertySetter = UnityEngine_SplatPrototype_Wrap.S_specular
#endif
                    }},
                    {"metallic", new MemberRegisterInfo { Name = "metallic", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SplatPrototype_Wrap.G_metallic, PropertySetter = UnityEngine_SplatPrototype_Wrap.S_metallic
#endif
                    }},
                    {"smoothness", new MemberRegisterInfo { Name = "smoothness", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_SplatPrototype_Wrap.G_smoothness, PropertySetter = UnityEngine_SplatPrototype_Wrap.S_smoothness
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_TreeInstance_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_TreeInstance_Wrap.Constructor
#endif
                    }},
                    {"position", new MemberRegisterInfo { Name = "position", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TreeInstance_Wrap.G_position, PropertySetter = UnityEngine_TreeInstance_Wrap.S_position
#endif
                    }},
                    {"widthScale", new MemberRegisterInfo { Name = "widthScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TreeInstance_Wrap.G_widthScale, PropertySetter = UnityEngine_TreeInstance_Wrap.S_widthScale
#endif
                    }},
                    {"heightScale", new MemberRegisterInfo { Name = "heightScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TreeInstance_Wrap.G_heightScale, PropertySetter = UnityEngine_TreeInstance_Wrap.S_heightScale
#endif
                    }},
                    {"rotation", new MemberRegisterInfo { Name = "rotation", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TreeInstance_Wrap.G_rotation, PropertySetter = UnityEngine_TreeInstance_Wrap.S_rotation
#endif
                    }},
                    {"color", new MemberRegisterInfo { Name = "color", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TreeInstance_Wrap.G_color, PropertySetter = UnityEngine_TreeInstance_Wrap.S_color
#endif
                    }},
                    {"lightmapColor", new MemberRegisterInfo { Name = "lightmapColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TreeInstance_Wrap.G_lightmapColor, PropertySetter = UnityEngine_TreeInstance_Wrap.S_lightmapColor
#endif
                    }},
                    {"prototypeIndex", new MemberRegisterInfo { Name = "prototypeIndex", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TreeInstance_Wrap.G_prototypeIndex, PropertySetter = UnityEngine_TreeInstance_Wrap.S_prototypeIndex
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_PatchExtents_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_PatchExtents_Wrap.Constructor
#endif
                    }},
                    {"min", new MemberRegisterInfo { Name = "min", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PatchExtents_Wrap.G_min, PropertySetter = UnityEngine_PatchExtents_Wrap.S_min
#endif
                    }},
                    {"max", new MemberRegisterInfo { Name = "max", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_PatchExtents_Wrap.G_max, PropertySetter = UnityEngine_PatchExtents_Wrap.S_max
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_TerrainLayer_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_TerrainLayer_Wrap.Constructor
#endif
                    }},
                    {"diffuseTexture", new MemberRegisterInfo { Name = "diffuseTexture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TerrainLayer_Wrap.G_diffuseTexture, PropertySetter = UnityEngine_TerrainLayer_Wrap.S_diffuseTexture
#endif
                    }},
                    {"normalMapTexture", new MemberRegisterInfo { Name = "normalMapTexture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TerrainLayer_Wrap.G_normalMapTexture, PropertySetter = UnityEngine_TerrainLayer_Wrap.S_normalMapTexture
#endif
                    }},
                    {"maskMapTexture", new MemberRegisterInfo { Name = "maskMapTexture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TerrainLayer_Wrap.G_maskMapTexture, PropertySetter = UnityEngine_TerrainLayer_Wrap.S_maskMapTexture
#endif
                    }},
                    {"tileSize", new MemberRegisterInfo { Name = "tileSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TerrainLayer_Wrap.G_tileSize, PropertySetter = UnityEngine_TerrainLayer_Wrap.S_tileSize
#endif
                    }},
                    {"tileOffset", new MemberRegisterInfo { Name = "tileOffset", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TerrainLayer_Wrap.G_tileOffset, PropertySetter = UnityEngine_TerrainLayer_Wrap.S_tileOffset
#endif
                    }},
                    {"specular", new MemberRegisterInfo { Name = "specular", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TerrainLayer_Wrap.G_specular, PropertySetter = UnityEngine_TerrainLayer_Wrap.S_specular
#endif
                    }},
                    {"metallic", new MemberRegisterInfo { Name = "metallic", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TerrainLayer_Wrap.G_metallic, PropertySetter = UnityEngine_TerrainLayer_Wrap.S_metallic
#endif
                    }},
                    {"smoothness", new MemberRegisterInfo { Name = "smoothness", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TerrainLayer_Wrap.G_smoothness, PropertySetter = UnityEngine_TerrainLayer_Wrap.S_smoothness
#endif
                    }},
                    {"normalScale", new MemberRegisterInfo { Name = "normalScale", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TerrainLayer_Wrap.G_normalScale, PropertySetter = UnityEngine_TerrainLayer_Wrap.S_normalScale
#endif
                    }},
                    {"diffuseRemapMin", new MemberRegisterInfo { Name = "diffuseRemapMin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TerrainLayer_Wrap.G_diffuseRemapMin, PropertySetter = UnityEngine_TerrainLayer_Wrap.S_diffuseRemapMin
#endif
                    }},
                    {"diffuseRemapMax", new MemberRegisterInfo { Name = "diffuseRemapMax", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TerrainLayer_Wrap.G_diffuseRemapMax, PropertySetter = UnityEngine_TerrainLayer_Wrap.S_diffuseRemapMax
#endif
                    }},
                    {"maskMapRemapMin", new MemberRegisterInfo { Name = "maskMapRemapMin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TerrainLayer_Wrap.G_maskMapRemapMin, PropertySetter = UnityEngine_TerrainLayer_Wrap.S_maskMapRemapMin
#endif
                    }},
                    {"maskMapRemapMax", new MemberRegisterInfo { Name = "maskMapRemapMax", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TerrainLayer_Wrap.G_maskMapRemapMax, PropertySetter = UnityEngine_TerrainLayer_Wrap.S_maskMapRemapMax
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_TerrainCollider_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_TerrainCollider_Wrap.Constructor
#endif
                    }},
                    {"terrainData", new MemberRegisterInfo { Name = "terrainData", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TerrainCollider_Wrap.G_terrainData, PropertySetter = UnityEngine_TerrainCollider_Wrap.S_terrainData
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_TextGenerationSettings_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_TextGenerationSettings_Wrap.Constructor
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextGenerationSettings_Wrap.M_Equals
#endif
                    }},
                    {"font", new MemberRegisterInfo { Name = "font", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerationSettings_Wrap.G_font, PropertySetter = UnityEngine_TextGenerationSettings_Wrap.S_font
#endif
                    }},
                    {"color", new MemberRegisterInfo { Name = "color", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerationSettings_Wrap.G_color, PropertySetter = UnityEngine_TextGenerationSettings_Wrap.S_color
#endif
                    }},
                    {"fontSize", new MemberRegisterInfo { Name = "fontSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerationSettings_Wrap.G_fontSize, PropertySetter = UnityEngine_TextGenerationSettings_Wrap.S_fontSize
#endif
                    }},
                    {"lineSpacing", new MemberRegisterInfo { Name = "lineSpacing", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerationSettings_Wrap.G_lineSpacing, PropertySetter = UnityEngine_TextGenerationSettings_Wrap.S_lineSpacing
#endif
                    }},
                    {"richText", new MemberRegisterInfo { Name = "richText", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerationSettings_Wrap.G_richText, PropertySetter = UnityEngine_TextGenerationSettings_Wrap.S_richText
#endif
                    }},
                    {"scaleFactor", new MemberRegisterInfo { Name = "scaleFactor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerationSettings_Wrap.G_scaleFactor, PropertySetter = UnityEngine_TextGenerationSettings_Wrap.S_scaleFactor
#endif
                    }},
                    {"fontStyle", new MemberRegisterInfo { Name = "fontStyle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerationSettings_Wrap.G_fontStyle, PropertySetter = UnityEngine_TextGenerationSettings_Wrap.S_fontStyle
#endif
                    }},
                    {"textAnchor", new MemberRegisterInfo { Name = "textAnchor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerationSettings_Wrap.G_textAnchor, PropertySetter = UnityEngine_TextGenerationSettings_Wrap.S_textAnchor
#endif
                    }},
                    {"alignByGeometry", new MemberRegisterInfo { Name = "alignByGeometry", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerationSettings_Wrap.G_alignByGeometry, PropertySetter = UnityEngine_TextGenerationSettings_Wrap.S_alignByGeometry
#endif
                    }},
                    {"resizeTextForBestFit", new MemberRegisterInfo { Name = "resizeTextForBestFit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerationSettings_Wrap.G_resizeTextForBestFit, PropertySetter = UnityEngine_TextGenerationSettings_Wrap.S_resizeTextForBestFit
#endif
                    }},
                    {"resizeTextMinSize", new MemberRegisterInfo { Name = "resizeTextMinSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerationSettings_Wrap.G_resizeTextMinSize, PropertySetter = UnityEngine_TextGenerationSettings_Wrap.S_resizeTextMinSize
#endif
                    }},
                    {"resizeTextMaxSize", new MemberRegisterInfo { Name = "resizeTextMaxSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerationSettings_Wrap.G_resizeTextMaxSize, PropertySetter = UnityEngine_TextGenerationSettings_Wrap.S_resizeTextMaxSize
#endif
                    }},
                    {"updateBounds", new MemberRegisterInfo { Name = "updateBounds", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerationSettings_Wrap.G_updateBounds, PropertySetter = UnityEngine_TextGenerationSettings_Wrap.S_updateBounds
#endif
                    }},
                    {"verticalOverflow", new MemberRegisterInfo { Name = "verticalOverflow", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerationSettings_Wrap.G_verticalOverflow, PropertySetter = UnityEngine_TextGenerationSettings_Wrap.S_verticalOverflow
#endif
                    }},
                    {"horizontalOverflow", new MemberRegisterInfo { Name = "horizontalOverflow", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerationSettings_Wrap.G_horizontalOverflow, PropertySetter = UnityEngine_TextGenerationSettings_Wrap.S_horizontalOverflow
#endif
                    }},
                    {"generationExtents", new MemberRegisterInfo { Name = "generationExtents", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerationSettings_Wrap.G_generationExtents, PropertySetter = UnityEngine_TextGenerationSettings_Wrap.S_generationExtents
#endif
                    }},
                    {"pivot", new MemberRegisterInfo { Name = "pivot", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerationSettings_Wrap.G_pivot, PropertySetter = UnityEngine_TextGenerationSettings_Wrap.S_pivot
#endif
                    }},
                    {"generateOutOfBounds", new MemberRegisterInfo { Name = "generateOutOfBounds", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerationSettings_Wrap.G_generateOutOfBounds, PropertySetter = UnityEngine_TextGenerationSettings_Wrap.S_generateOutOfBounds
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_TextGenerator_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_TextGenerator_Wrap.Constructor
#endif
                    }},
                    {"Invalidate", new MemberRegisterInfo { Name = "Invalidate", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextGenerator_Wrap.M_Invalidate
#endif
                    }},
                    {"GetCharacters", new MemberRegisterInfo { Name = "GetCharacters", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextGenerator_Wrap.M_GetCharacters
#endif
                    }},
                    {"GetLines", new MemberRegisterInfo { Name = "GetLines", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextGenerator_Wrap.M_GetLines
#endif
                    }},
                    {"GetVertices", new MemberRegisterInfo { Name = "GetVertices", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextGenerator_Wrap.M_GetVertices
#endif
                    }},
                    {"GetPreferredWidth", new MemberRegisterInfo { Name = "GetPreferredWidth", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextGenerator_Wrap.M_GetPreferredWidth
#endif
                    }},
                    {"GetPreferredHeight", new MemberRegisterInfo { Name = "GetPreferredHeight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextGenerator_Wrap.M_GetPreferredHeight
#endif
                    }},
                    {"PopulateWithErrors", new MemberRegisterInfo { Name = "PopulateWithErrors", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextGenerator_Wrap.M_PopulateWithErrors
#endif
                    }},
                    {"Populate", new MemberRegisterInfo { Name = "Populate", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextGenerator_Wrap.M_Populate
#endif
                    }},
                    {"GetVerticesArray", new MemberRegisterInfo { Name = "GetVerticesArray", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextGenerator_Wrap.M_GetVerticesArray
#endif
                    }},
                    {"GetCharactersArray", new MemberRegisterInfo { Name = "GetCharactersArray", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextGenerator_Wrap.M_GetCharactersArray
#endif
                    }},
                    {"GetLinesArray", new MemberRegisterInfo { Name = "GetLinesArray", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_TextGenerator_Wrap.M_GetLinesArray
#endif
                    }},
                    {"characterCountVisible", new MemberRegisterInfo { Name = "characterCountVisible", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerator_Wrap.G_characterCountVisible
#endif
                    }},
                    {"verts", new MemberRegisterInfo { Name = "verts", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerator_Wrap.G_verts
#endif
                    }},
                    {"characters", new MemberRegisterInfo { Name = "characters", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerator_Wrap.G_characters
#endif
                    }},
                    {"lines", new MemberRegisterInfo { Name = "lines", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerator_Wrap.G_lines
#endif
                    }},
                    {"rectExtents", new MemberRegisterInfo { Name = "rectExtents", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerator_Wrap.G_rectExtents
#endif
                    }},
                    {"vertexCount", new MemberRegisterInfo { Name = "vertexCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerator_Wrap.G_vertexCount
#endif
                    }},
                    {"characterCount", new MemberRegisterInfo { Name = "characterCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerator_Wrap.G_characterCount
#endif
                    }},
                    {"lineCount", new MemberRegisterInfo { Name = "lineCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerator_Wrap.G_lineCount
#endif
                    }},
                    {"fontSizeUsedForBestFit", new MemberRegisterInfo { Name = "fontSizeUsedForBestFit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextGenerator_Wrap.G_fontSizeUsedForBestFit
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_TextMesh_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_TextMesh_Wrap.Constructor
#endif
                    }},
                    {"text", new MemberRegisterInfo { Name = "text", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextMesh_Wrap.G_text, PropertySetter = UnityEngine_TextMesh_Wrap.S_text
#endif
                    }},
                    {"font", new MemberRegisterInfo { Name = "font", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextMesh_Wrap.G_font, PropertySetter = UnityEngine_TextMesh_Wrap.S_font
#endif
                    }},
                    {"fontSize", new MemberRegisterInfo { Name = "fontSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextMesh_Wrap.G_fontSize, PropertySetter = UnityEngine_TextMesh_Wrap.S_fontSize
#endif
                    }},
                    {"fontStyle", new MemberRegisterInfo { Name = "fontStyle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextMesh_Wrap.G_fontStyle, PropertySetter = UnityEngine_TextMesh_Wrap.S_fontStyle
#endif
                    }},
                    {"offsetZ", new MemberRegisterInfo { Name = "offsetZ", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextMesh_Wrap.G_offsetZ, PropertySetter = UnityEngine_TextMesh_Wrap.S_offsetZ
#endif
                    }},
                    {"alignment", new MemberRegisterInfo { Name = "alignment", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextMesh_Wrap.G_alignment, PropertySetter = UnityEngine_TextMesh_Wrap.S_alignment
#endif
                    }},
                    {"anchor", new MemberRegisterInfo { Name = "anchor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextMesh_Wrap.G_anchor, PropertySetter = UnityEngine_TextMesh_Wrap.S_anchor
#endif
                    }},
                    {"characterSize", new MemberRegisterInfo { Name = "characterSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextMesh_Wrap.G_characterSize, PropertySetter = UnityEngine_TextMesh_Wrap.S_characterSize
#endif
                    }},
                    {"lineSpacing", new MemberRegisterInfo { Name = "lineSpacing", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextMesh_Wrap.G_lineSpacing, PropertySetter = UnityEngine_TextMesh_Wrap.S_lineSpacing
#endif
                    }},
                    {"tabSize", new MemberRegisterInfo { Name = "tabSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextMesh_Wrap.G_tabSize, PropertySetter = UnityEngine_TextMesh_Wrap.S_tabSize
#endif
                    }},
                    {"richText", new MemberRegisterInfo { Name = "richText", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextMesh_Wrap.G_richText, PropertySetter = UnityEngine_TextMesh_Wrap.S_richText
#endif
                    }},
                    {"color", new MemberRegisterInfo { Name = "color", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_TextMesh_Wrap.G_color, PropertySetter = UnityEngine_TextMesh_Wrap.S_color
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CharacterInfo_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_CharacterInfo_Wrap.Constructor
#endif
                    }},
                    {"advance", new MemberRegisterInfo { Name = "advance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterInfo_Wrap.G_advance, PropertySetter = UnityEngine_CharacterInfo_Wrap.S_advance
#endif
                    }},
                    {"glyphWidth", new MemberRegisterInfo { Name = "glyphWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterInfo_Wrap.G_glyphWidth, PropertySetter = UnityEngine_CharacterInfo_Wrap.S_glyphWidth
#endif
                    }},
                    {"glyphHeight", new MemberRegisterInfo { Name = "glyphHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterInfo_Wrap.G_glyphHeight, PropertySetter = UnityEngine_CharacterInfo_Wrap.S_glyphHeight
#endif
                    }},
                    {"bearing", new MemberRegisterInfo { Name = "bearing", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterInfo_Wrap.G_bearing, PropertySetter = UnityEngine_CharacterInfo_Wrap.S_bearing
#endif
                    }},
                    {"minY", new MemberRegisterInfo { Name = "minY", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterInfo_Wrap.G_minY, PropertySetter = UnityEngine_CharacterInfo_Wrap.S_minY
#endif
                    }},
                    {"maxY", new MemberRegisterInfo { Name = "maxY", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterInfo_Wrap.G_maxY, PropertySetter = UnityEngine_CharacterInfo_Wrap.S_maxY
#endif
                    }},
                    {"minX", new MemberRegisterInfo { Name = "minX", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterInfo_Wrap.G_minX, PropertySetter = UnityEngine_CharacterInfo_Wrap.S_minX
#endif
                    }},
                    {"maxX", new MemberRegisterInfo { Name = "maxX", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterInfo_Wrap.G_maxX, PropertySetter = UnityEngine_CharacterInfo_Wrap.S_maxX
#endif
                    }},
                    {"uvBottomLeft", new MemberRegisterInfo { Name = "uvBottomLeft", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterInfo_Wrap.G_uvBottomLeft, PropertySetter = UnityEngine_CharacterInfo_Wrap.S_uvBottomLeft
#endif
                    }},
                    {"uvBottomRight", new MemberRegisterInfo { Name = "uvBottomRight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterInfo_Wrap.G_uvBottomRight, PropertySetter = UnityEngine_CharacterInfo_Wrap.S_uvBottomRight
#endif
                    }},
                    {"uvTopRight", new MemberRegisterInfo { Name = "uvTopRight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterInfo_Wrap.G_uvTopRight, PropertySetter = UnityEngine_CharacterInfo_Wrap.S_uvTopRight
#endif
                    }},
                    {"uvTopLeft", new MemberRegisterInfo { Name = "uvTopLeft", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterInfo_Wrap.G_uvTopLeft, PropertySetter = UnityEngine_CharacterInfo_Wrap.S_uvTopLeft
#endif
                    }},
                    {"index", new MemberRegisterInfo { Name = "index", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterInfo_Wrap.G_index, PropertySetter = UnityEngine_CharacterInfo_Wrap.S_index
#endif
                    }},
                    {"size", new MemberRegisterInfo { Name = "size", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterInfo_Wrap.G_size, PropertySetter = UnityEngine_CharacterInfo_Wrap.S_size
#endif
                    }},
                    {"style", new MemberRegisterInfo { Name = "style", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CharacterInfo_Wrap.G_style, PropertySetter = UnityEngine_CharacterInfo_Wrap.S_style
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UICharInfo_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UICharInfo_Wrap.Constructor
#endif
                    }},
                    {"cursorPos", new MemberRegisterInfo { Name = "cursorPos", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UICharInfo_Wrap.G_cursorPos, PropertySetter = UnityEngine_UICharInfo_Wrap.S_cursorPos
#endif
                    }},
                    {"charWidth", new MemberRegisterInfo { Name = "charWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UICharInfo_Wrap.G_charWidth, PropertySetter = UnityEngine_UICharInfo_Wrap.S_charWidth
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UILineInfo_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UILineInfo_Wrap.Constructor
#endif
                    }},
                    {"startCharIdx", new MemberRegisterInfo { Name = "startCharIdx", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UILineInfo_Wrap.G_startCharIdx, PropertySetter = UnityEngine_UILineInfo_Wrap.S_startCharIdx
#endif
                    }},
                    {"height", new MemberRegisterInfo { Name = "height", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UILineInfo_Wrap.G_height, PropertySetter = UnityEngine_UILineInfo_Wrap.S_height
#endif
                    }},
                    {"topY", new MemberRegisterInfo { Name = "topY", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UILineInfo_Wrap.G_topY, PropertySetter = UnityEngine_UILineInfo_Wrap.S_topY
#endif
                    }},
                    {"leading", new MemberRegisterInfo { Name = "leading", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UILineInfo_Wrap.G_leading, PropertySetter = UnityEngine_UILineInfo_Wrap.S_leading
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UIVertex_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UIVertex_Wrap.Constructor
#endif
                    }},
                    {"position", new MemberRegisterInfo { Name = "position", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UIVertex_Wrap.G_position, PropertySetter = UnityEngine_UIVertex_Wrap.S_position
#endif
                    }},
                    {"normal", new MemberRegisterInfo { Name = "normal", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UIVertex_Wrap.G_normal, PropertySetter = UnityEngine_UIVertex_Wrap.S_normal
#endif
                    }},
                    {"tangent", new MemberRegisterInfo { Name = "tangent", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UIVertex_Wrap.G_tangent, PropertySetter = UnityEngine_UIVertex_Wrap.S_tangent
#endif
                    }},
                    {"color", new MemberRegisterInfo { Name = "color", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UIVertex_Wrap.G_color, PropertySetter = UnityEngine_UIVertex_Wrap.S_color
#endif
                    }},
                    {"uv0", new MemberRegisterInfo { Name = "uv0", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UIVertex_Wrap.G_uv0, PropertySetter = UnityEngine_UIVertex_Wrap.S_uv0
#endif
                    }},
                    {"uv1", new MemberRegisterInfo { Name = "uv1", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UIVertex_Wrap.G_uv1, PropertySetter = UnityEngine_UIVertex_Wrap.S_uv1
#endif
                    }},
                    {"uv2", new MemberRegisterInfo { Name = "uv2", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UIVertex_Wrap.G_uv2, PropertySetter = UnityEngine_UIVertex_Wrap.S_uv2
#endif
                    }},
                    {"uv3", new MemberRegisterInfo { Name = "uv3", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UIVertex_Wrap.G_uv3, PropertySetter = UnityEngine_UIVertex_Wrap.S_uv3
#endif
                    }},
                    {"simpleVert_static", new MemberRegisterInfo { Name = "simpleVert", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UIVertex_Wrap.G_simpleVert, PropertySetter = UnityEngine_UIVertex_Wrap.S_simpleVert
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_Font_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_Font_Wrap.Constructor
#endif
                    }},
                    {"HasCharacter", new MemberRegisterInfo { Name = "HasCharacter", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Font_Wrap.M_HasCharacter
#endif
                    }},
                    {"GetCharacterInfo", new MemberRegisterInfo { Name = "GetCharacterInfo", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Font_Wrap.M_GetCharacterInfo
#endif
                    }},
                    {"RequestCharactersInTexture", new MemberRegisterInfo { Name = "RequestCharactersInTexture", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Font_Wrap.M_RequestCharactersInTexture
#endif
                    }},
                    {"add_textureRebuilt_static", new MemberRegisterInfo { Name = "add_textureRebuilt", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Font_Wrap.A_textureRebuilt
#endif
                    }},
                    {"remove_textureRebuilt_static", new MemberRegisterInfo { Name = "remove_textureRebuilt", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Font_Wrap.R_textureRebuilt
#endif
                    }},
                    {"material", new MemberRegisterInfo { Name = "material", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Font_Wrap.G_material, PropertySetter = UnityEngine_Font_Wrap.S_material
#endif
                    }},
                    {"fontNames", new MemberRegisterInfo { Name = "fontNames", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Font_Wrap.G_fontNames, PropertySetter = UnityEngine_Font_Wrap.S_fontNames
#endif
                    }},
                    {"dynamic", new MemberRegisterInfo { Name = "dynamic", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Font_Wrap.G_dynamic
#endif
                    }},
                    {"ascent", new MemberRegisterInfo { Name = "ascent", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Font_Wrap.G_ascent
#endif
                    }},
                    {"fontSize", new MemberRegisterInfo { Name = "fontSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Font_Wrap.G_fontSize
#endif
                    }},
                    {"characterInfo", new MemberRegisterInfo { Name = "characterInfo", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Font_Wrap.G_characterInfo, PropertySetter = UnityEngine_Font_Wrap.S_characterInfo
#endif
                    }},
                    {"lineHeight", new MemberRegisterInfo { Name = "lineHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_Font_Wrap.G_lineHeight
#endif
                    }},
                    {"CreateDynamicFontFromOSFont_static", new MemberRegisterInfo { Name = "CreateDynamicFontFromOSFont", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Font_Wrap.F_CreateDynamicFontFromOSFont
#endif
                    }},
                    {"GetMaxVertsForString_static", new MemberRegisterInfo { Name = "GetMaxVertsForString", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Font_Wrap.F_GetMaxVertsForString
#endif
                    }},
                    {"GetOSInstalledFontNames_static", new MemberRegisterInfo { Name = "GetOSInstalledFontNames", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Font_Wrap.F_GetOSInstalledFontNames
#endif
                    }},
                    {"GetPathsToOSFonts_static", new MemberRegisterInfo { Name = "GetPathsToOSFonts", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_Font_Wrap.F_GetPathsToOSFonts
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CustomGridBrushAttribute_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_CustomGridBrushAttribute_Wrap.Constructor
#endif
                    }},
                    {"hideAssetInstances", new MemberRegisterInfo { Name = "hideAssetInstances", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomGridBrushAttribute_Wrap.G_hideAssetInstances
#endif
                    }},
                    {"hideDefaultInstance", new MemberRegisterInfo { Name = "hideDefaultInstance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomGridBrushAttribute_Wrap.G_hideDefaultInstance
#endif
                    }},
                    {"defaultBrush", new MemberRegisterInfo { Name = "defaultBrush", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomGridBrushAttribute_Wrap.G_defaultBrush
#endif
                    }},
                    {"defaultName", new MemberRegisterInfo { Name = "defaultName", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CustomGridBrushAttribute_Wrap.G_defaultName
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_GridBrushBase_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"Paint", new MemberRegisterInfo { Name = "Paint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridBrushBase_Wrap.M_Paint
#endif
                    }},
                    {"Erase", new MemberRegisterInfo { Name = "Erase", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridBrushBase_Wrap.M_Erase
#endif
                    }},
                    {"BoxFill", new MemberRegisterInfo { Name = "BoxFill", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridBrushBase_Wrap.M_BoxFill
#endif
                    }},
                    {"BoxErase", new MemberRegisterInfo { Name = "BoxErase", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridBrushBase_Wrap.M_BoxErase
#endif
                    }},
                    {"Select", new MemberRegisterInfo { Name = "Select", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridBrushBase_Wrap.M_Select
#endif
                    }},
                    {"FloodFill", new MemberRegisterInfo { Name = "FloodFill", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridBrushBase_Wrap.M_FloodFill
#endif
                    }},
                    {"Rotate", new MemberRegisterInfo { Name = "Rotate", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridBrushBase_Wrap.M_Rotate
#endif
                    }},
                    {"Flip", new MemberRegisterInfo { Name = "Flip", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridBrushBase_Wrap.M_Flip
#endif
                    }},
                    {"Pick", new MemberRegisterInfo { Name = "Pick", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridBrushBase_Wrap.M_Pick
#endif
                    }},
                    {"Move", new MemberRegisterInfo { Name = "Move", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridBrushBase_Wrap.M_Move
#endif
                    }},
                    {"MoveStart", new MemberRegisterInfo { Name = "MoveStart", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridBrushBase_Wrap.M_MoveStart
#endif
                    }},
                    {"MoveEnd", new MemberRegisterInfo { Name = "MoveEnd", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridBrushBase_Wrap.M_MoveEnd
#endif
                    }},
                    {"ChangeZPosition", new MemberRegisterInfo { Name = "ChangeZPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridBrushBase_Wrap.M_ChangeZPosition
#endif
                    }},
                    {"ResetZPosition", new MemberRegisterInfo { Name = "ResetZPosition", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_GridBrushBase_Wrap.M_ResetZPosition
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_ICanvasRaycastFilter_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"IsRaycastLocationValid", new MemberRegisterInfo { Name = "IsRaycastLocationValid", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_ICanvasRaycastFilter_Wrap.M_IsRaycastLocationValid
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CanvasGroup_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_CanvasGroup_Wrap.Constructor
#endif
                    }},
                    {"IsRaycastLocationValid", new MemberRegisterInfo { Name = "IsRaycastLocationValid", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CanvasGroup_Wrap.M_IsRaycastLocationValid
#endif
                    }},
                    {"alpha", new MemberRegisterInfo { Name = "alpha", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CanvasGroup_Wrap.G_alpha, PropertySetter = UnityEngine_CanvasGroup_Wrap.S_alpha
#endif
                    }},
                    {"interactable", new MemberRegisterInfo { Name = "interactable", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CanvasGroup_Wrap.G_interactable, PropertySetter = UnityEngine_CanvasGroup_Wrap.S_interactable
#endif
                    }},
                    {"blocksRaycasts", new MemberRegisterInfo { Name = "blocksRaycasts", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CanvasGroup_Wrap.G_blocksRaycasts, PropertySetter = UnityEngine_CanvasGroup_Wrap.S_blocksRaycasts
#endif
                    }},
                    {"ignoreParentGroups", new MemberRegisterInfo { Name = "ignoreParentGroups", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CanvasGroup_Wrap.G_ignoreParentGroups, PropertySetter = UnityEngine_CanvasGroup_Wrap.S_ignoreParentGroups
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_CanvasRenderer_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_CanvasRenderer_Wrap.Constructor
#endif
                    }},
                    {"SetColor", new MemberRegisterInfo { Name = "SetColor", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CanvasRenderer_Wrap.M_SetColor
#endif
                    }},
                    {"GetColor", new MemberRegisterInfo { Name = "GetColor", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CanvasRenderer_Wrap.M_GetColor
#endif
                    }},
                    {"EnableRectClipping", new MemberRegisterInfo { Name = "EnableRectClipping", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CanvasRenderer_Wrap.M_EnableRectClipping
#endif
                    }},
                    {"DisableRectClipping", new MemberRegisterInfo { Name = "DisableRectClipping", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CanvasRenderer_Wrap.M_DisableRectClipping
#endif
                    }},
                    {"SetMaterial", new MemberRegisterInfo { Name = "SetMaterial", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CanvasRenderer_Wrap.M_SetMaterial
#endif
                    }},
                    {"GetMaterial", new MemberRegisterInfo { Name = "GetMaterial", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CanvasRenderer_Wrap.M_GetMaterial
#endif
                    }},
                    {"SetPopMaterial", new MemberRegisterInfo { Name = "SetPopMaterial", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CanvasRenderer_Wrap.M_SetPopMaterial
#endif
                    }},
                    {"GetPopMaterial", new MemberRegisterInfo { Name = "GetPopMaterial", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CanvasRenderer_Wrap.M_GetPopMaterial
#endif
                    }},
                    {"SetTexture", new MemberRegisterInfo { Name = "SetTexture", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CanvasRenderer_Wrap.M_SetTexture
#endif
                    }},
                    {"SetAlphaTexture", new MemberRegisterInfo { Name = "SetAlphaTexture", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CanvasRenderer_Wrap.M_SetAlphaTexture
#endif
                    }},
                    {"SetMesh", new MemberRegisterInfo { Name = "SetMesh", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CanvasRenderer_Wrap.M_SetMesh
#endif
                    }},
                    {"Clear", new MemberRegisterInfo { Name = "Clear", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CanvasRenderer_Wrap.M_Clear
#endif
                    }},
                    {"GetAlpha", new MemberRegisterInfo { Name = "GetAlpha", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CanvasRenderer_Wrap.M_GetAlpha
#endif
                    }},
                    {"SetAlpha", new MemberRegisterInfo { Name = "SetAlpha", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CanvasRenderer_Wrap.M_SetAlpha
#endif
                    }},
                    {"GetInheritedAlpha", new MemberRegisterInfo { Name = "GetInheritedAlpha", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CanvasRenderer_Wrap.M_GetInheritedAlpha
#endif
                    }},
                    {"add_onRequestRebuild_static", new MemberRegisterInfo { Name = "add_onRequestRebuild", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"remove_onRequestRebuild_static", new MemberRegisterInfo { Name = "remove_onRequestRebuild", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"hasPopInstruction", new MemberRegisterInfo { Name = "hasPopInstruction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CanvasRenderer_Wrap.G_hasPopInstruction, PropertySetter = UnityEngine_CanvasRenderer_Wrap.S_hasPopInstruction
#endif
                    }},
                    {"materialCount", new MemberRegisterInfo { Name = "materialCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CanvasRenderer_Wrap.G_materialCount, PropertySetter = UnityEngine_CanvasRenderer_Wrap.S_materialCount
#endif
                    }},
                    {"popMaterialCount", new MemberRegisterInfo { Name = "popMaterialCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CanvasRenderer_Wrap.G_popMaterialCount, PropertySetter = UnityEngine_CanvasRenderer_Wrap.S_popMaterialCount
#endif
                    }},
                    {"absoluteDepth", new MemberRegisterInfo { Name = "absoluteDepth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CanvasRenderer_Wrap.G_absoluteDepth
#endif
                    }},
                    {"hasMoved", new MemberRegisterInfo { Name = "hasMoved", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CanvasRenderer_Wrap.G_hasMoved
#endif
                    }},
                    {"cullTransparentMesh", new MemberRegisterInfo { Name = "cullTransparentMesh", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CanvasRenderer_Wrap.G_cullTransparentMesh, PropertySetter = UnityEngine_CanvasRenderer_Wrap.S_cullTransparentMesh
#endif
                    }},
                    {"hasRectClipping", new MemberRegisterInfo { Name = "hasRectClipping", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CanvasRenderer_Wrap.G_hasRectClipping
#endif
                    }},
                    {"relativeDepth", new MemberRegisterInfo { Name = "relativeDepth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CanvasRenderer_Wrap.G_relativeDepth
#endif
                    }},
                    {"cull", new MemberRegisterInfo { Name = "cull", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CanvasRenderer_Wrap.G_cull, PropertySetter = UnityEngine_CanvasRenderer_Wrap.S_cull
#endif
                    }},
                    {"clippingSoftness", new MemberRegisterInfo { Name = "clippingSoftness", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_CanvasRenderer_Wrap.G_clippingSoftness, PropertySetter = UnityEngine_CanvasRenderer_Wrap.S_clippingSoftness
#endif
                    }},
                    {"SplitUIVertexStreams_static", new MemberRegisterInfo { Name = "SplitUIVertexStreams", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CanvasRenderer_Wrap.F_SplitUIVertexStreams
#endif
                    }},
                    {"CreateUIVertexStream_static", new MemberRegisterInfo { Name = "CreateUIVertexStream", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CanvasRenderer_Wrap.F_CreateUIVertexStream
#endif
                    }},
                    {"AddUIVertexStream_static", new MemberRegisterInfo { Name = "AddUIVertexStream", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_CanvasRenderer_Wrap.F_AddUIVertexStream
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RectTransformUtility_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"PixelAdjustPoint_static", new MemberRegisterInfo { Name = "PixelAdjustPoint", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectTransformUtility_Wrap.F_PixelAdjustPoint
#endif
                    }},
                    {"PixelAdjustRect_static", new MemberRegisterInfo { Name = "PixelAdjustRect", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectTransformUtility_Wrap.F_PixelAdjustRect
#endif
                    }},
                    {"RectangleContainsScreenPoint_static", new MemberRegisterInfo { Name = "RectangleContainsScreenPoint", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectTransformUtility_Wrap.F_RectangleContainsScreenPoint
#endif
                    }},
                    {"ScreenPointToWorldPointInRectangle_static", new MemberRegisterInfo { Name = "ScreenPointToWorldPointInRectangle", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectTransformUtility_Wrap.F_ScreenPointToWorldPointInRectangle
#endif
                    }},
                    {"ScreenPointToLocalPointInRectangle_static", new MemberRegisterInfo { Name = "ScreenPointToLocalPointInRectangle", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectTransformUtility_Wrap.F_ScreenPointToLocalPointInRectangle
#endif
                    }},
                    {"ScreenPointToRay_static", new MemberRegisterInfo { Name = "ScreenPointToRay", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectTransformUtility_Wrap.F_ScreenPointToRay
#endif
                    }},
                    {"WorldToScreenPoint_static", new MemberRegisterInfo { Name = "WorldToScreenPoint", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectTransformUtility_Wrap.F_WorldToScreenPoint
#endif
                    }},
                    {"CalculateRelativeRectTransformBounds_static", new MemberRegisterInfo { Name = "CalculateRelativeRectTransformBounds", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectTransformUtility_Wrap.F_CalculateRelativeRectTransformBounds
#endif
                    }},
                    {"FlipLayoutOnAxis_static", new MemberRegisterInfo { Name = "FlipLayoutOnAxis", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectTransformUtility_Wrap.F_FlipLayoutOnAxis
#endif
                    }},
                    {"FlipLayoutAxes_static", new MemberRegisterInfo { Name = "FlipLayoutAxes", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RectTransformUtility_Wrap.F_FlipLayoutAxes
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UISystemProfilerApi_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"BeginSample_static", new MemberRegisterInfo { Name = "BeginSample", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UISystemProfilerApi_Wrap.F_BeginSample
#endif
                    }},
                    {"EndSample_static", new MemberRegisterInfo { Name = "EndSample", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UISystemProfilerApi_Wrap.F_EndSample
#endif
                    }},
                    {"AddMarker_static", new MemberRegisterInfo { Name = "AddMarker", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UISystemProfilerApi_Wrap.F_AddMarker
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UIWidgetsInternal_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UIWidgetsInternal_Wrap.Constructor
#endif
                    }},
                    {"CreateBindableRenderTexture_static", new MemberRegisterInfo { Name = "CreateBindableRenderTexture", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UIWidgetsInternal_Wrap.F_CreateBindableRenderTexture
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RemoteSettings_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"add_Updated_static", new MemberRegisterInfo { Name = "add_Updated", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteSettings_Wrap.A_Updated
#endif
                    }},
                    {"remove_Updated_static", new MemberRegisterInfo { Name = "remove_Updated", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteSettings_Wrap.R_Updated
#endif
                    }},
                    {"add_BeforeFetchFromServer_static", new MemberRegisterInfo { Name = "add_BeforeFetchFromServer", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteSettings_Wrap.A_BeforeFetchFromServer
#endif
                    }},
                    {"remove_BeforeFetchFromServer_static", new MemberRegisterInfo { Name = "remove_BeforeFetchFromServer", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteSettings_Wrap.R_BeforeFetchFromServer
#endif
                    }},
                    {"add_Completed_static", new MemberRegisterInfo { Name = "add_Completed", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteSettings_Wrap.A_Completed
#endif
                    }},
                    {"remove_Completed_static", new MemberRegisterInfo { Name = "remove_Completed", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteSettings_Wrap.R_Completed
#endif
                    }},
                    {"ForceUpdate_static", new MemberRegisterInfo { Name = "ForceUpdate", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteSettings_Wrap.F_ForceUpdate
#endif
                    }},
                    {"WasLastUpdatedFromServer_static", new MemberRegisterInfo { Name = "WasLastUpdatedFromServer", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteSettings_Wrap.F_WasLastUpdatedFromServer
#endif
                    }},
                    {"GetInt_static", new MemberRegisterInfo { Name = "GetInt", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteSettings_Wrap.F_GetInt
#endif
                    }},
                    {"GetLong_static", new MemberRegisterInfo { Name = "GetLong", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteSettings_Wrap.F_GetLong
#endif
                    }},
                    {"GetFloat_static", new MemberRegisterInfo { Name = "GetFloat", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteSettings_Wrap.F_GetFloat
#endif
                    }},
                    {"GetString_static", new MemberRegisterInfo { Name = "GetString", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteSettings_Wrap.F_GetString
#endif
                    }},
                    {"GetBool_static", new MemberRegisterInfo { Name = "GetBool", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteSettings_Wrap.F_GetBool
#endif
                    }},
                    {"HasKey_static", new MemberRegisterInfo { Name = "HasKey", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteSettings_Wrap.F_HasKey
#endif
                    }},
                    {"GetCount_static", new MemberRegisterInfo { Name = "GetCount", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteSettings_Wrap.F_GetCount
#endif
                    }},
                    {"GetKeys_static", new MemberRegisterInfo { Name = "GetKeys", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteSettings_Wrap.F_GetKeys
#endif
                    }},
                    {"GetObject_static", new MemberRegisterInfo { Name = "GetObject", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteSettings_Wrap.F_GetObject
#endif
                    }},
                    {"GetDictionary_static", new MemberRegisterInfo { Name = "GetDictionary", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteSettings_Wrap.F_GetDictionary
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_RemoteConfigSettings_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_RemoteConfigSettings_Wrap.Constructor
#endif
                    }},
                    {"Dispose", new MemberRegisterInfo { Name = "Dispose", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteConfigSettings_Wrap.M_Dispose
#endif
                    }},
                    {"ForceUpdate", new MemberRegisterInfo { Name = "ForceUpdate", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteConfigSettings_Wrap.M_ForceUpdate
#endif
                    }},
                    {"WasLastUpdatedFromServer", new MemberRegisterInfo { Name = "WasLastUpdatedFromServer", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteConfigSettings_Wrap.M_WasLastUpdatedFromServer
#endif
                    }},
                    {"GetInt", new MemberRegisterInfo { Name = "GetInt", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteConfigSettings_Wrap.M_GetInt
#endif
                    }},
                    {"GetLong", new MemberRegisterInfo { Name = "GetLong", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteConfigSettings_Wrap.M_GetLong
#endif
                    }},
                    {"GetFloat", new MemberRegisterInfo { Name = "GetFloat", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteConfigSettings_Wrap.M_GetFloat
#endif
                    }},
                    {"GetString", new MemberRegisterInfo { Name = "GetString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteConfigSettings_Wrap.M_GetString
#endif
                    }},
                    {"GetBool", new MemberRegisterInfo { Name = "GetBool", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteConfigSettings_Wrap.M_GetBool
#endif
                    }},
                    {"HasKey", new MemberRegisterInfo { Name = "HasKey", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteConfigSettings_Wrap.M_HasKey
#endif
                    }},
                    {"GetCount", new MemberRegisterInfo { Name = "GetCount", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteConfigSettings_Wrap.M_GetCount
#endif
                    }},
                    {"GetKeys", new MemberRegisterInfo { Name = "GetKeys", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteConfigSettings_Wrap.M_GetKeys
#endif
                    }},
                    {"GetObject", new MemberRegisterInfo { Name = "GetObject", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteConfigSettings_Wrap.M_GetObject
#endif
                    }},
                    {"GetDictionary", new MemberRegisterInfo { Name = "GetDictionary", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteConfigSettings_Wrap.M_GetDictionary
#endif
                    }},
                    {"add_Updated", new MemberRegisterInfo { Name = "add_Updated", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteConfigSettings_Wrap.A_Updated
#endif
                    }},
                    {"remove_Updated", new MemberRegisterInfo { Name = "remove_Updated", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteConfigSettings_Wrap.R_Updated
#endif
                    }},
                    {"QueueConfig_static", new MemberRegisterInfo { Name = "QueueConfig", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteConfigSettings_Wrap.F_QueueConfig
#endif
                    }},
                    {"SendDeviceInfoInConfigRequest_static", new MemberRegisterInfo { Name = "SendDeviceInfoInConfigRequest", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteConfigSettings_Wrap.F_SendDeviceInfoInConfigRequest
#endif
                    }},
                    {"AddSessionTag_static", new MemberRegisterInfo { Name = "AddSessionTag", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_RemoteConfigSettings_Wrap.F_AddSessionTag
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_WWWForm_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_WWWForm_Wrap.Constructor
#endif
                    }},
                    {"AddField", new MemberRegisterInfo { Name = "AddField", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_WWWForm_Wrap.M_AddField
#endif
                    }},
                    {"AddBinaryData", new MemberRegisterInfo { Name = "AddBinaryData", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_WWWForm_Wrap.M_AddBinaryData
#endif
                    }},
                    {"headers", new MemberRegisterInfo { Name = "headers", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WWWForm_Wrap.G_headers
#endif
                    }},
                    {"data", new MemberRegisterInfo { Name = "data", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WWWForm_Wrap.G_data
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_WWWAudioExtensions_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_WheelHit_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_WheelHit_Wrap.Constructor
#endif
                    }},
                    {"collider", new MemberRegisterInfo { Name = "collider", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelHit_Wrap.G_collider, PropertySetter = UnityEngine_WheelHit_Wrap.S_collider
#endif
                    }},
                    {"point", new MemberRegisterInfo { Name = "point", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelHit_Wrap.G_point, PropertySetter = UnityEngine_WheelHit_Wrap.S_point
#endif
                    }},
                    {"normal", new MemberRegisterInfo { Name = "normal", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelHit_Wrap.G_normal, PropertySetter = UnityEngine_WheelHit_Wrap.S_normal
#endif
                    }},
                    {"forwardDir", new MemberRegisterInfo { Name = "forwardDir", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelHit_Wrap.G_forwardDir, PropertySetter = UnityEngine_WheelHit_Wrap.S_forwardDir
#endif
                    }},
                    {"sidewaysDir", new MemberRegisterInfo { Name = "sidewaysDir", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelHit_Wrap.G_sidewaysDir, PropertySetter = UnityEngine_WheelHit_Wrap.S_sidewaysDir
#endif
                    }},
                    {"force", new MemberRegisterInfo { Name = "force", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelHit_Wrap.G_force, PropertySetter = UnityEngine_WheelHit_Wrap.S_force
#endif
                    }},
                    {"forwardSlip", new MemberRegisterInfo { Name = "forwardSlip", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelHit_Wrap.G_forwardSlip, PropertySetter = UnityEngine_WheelHit_Wrap.S_forwardSlip
#endif
                    }},
                    {"sidewaysSlip", new MemberRegisterInfo { Name = "sidewaysSlip", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelHit_Wrap.G_sidewaysSlip, PropertySetter = UnityEngine_WheelHit_Wrap.S_sidewaysSlip
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_WheelCollider_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_WheelCollider_Wrap.Constructor
#endif
                    }},
                    {"ResetSprungMasses", new MemberRegisterInfo { Name = "ResetSprungMasses", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_WheelCollider_Wrap.M_ResetSprungMasses
#endif
                    }},
                    {"ConfigureVehicleSubsteps", new MemberRegisterInfo { Name = "ConfigureVehicleSubsteps", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_WheelCollider_Wrap.M_ConfigureVehicleSubsteps
#endif
                    }},
                    {"GetWorldPose", new MemberRegisterInfo { Name = "GetWorldPose", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_WheelCollider_Wrap.M_GetWorldPose
#endif
                    }},
                    {"GetGroundHit", new MemberRegisterInfo { Name = "GetGroundHit", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_WheelCollider_Wrap.M_GetGroundHit
#endif
                    }},
                    {"center", new MemberRegisterInfo { Name = "center", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelCollider_Wrap.G_center, PropertySetter = UnityEngine_WheelCollider_Wrap.S_center
#endif
                    }},
                    {"radius", new MemberRegisterInfo { Name = "radius", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelCollider_Wrap.G_radius, PropertySetter = UnityEngine_WheelCollider_Wrap.S_radius
#endif
                    }},
                    {"suspensionDistance", new MemberRegisterInfo { Name = "suspensionDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelCollider_Wrap.G_suspensionDistance, PropertySetter = UnityEngine_WheelCollider_Wrap.S_suspensionDistance
#endif
                    }},
                    {"suspensionSpring", new MemberRegisterInfo { Name = "suspensionSpring", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelCollider_Wrap.G_suspensionSpring, PropertySetter = UnityEngine_WheelCollider_Wrap.S_suspensionSpring
#endif
                    }},
                    {"suspensionExpansionLimited", new MemberRegisterInfo { Name = "suspensionExpansionLimited", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelCollider_Wrap.G_suspensionExpansionLimited, PropertySetter = UnityEngine_WheelCollider_Wrap.S_suspensionExpansionLimited
#endif
                    }},
                    {"forceAppPointDistance", new MemberRegisterInfo { Name = "forceAppPointDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelCollider_Wrap.G_forceAppPointDistance, PropertySetter = UnityEngine_WheelCollider_Wrap.S_forceAppPointDistance
#endif
                    }},
                    {"mass", new MemberRegisterInfo { Name = "mass", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelCollider_Wrap.G_mass, PropertySetter = UnityEngine_WheelCollider_Wrap.S_mass
#endif
                    }},
                    {"wheelDampingRate", new MemberRegisterInfo { Name = "wheelDampingRate", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelCollider_Wrap.G_wheelDampingRate, PropertySetter = UnityEngine_WheelCollider_Wrap.S_wheelDampingRate
#endif
                    }},
                    {"forwardFriction", new MemberRegisterInfo { Name = "forwardFriction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelCollider_Wrap.G_forwardFriction, PropertySetter = UnityEngine_WheelCollider_Wrap.S_forwardFriction
#endif
                    }},
                    {"sidewaysFriction", new MemberRegisterInfo { Name = "sidewaysFriction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelCollider_Wrap.G_sidewaysFriction, PropertySetter = UnityEngine_WheelCollider_Wrap.S_sidewaysFriction
#endif
                    }},
                    {"motorTorque", new MemberRegisterInfo { Name = "motorTorque", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelCollider_Wrap.G_motorTorque, PropertySetter = UnityEngine_WheelCollider_Wrap.S_motorTorque
#endif
                    }},
                    {"brakeTorque", new MemberRegisterInfo { Name = "brakeTorque", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelCollider_Wrap.G_brakeTorque, PropertySetter = UnityEngine_WheelCollider_Wrap.S_brakeTorque
#endif
                    }},
                    {"steerAngle", new MemberRegisterInfo { Name = "steerAngle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelCollider_Wrap.G_steerAngle, PropertySetter = UnityEngine_WheelCollider_Wrap.S_steerAngle
#endif
                    }},
                    {"isGrounded", new MemberRegisterInfo { Name = "isGrounded", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelCollider_Wrap.G_isGrounded
#endif
                    }},
                    {"rpm", new MemberRegisterInfo { Name = "rpm", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelCollider_Wrap.G_rpm
#endif
                    }},
                    {"sprungMass", new MemberRegisterInfo { Name = "sprungMass", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WheelCollider_Wrap.G_sprungMass, PropertySetter = UnityEngine_WheelCollider_Wrap.S_sprungMass
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_WindZone_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_WindZone_Wrap.Constructor
#endif
                    }},
                    {"mode", new MemberRegisterInfo { Name = "mode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WindZone_Wrap.G_mode, PropertySetter = UnityEngine_WindZone_Wrap.S_mode
#endif
                    }},
                    {"radius", new MemberRegisterInfo { Name = "radius", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WindZone_Wrap.G_radius, PropertySetter = UnityEngine_WindZone_Wrap.S_radius
#endif
                    }},
                    {"windMain", new MemberRegisterInfo { Name = "windMain", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WindZone_Wrap.G_windMain, PropertySetter = UnityEngine_WindZone_Wrap.S_windMain
#endif
                    }},
                    {"windTurbulence", new MemberRegisterInfo { Name = "windTurbulence", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WindZone_Wrap.G_windTurbulence, PropertySetter = UnityEngine_WindZone_Wrap.S_windTurbulence
#endif
                    }},
                    {"windPulseMagnitude", new MemberRegisterInfo { Name = "windPulseMagnitude", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WindZone_Wrap.G_windPulseMagnitude, PropertySetter = UnityEngine_WindZone_Wrap.S_windPulseMagnitude
#endif
                    }},
                    {"windPulseFrequency", new MemberRegisterInfo { Name = "windPulseFrequency", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_WindZone_Wrap.G_windPulseFrequency, PropertySetter = UnityEngine_WindZone_Wrap.S_windPulseFrequency
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_System_Threading_Tasks_TaskExtensions_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"Unwrap_static", new MemberRegisterInfo { Name = "Unwrap", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = System_Threading_Tasks_TaskExtensions_Wrap.F_Unwrap
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_AnimationTriggers_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UI_AnimationTriggers_Wrap.Constructor
#endif
                    }},
                    {"normalTrigger", new MemberRegisterInfo { Name = "normalTrigger", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_AnimationTriggers_Wrap.G_normalTrigger, PropertySetter = UnityEngine_UI_AnimationTriggers_Wrap.S_normalTrigger
#endif
                    }},
                    {"highlightedTrigger", new MemberRegisterInfo { Name = "highlightedTrigger", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_AnimationTriggers_Wrap.G_highlightedTrigger, PropertySetter = UnityEngine_UI_AnimationTriggers_Wrap.S_highlightedTrigger
#endif
                    }},
                    {"pressedTrigger", new MemberRegisterInfo { Name = "pressedTrigger", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_AnimationTriggers_Wrap.G_pressedTrigger, PropertySetter = UnityEngine_UI_AnimationTriggers_Wrap.S_pressedTrigger
#endif
                    }},
                    {"selectedTrigger", new MemberRegisterInfo { Name = "selectedTrigger", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_AnimationTriggers_Wrap.G_selectedTrigger, PropertySetter = UnityEngine_UI_AnimationTriggers_Wrap.S_selectedTrigger
#endif
                    }},
                    {"disabledTrigger", new MemberRegisterInfo { Name = "disabledTrigger", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_AnimationTriggers_Wrap.G_disabledTrigger, PropertySetter = UnityEngine_UI_AnimationTriggers_Wrap.S_disabledTrigger
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_ICanvasElement_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"Rebuild", new MemberRegisterInfo { Name = "Rebuild", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ICanvasElement_Wrap.M_Rebuild
#endif
                    }},
                    {"LayoutComplete", new MemberRegisterInfo { Name = "LayoutComplete", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ICanvasElement_Wrap.M_LayoutComplete
#endif
                    }},
                    {"GraphicUpdateComplete", new MemberRegisterInfo { Name = "GraphicUpdateComplete", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ICanvasElement_Wrap.M_GraphicUpdateComplete
#endif
                    }},
                    {"IsDestroyed", new MemberRegisterInfo { Name = "IsDestroyed", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ICanvasElement_Wrap.M_IsDestroyed
#endif
                    }},
                    {"transform", new MemberRegisterInfo { Name = "transform", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ICanvasElement_Wrap.G_transform
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_CanvasUpdateRegistry_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"RegisterCanvasElementForLayoutRebuild_static", new MemberRegisterInfo { Name = "RegisterCanvasElementForLayoutRebuild", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_CanvasUpdateRegistry_Wrap.F_RegisterCanvasElementForLayoutRebuild
#endif
                    }},
                    {"TryRegisterCanvasElementForLayoutRebuild_static", new MemberRegisterInfo { Name = "TryRegisterCanvasElementForLayoutRebuild", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_CanvasUpdateRegistry_Wrap.F_TryRegisterCanvasElementForLayoutRebuild
#endif
                    }},
                    {"RegisterCanvasElementForGraphicRebuild_static", new MemberRegisterInfo { Name = "RegisterCanvasElementForGraphicRebuild", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_CanvasUpdateRegistry_Wrap.F_RegisterCanvasElementForGraphicRebuild
#endif
                    }},
                    {"TryRegisterCanvasElementForGraphicRebuild_static", new MemberRegisterInfo { Name = "TryRegisterCanvasElementForGraphicRebuild", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_CanvasUpdateRegistry_Wrap.F_TryRegisterCanvasElementForGraphicRebuild
#endif
                    }},
                    {"UnRegisterCanvasElementForRebuild_static", new MemberRegisterInfo { Name = "UnRegisterCanvasElementForRebuild", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_CanvasUpdateRegistry_Wrap.F_UnRegisterCanvasElementForRebuild
#endif
                    }},
                    {"DisableCanvasElementForRebuild_static", new MemberRegisterInfo { Name = "DisableCanvasElementForRebuild", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_CanvasUpdateRegistry_Wrap.F_DisableCanvasElementForRebuild
#endif
                    }},
                    {"IsRebuildingLayout_static", new MemberRegisterInfo { Name = "IsRebuildingLayout", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_CanvasUpdateRegistry_Wrap.F_IsRebuildingLayout
#endif
                    }},
                    {"IsRebuildingGraphics_static", new MemberRegisterInfo { Name = "IsRebuildingGraphics", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_CanvasUpdateRegistry_Wrap.F_IsRebuildingGraphics
#endif
                    }},
                    {"instance_static", new MemberRegisterInfo { Name = "instance", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_CanvasUpdateRegistry_Wrap.G_instance
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_ColorBlock_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UI_ColorBlock_Wrap.Constructor
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ColorBlock_Wrap.M_Equals
#endif
                    }},
                    {"op_Equality_static", new MemberRegisterInfo { Name = "op_Equality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ColorBlock_Wrap.O_op_Equality
#endif
                    }},
                    {"op_Inequality_static", new MemberRegisterInfo { Name = "op_Inequality", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ColorBlock_Wrap.O_op_Inequality
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ColorBlock_Wrap.M_GetHashCode
#endif
                    }},
                    {"normalColor", new MemberRegisterInfo { Name = "normalColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ColorBlock_Wrap.G_normalColor, PropertySetter = UnityEngine_UI_ColorBlock_Wrap.S_normalColor
#endif
                    }},
                    {"highlightedColor", new MemberRegisterInfo { Name = "highlightedColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ColorBlock_Wrap.G_highlightedColor, PropertySetter = UnityEngine_UI_ColorBlock_Wrap.S_highlightedColor
#endif
                    }},
                    {"pressedColor", new MemberRegisterInfo { Name = "pressedColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ColorBlock_Wrap.G_pressedColor, PropertySetter = UnityEngine_UI_ColorBlock_Wrap.S_pressedColor
#endif
                    }},
                    {"selectedColor", new MemberRegisterInfo { Name = "selectedColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ColorBlock_Wrap.G_selectedColor, PropertySetter = UnityEngine_UI_ColorBlock_Wrap.S_selectedColor
#endif
                    }},
                    {"disabledColor", new MemberRegisterInfo { Name = "disabledColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ColorBlock_Wrap.G_disabledColor, PropertySetter = UnityEngine_UI_ColorBlock_Wrap.S_disabledColor
#endif
                    }},
                    {"colorMultiplier", new MemberRegisterInfo { Name = "colorMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ColorBlock_Wrap.G_colorMultiplier, PropertySetter = UnityEngine_UI_ColorBlock_Wrap.S_colorMultiplier
#endif
                    }},
                    {"fadeDuration", new MemberRegisterInfo { Name = "fadeDuration", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ColorBlock_Wrap.G_fadeDuration, PropertySetter = UnityEngine_UI_ColorBlock_Wrap.S_fadeDuration
#endif
                    }},
                    {"defaultColorBlock_static", new MemberRegisterInfo { Name = "defaultColorBlock", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ColorBlock_Wrap.G_defaultColorBlock, PropertySetter = UnityEngine_UI_ColorBlock_Wrap.S_defaultColorBlock
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_ClipperRegistry_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"Cull", new MemberRegisterInfo { Name = "Cull", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ClipperRegistry_Wrap.M_Cull
#endif
                    }},
                    {"Register_static", new MemberRegisterInfo { Name = "Register", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ClipperRegistry_Wrap.F_Register
#endif
                    }},
                    {"Unregister_static", new MemberRegisterInfo { Name = "Unregister", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ClipperRegistry_Wrap.F_Unregister
#endif
                    }},
                    {"Disable_static", new MemberRegisterInfo { Name = "Disable", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ClipperRegistry_Wrap.F_Disable
#endif
                    }},
                    {"instance_static", new MemberRegisterInfo { Name = "instance", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ClipperRegistry_Wrap.G_instance
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_Clipping_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"FindCullAndClipWorldRect_static", new MemberRegisterInfo { Name = "FindCullAndClipWorldRect", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Clipping_Wrap.F_FindCullAndClipWorldRect
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_IClipper_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"PerformClipping", new MemberRegisterInfo { Name = "PerformClipping", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_IClipper_Wrap.M_PerformClipping
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_IClippable_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"RecalculateClipping", new MemberRegisterInfo { Name = "RecalculateClipping", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_IClippable_Wrap.M_RecalculateClipping
#endif
                    }},
                    {"Cull", new MemberRegisterInfo { Name = "Cull", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_IClippable_Wrap.M_Cull
#endif
                    }},
                    {"SetClipRect", new MemberRegisterInfo { Name = "SetClipRect", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_IClippable_Wrap.M_SetClipRect
#endif
                    }},
                    {"SetClipSoftness", new MemberRegisterInfo { Name = "SetClipSoftness", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_IClippable_Wrap.M_SetClipSoftness
#endif
                    }},
                    {"gameObject", new MemberRegisterInfo { Name = "gameObject", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_IClippable_Wrap.G_gameObject
#endif
                    }},
                    {"rectTransform", new MemberRegisterInfo { Name = "rectTransform", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_IClippable_Wrap.G_rectTransform
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_Dropdown_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"SetValueWithoutNotify", new MemberRegisterInfo { Name = "SetValueWithoutNotify", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Dropdown_Wrap.M_SetValueWithoutNotify
#endif
                    }},
                    {"RefreshShownValue", new MemberRegisterInfo { Name = "RefreshShownValue", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Dropdown_Wrap.M_RefreshShownValue
#endif
                    }},
                    {"AddOptions", new MemberRegisterInfo { Name = "AddOptions", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Dropdown_Wrap.M_AddOptions
#endif
                    }},
                    {"ClearOptions", new MemberRegisterInfo { Name = "ClearOptions", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Dropdown_Wrap.M_ClearOptions
#endif
                    }},
                    {"OnPointerClick", new MemberRegisterInfo { Name = "OnPointerClick", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Dropdown_Wrap.M_OnPointerClick
#endif
                    }},
                    {"OnSubmit", new MemberRegisterInfo { Name = "OnSubmit", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Dropdown_Wrap.M_OnSubmit
#endif
                    }},
                    {"OnCancel", new MemberRegisterInfo { Name = "OnCancel", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Dropdown_Wrap.M_OnCancel
#endif
                    }},
                    {"Show", new MemberRegisterInfo { Name = "Show", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Dropdown_Wrap.M_Show
#endif
                    }},
                    {"Hide", new MemberRegisterInfo { Name = "Hide", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Dropdown_Wrap.M_Hide
#endif
                    }},
                    {"template", new MemberRegisterInfo { Name = "template", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Dropdown_Wrap.G_template, PropertySetter = UnityEngine_UI_Dropdown_Wrap.S_template
#endif
                    }},
                    {"captionText", new MemberRegisterInfo { Name = "captionText", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Dropdown_Wrap.G_captionText, PropertySetter = UnityEngine_UI_Dropdown_Wrap.S_captionText
#endif
                    }},
                    {"captionImage", new MemberRegisterInfo { Name = "captionImage", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Dropdown_Wrap.G_captionImage, PropertySetter = UnityEngine_UI_Dropdown_Wrap.S_captionImage
#endif
                    }},
                    {"itemText", new MemberRegisterInfo { Name = "itemText", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Dropdown_Wrap.G_itemText, PropertySetter = UnityEngine_UI_Dropdown_Wrap.S_itemText
#endif
                    }},
                    {"itemImage", new MemberRegisterInfo { Name = "itemImage", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Dropdown_Wrap.G_itemImage, PropertySetter = UnityEngine_UI_Dropdown_Wrap.S_itemImage
#endif
                    }},
                    {"options", new MemberRegisterInfo { Name = "options", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Dropdown_Wrap.G_options, PropertySetter = UnityEngine_UI_Dropdown_Wrap.S_options
#endif
                    }},
                    {"onValueChanged", new MemberRegisterInfo { Name = "onValueChanged", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Dropdown_Wrap.G_onValueChanged, PropertySetter = UnityEngine_UI_Dropdown_Wrap.S_onValueChanged
#endif
                    }},
                    {"alphaFadeSpeed", new MemberRegisterInfo { Name = "alphaFadeSpeed", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Dropdown_Wrap.G_alphaFadeSpeed, PropertySetter = UnityEngine_UI_Dropdown_Wrap.S_alphaFadeSpeed
#endif
                    }},
                    {"value", new MemberRegisterInfo { Name = "value", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Dropdown_Wrap.G_value, PropertySetter = UnityEngine_UI_Dropdown_Wrap.S_value
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_FontData_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UI_FontData_Wrap.Constructor
#endif
                    }},
                    {"font", new MemberRegisterInfo { Name = "font", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_FontData_Wrap.G_font, PropertySetter = UnityEngine_UI_FontData_Wrap.S_font
#endif
                    }},
                    {"fontSize", new MemberRegisterInfo { Name = "fontSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_FontData_Wrap.G_fontSize, PropertySetter = UnityEngine_UI_FontData_Wrap.S_fontSize
#endif
                    }},
                    {"fontStyle", new MemberRegisterInfo { Name = "fontStyle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_FontData_Wrap.G_fontStyle, PropertySetter = UnityEngine_UI_FontData_Wrap.S_fontStyle
#endif
                    }},
                    {"bestFit", new MemberRegisterInfo { Name = "bestFit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_FontData_Wrap.G_bestFit, PropertySetter = UnityEngine_UI_FontData_Wrap.S_bestFit
#endif
                    }},
                    {"minSize", new MemberRegisterInfo { Name = "minSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_FontData_Wrap.G_minSize, PropertySetter = UnityEngine_UI_FontData_Wrap.S_minSize
#endif
                    }},
                    {"maxSize", new MemberRegisterInfo { Name = "maxSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_FontData_Wrap.G_maxSize, PropertySetter = UnityEngine_UI_FontData_Wrap.S_maxSize
#endif
                    }},
                    {"alignment", new MemberRegisterInfo { Name = "alignment", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_FontData_Wrap.G_alignment, PropertySetter = UnityEngine_UI_FontData_Wrap.S_alignment
#endif
                    }},
                    {"alignByGeometry", new MemberRegisterInfo { Name = "alignByGeometry", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_FontData_Wrap.G_alignByGeometry, PropertySetter = UnityEngine_UI_FontData_Wrap.S_alignByGeometry
#endif
                    }},
                    {"richText", new MemberRegisterInfo { Name = "richText", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_FontData_Wrap.G_richText, PropertySetter = UnityEngine_UI_FontData_Wrap.S_richText
#endif
                    }},
                    {"horizontalOverflow", new MemberRegisterInfo { Name = "horizontalOverflow", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_FontData_Wrap.G_horizontalOverflow, PropertySetter = UnityEngine_UI_FontData_Wrap.S_horizontalOverflow
#endif
                    }},
                    {"verticalOverflow", new MemberRegisterInfo { Name = "verticalOverflow", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_FontData_Wrap.G_verticalOverflow, PropertySetter = UnityEngine_UI_FontData_Wrap.S_verticalOverflow
#endif
                    }},
                    {"lineSpacing", new MemberRegisterInfo { Name = "lineSpacing", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_FontData_Wrap.G_lineSpacing, PropertySetter = UnityEngine_UI_FontData_Wrap.S_lineSpacing
#endif
                    }},
                    {"defaultFontData_static", new MemberRegisterInfo { Name = "defaultFontData", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_FontData_Wrap.G_defaultFontData
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_FontUpdateTracker_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"TrackText_static", new MemberRegisterInfo { Name = "TrackText", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_FontUpdateTracker_Wrap.F_TrackText
#endif
                    }},
                    {"UntrackText_static", new MemberRegisterInfo { Name = "UntrackText", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_FontUpdateTracker_Wrap.F_UntrackText
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_Graphic_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"SetAllDirty", new MemberRegisterInfo { Name = "SetAllDirty", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Graphic_Wrap.M_SetAllDirty
#endif
                    }},
                    {"SetLayoutDirty", new MemberRegisterInfo { Name = "SetLayoutDirty", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Graphic_Wrap.M_SetLayoutDirty
#endif
                    }},
                    {"SetVerticesDirty", new MemberRegisterInfo { Name = "SetVerticesDirty", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Graphic_Wrap.M_SetVerticesDirty
#endif
                    }},
                    {"SetMaterialDirty", new MemberRegisterInfo { Name = "SetMaterialDirty", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Graphic_Wrap.M_SetMaterialDirty
#endif
                    }},
                    {"SetRaycastDirty", new MemberRegisterInfo { Name = "SetRaycastDirty", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Graphic_Wrap.M_SetRaycastDirty
#endif
                    }},
                    {"OnCullingChanged", new MemberRegisterInfo { Name = "OnCullingChanged", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Graphic_Wrap.M_OnCullingChanged
#endif
                    }},
                    {"Rebuild", new MemberRegisterInfo { Name = "Rebuild", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Graphic_Wrap.M_Rebuild
#endif
                    }},
                    {"LayoutComplete", new MemberRegisterInfo { Name = "LayoutComplete", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Graphic_Wrap.M_LayoutComplete
#endif
                    }},
                    {"GraphicUpdateComplete", new MemberRegisterInfo { Name = "GraphicUpdateComplete", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Graphic_Wrap.M_GraphicUpdateComplete
#endif
                    }},
                    {"OnRebuildRequested", new MemberRegisterInfo { Name = "OnRebuildRequested", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"SetNativeSize", new MemberRegisterInfo { Name = "SetNativeSize", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Graphic_Wrap.M_SetNativeSize
#endif
                    }},
                    {"Raycast", new MemberRegisterInfo { Name = "Raycast", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Graphic_Wrap.M_Raycast
#endif
                    }},
                    {"PixelAdjustPoint", new MemberRegisterInfo { Name = "PixelAdjustPoint", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Graphic_Wrap.M_PixelAdjustPoint
#endif
                    }},
                    {"GetPixelAdjustedRect", new MemberRegisterInfo { Name = "GetPixelAdjustedRect", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Graphic_Wrap.M_GetPixelAdjustedRect
#endif
                    }},
                    {"CrossFadeColor", new MemberRegisterInfo { Name = "CrossFadeColor", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Graphic_Wrap.M_CrossFadeColor
#endif
                    }},
                    {"CrossFadeAlpha", new MemberRegisterInfo { Name = "CrossFadeAlpha", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Graphic_Wrap.M_CrossFadeAlpha
#endif
                    }},
                    {"RegisterDirtyLayoutCallback", new MemberRegisterInfo { Name = "RegisterDirtyLayoutCallback", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Graphic_Wrap.M_RegisterDirtyLayoutCallback
#endif
                    }},
                    {"UnregisterDirtyLayoutCallback", new MemberRegisterInfo { Name = "UnregisterDirtyLayoutCallback", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Graphic_Wrap.M_UnregisterDirtyLayoutCallback
#endif
                    }},
                    {"RegisterDirtyVerticesCallback", new MemberRegisterInfo { Name = "RegisterDirtyVerticesCallback", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Graphic_Wrap.M_RegisterDirtyVerticesCallback
#endif
                    }},
                    {"UnregisterDirtyVerticesCallback", new MemberRegisterInfo { Name = "UnregisterDirtyVerticesCallback", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Graphic_Wrap.M_UnregisterDirtyVerticesCallback
#endif
                    }},
                    {"RegisterDirtyMaterialCallback", new MemberRegisterInfo { Name = "RegisterDirtyMaterialCallback", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Graphic_Wrap.M_RegisterDirtyMaterialCallback
#endif
                    }},
                    {"UnregisterDirtyMaterialCallback", new MemberRegisterInfo { Name = "UnregisterDirtyMaterialCallback", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Graphic_Wrap.M_UnregisterDirtyMaterialCallback
#endif
                    }},
                    {"color", new MemberRegisterInfo { Name = "color", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Graphic_Wrap.G_color, PropertySetter = UnityEngine_UI_Graphic_Wrap.S_color
#endif
                    }},
                    {"raycastTarget", new MemberRegisterInfo { Name = "raycastTarget", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Graphic_Wrap.G_raycastTarget, PropertySetter = UnityEngine_UI_Graphic_Wrap.S_raycastTarget
#endif
                    }},
                    {"raycastPadding", new MemberRegisterInfo { Name = "raycastPadding", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Graphic_Wrap.G_raycastPadding, PropertySetter = UnityEngine_UI_Graphic_Wrap.S_raycastPadding
#endif
                    }},
                    {"depth", new MemberRegisterInfo { Name = "depth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Graphic_Wrap.G_depth
#endif
                    }},
                    {"rectTransform", new MemberRegisterInfo { Name = "rectTransform", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Graphic_Wrap.G_rectTransform
#endif
                    }},
                    {"canvas", new MemberRegisterInfo { Name = "canvas", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Graphic_Wrap.G_canvas
#endif
                    }},
                    {"canvasRenderer", new MemberRegisterInfo { Name = "canvasRenderer", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Graphic_Wrap.G_canvasRenderer
#endif
                    }},
                    {"defaultMaterial", new MemberRegisterInfo { Name = "defaultMaterial", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Graphic_Wrap.G_defaultMaterial
#endif
                    }},
                    {"material", new MemberRegisterInfo { Name = "material", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Graphic_Wrap.G_material, PropertySetter = UnityEngine_UI_Graphic_Wrap.S_material
#endif
                    }},
                    {"materialForRendering", new MemberRegisterInfo { Name = "materialForRendering", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Graphic_Wrap.G_materialForRendering
#endif
                    }},
                    {"mainTexture", new MemberRegisterInfo { Name = "mainTexture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Graphic_Wrap.G_mainTexture
#endif
                    }},
                    {"defaultGraphicMaterial_static", new MemberRegisterInfo { Name = "defaultGraphicMaterial", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Graphic_Wrap.G_defaultGraphicMaterial
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_GraphicRaycaster_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"Raycast", new MemberRegisterInfo { Name = "Raycast", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_GraphicRaycaster_Wrap.M_Raycast
#endif
                    }},
                    {"sortOrderPriority", new MemberRegisterInfo { Name = "sortOrderPriority", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_GraphicRaycaster_Wrap.G_sortOrderPriority
#endif
                    }},
                    {"renderOrderPriority", new MemberRegisterInfo { Name = "renderOrderPriority", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_GraphicRaycaster_Wrap.G_renderOrderPriority
#endif
                    }},
                    {"ignoreReversedGraphics", new MemberRegisterInfo { Name = "ignoreReversedGraphics", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_GraphicRaycaster_Wrap.G_ignoreReversedGraphics, PropertySetter = UnityEngine_UI_GraphicRaycaster_Wrap.S_ignoreReversedGraphics
#endif
                    }},
                    {"blockingObjects", new MemberRegisterInfo { Name = "blockingObjects", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_GraphicRaycaster_Wrap.G_blockingObjects, PropertySetter = UnityEngine_UI_GraphicRaycaster_Wrap.S_blockingObjects
#endif
                    }},
                    {"blockingMask", new MemberRegisterInfo { Name = "blockingMask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_GraphicRaycaster_Wrap.G_blockingMask, PropertySetter = UnityEngine_UI_GraphicRaycaster_Wrap.S_blockingMask
#endif
                    }},
                    {"eventCamera", new MemberRegisterInfo { Name = "eventCamera", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_GraphicRaycaster_Wrap.G_eventCamera
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_GraphicRegistry_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"RegisterGraphicForCanvas_static", new MemberRegisterInfo { Name = "RegisterGraphicForCanvas", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_GraphicRegistry_Wrap.F_RegisterGraphicForCanvas
#endif
                    }},
                    {"RegisterRaycastGraphicForCanvas_static", new MemberRegisterInfo { Name = "RegisterRaycastGraphicForCanvas", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_GraphicRegistry_Wrap.F_RegisterRaycastGraphicForCanvas
#endif
                    }},
                    {"UnregisterGraphicForCanvas_static", new MemberRegisterInfo { Name = "UnregisterGraphicForCanvas", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_GraphicRegistry_Wrap.F_UnregisterGraphicForCanvas
#endif
                    }},
                    {"UnregisterRaycastGraphicForCanvas_static", new MemberRegisterInfo { Name = "UnregisterRaycastGraphicForCanvas", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_GraphicRegistry_Wrap.F_UnregisterRaycastGraphicForCanvas
#endif
                    }},
                    {"DisableGraphicForCanvas_static", new MemberRegisterInfo { Name = "DisableGraphicForCanvas", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_GraphicRegistry_Wrap.F_DisableGraphicForCanvas
#endif
                    }},
                    {"DisableRaycastGraphicForCanvas_static", new MemberRegisterInfo { Name = "DisableRaycastGraphicForCanvas", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_GraphicRegistry_Wrap.F_DisableRaycastGraphicForCanvas
#endif
                    }},
                    {"GetGraphicsForCanvas_static", new MemberRegisterInfo { Name = "GetGraphicsForCanvas", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_GraphicRegistry_Wrap.F_GetGraphicsForCanvas
#endif
                    }},
                    {"GetRaycastableGraphicsForCanvas_static", new MemberRegisterInfo { Name = "GetRaycastableGraphicsForCanvas", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_GraphicRegistry_Wrap.F_GetRaycastableGraphicsForCanvas
#endif
                    }},
                    {"instance_static", new MemberRegisterInfo { Name = "instance", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_GraphicRegistry_Wrap.G_instance
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_IMaskable_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"RecalculateMasking", new MemberRegisterInfo { Name = "RecalculateMasking", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_IMaskable_Wrap.M_RecalculateMasking
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_Image_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"DisableSpriteOptimizations", new MemberRegisterInfo { Name = "DisableSpriteOptimizations", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Image_Wrap.M_DisableSpriteOptimizations
#endif
                    }},
                    {"OnBeforeSerialize", new MemberRegisterInfo { Name = "OnBeforeSerialize", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Image_Wrap.M_OnBeforeSerialize
#endif
                    }},
                    {"OnAfterDeserialize", new MemberRegisterInfo { Name = "OnAfterDeserialize", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Image_Wrap.M_OnAfterDeserialize
#endif
                    }},
                    {"SetNativeSize", new MemberRegisterInfo { Name = "SetNativeSize", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Image_Wrap.M_SetNativeSize
#endif
                    }},
                    {"CalculateLayoutInputHorizontal", new MemberRegisterInfo { Name = "CalculateLayoutInputHorizontal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Image_Wrap.M_CalculateLayoutInputHorizontal
#endif
                    }},
                    {"CalculateLayoutInputVertical", new MemberRegisterInfo { Name = "CalculateLayoutInputVertical", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Image_Wrap.M_CalculateLayoutInputVertical
#endif
                    }},
                    {"IsRaycastLocationValid", new MemberRegisterInfo { Name = "IsRaycastLocationValid", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Image_Wrap.M_IsRaycastLocationValid
#endif
                    }},
                    {"sprite", new MemberRegisterInfo { Name = "sprite", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_sprite, PropertySetter = UnityEngine_UI_Image_Wrap.S_sprite
#endif
                    }},
                    {"overrideSprite", new MemberRegisterInfo { Name = "overrideSprite", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_overrideSprite, PropertySetter = UnityEngine_UI_Image_Wrap.S_overrideSprite
#endif
                    }},
                    {"type", new MemberRegisterInfo { Name = "type", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_type, PropertySetter = UnityEngine_UI_Image_Wrap.S_type
#endif
                    }},
                    {"preserveAspect", new MemberRegisterInfo { Name = "preserveAspect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_preserveAspect, PropertySetter = UnityEngine_UI_Image_Wrap.S_preserveAspect
#endif
                    }},
                    {"fillCenter", new MemberRegisterInfo { Name = "fillCenter", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_fillCenter, PropertySetter = UnityEngine_UI_Image_Wrap.S_fillCenter
#endif
                    }},
                    {"fillMethod", new MemberRegisterInfo { Name = "fillMethod", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_fillMethod, PropertySetter = UnityEngine_UI_Image_Wrap.S_fillMethod
#endif
                    }},
                    {"fillAmount", new MemberRegisterInfo { Name = "fillAmount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_fillAmount, PropertySetter = UnityEngine_UI_Image_Wrap.S_fillAmount
#endif
                    }},
                    {"fillClockwise", new MemberRegisterInfo { Name = "fillClockwise", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_fillClockwise, PropertySetter = UnityEngine_UI_Image_Wrap.S_fillClockwise
#endif
                    }},
                    {"fillOrigin", new MemberRegisterInfo { Name = "fillOrigin", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_fillOrigin, PropertySetter = UnityEngine_UI_Image_Wrap.S_fillOrigin
#endif
                    }},
                    {"alphaHitTestMinimumThreshold", new MemberRegisterInfo { Name = "alphaHitTestMinimumThreshold", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_alphaHitTestMinimumThreshold, PropertySetter = UnityEngine_UI_Image_Wrap.S_alphaHitTestMinimumThreshold
#endif
                    }},
                    {"useSpriteMesh", new MemberRegisterInfo { Name = "useSpriteMesh", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_useSpriteMesh, PropertySetter = UnityEngine_UI_Image_Wrap.S_useSpriteMesh
#endif
                    }},
                    {"mainTexture", new MemberRegisterInfo { Name = "mainTexture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_mainTexture
#endif
                    }},
                    {"hasBorder", new MemberRegisterInfo { Name = "hasBorder", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_hasBorder
#endif
                    }},
                    {"pixelsPerUnitMultiplier", new MemberRegisterInfo { Name = "pixelsPerUnitMultiplier", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_pixelsPerUnitMultiplier, PropertySetter = UnityEngine_UI_Image_Wrap.S_pixelsPerUnitMultiplier
#endif
                    }},
                    {"pixelsPerUnit", new MemberRegisterInfo { Name = "pixelsPerUnit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_pixelsPerUnit
#endif
                    }},
                    {"material", new MemberRegisterInfo { Name = "material", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_material, PropertySetter = UnityEngine_UI_Image_Wrap.S_material
#endif
                    }},
                    {"minWidth", new MemberRegisterInfo { Name = "minWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_minWidth
#endif
                    }},
                    {"preferredWidth", new MemberRegisterInfo { Name = "preferredWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_preferredWidth
#endif
                    }},
                    {"flexibleWidth", new MemberRegisterInfo { Name = "flexibleWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_flexibleWidth
#endif
                    }},
                    {"minHeight", new MemberRegisterInfo { Name = "minHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_minHeight
#endif
                    }},
                    {"preferredHeight", new MemberRegisterInfo { Name = "preferredHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_preferredHeight
#endif
                    }},
                    {"flexibleHeight", new MemberRegisterInfo { Name = "flexibleHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_flexibleHeight
#endif
                    }},
                    {"layoutPriority", new MemberRegisterInfo { Name = "layoutPriority", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_layoutPriority
#endif
                    }},
                    {"defaultETC1GraphicMaterial_static", new MemberRegisterInfo { Name = "defaultETC1GraphicMaterial", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Image_Wrap.G_defaultETC1GraphicMaterial
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_AspectRatioFitter_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"SetLayoutHorizontal", new MemberRegisterInfo { Name = "SetLayoutHorizontal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_AspectRatioFitter_Wrap.M_SetLayoutHorizontal
#endif
                    }},
                    {"SetLayoutVertical", new MemberRegisterInfo { Name = "SetLayoutVertical", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_AspectRatioFitter_Wrap.M_SetLayoutVertical
#endif
                    }},
                    {"IsComponentValidOnObject", new MemberRegisterInfo { Name = "IsComponentValidOnObject", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_AspectRatioFitter_Wrap.M_IsComponentValidOnObject
#endif
                    }},
                    {"IsAspectModeValid", new MemberRegisterInfo { Name = "IsAspectModeValid", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_AspectRatioFitter_Wrap.M_IsAspectModeValid
#endif
                    }},
                    {"aspectMode", new MemberRegisterInfo { Name = "aspectMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_AspectRatioFitter_Wrap.G_aspectMode, PropertySetter = UnityEngine_UI_AspectRatioFitter_Wrap.S_aspectMode
#endif
                    }},
                    {"aspectRatio", new MemberRegisterInfo { Name = "aspectRatio", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_AspectRatioFitter_Wrap.G_aspectRatio, PropertySetter = UnityEngine_UI_AspectRatioFitter_Wrap.S_aspectRatio
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_CanvasScaler_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"uiScaleMode", new MemberRegisterInfo { Name = "uiScaleMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_CanvasScaler_Wrap.G_uiScaleMode, PropertySetter = UnityEngine_UI_CanvasScaler_Wrap.S_uiScaleMode
#endif
                    }},
                    {"referencePixelsPerUnit", new MemberRegisterInfo { Name = "referencePixelsPerUnit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_CanvasScaler_Wrap.G_referencePixelsPerUnit, PropertySetter = UnityEngine_UI_CanvasScaler_Wrap.S_referencePixelsPerUnit
#endif
                    }},
                    {"scaleFactor", new MemberRegisterInfo { Name = "scaleFactor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_CanvasScaler_Wrap.G_scaleFactor, PropertySetter = UnityEngine_UI_CanvasScaler_Wrap.S_scaleFactor
#endif
                    }},
                    {"referenceResolution", new MemberRegisterInfo { Name = "referenceResolution", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_CanvasScaler_Wrap.G_referenceResolution, PropertySetter = UnityEngine_UI_CanvasScaler_Wrap.S_referenceResolution
#endif
                    }},
                    {"screenMatchMode", new MemberRegisterInfo { Name = "screenMatchMode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_CanvasScaler_Wrap.G_screenMatchMode, PropertySetter = UnityEngine_UI_CanvasScaler_Wrap.S_screenMatchMode
#endif
                    }},
                    {"matchWidthOrHeight", new MemberRegisterInfo { Name = "matchWidthOrHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_CanvasScaler_Wrap.G_matchWidthOrHeight, PropertySetter = UnityEngine_UI_CanvasScaler_Wrap.S_matchWidthOrHeight
#endif
                    }},
                    {"physicalUnit", new MemberRegisterInfo { Name = "physicalUnit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_CanvasScaler_Wrap.G_physicalUnit, PropertySetter = UnityEngine_UI_CanvasScaler_Wrap.S_physicalUnit
#endif
                    }},
                    {"fallbackScreenDPI", new MemberRegisterInfo { Name = "fallbackScreenDPI", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_CanvasScaler_Wrap.G_fallbackScreenDPI, PropertySetter = UnityEngine_UI_CanvasScaler_Wrap.S_fallbackScreenDPI
#endif
                    }},
                    {"defaultSpriteDPI", new MemberRegisterInfo { Name = "defaultSpriteDPI", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_CanvasScaler_Wrap.G_defaultSpriteDPI, PropertySetter = UnityEngine_UI_CanvasScaler_Wrap.S_defaultSpriteDPI
#endif
                    }},
                    {"dynamicPixelsPerUnit", new MemberRegisterInfo { Name = "dynamicPixelsPerUnit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_CanvasScaler_Wrap.G_dynamicPixelsPerUnit, PropertySetter = UnityEngine_UI_CanvasScaler_Wrap.S_dynamicPixelsPerUnit
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_ContentSizeFitter_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"SetLayoutHorizontal", new MemberRegisterInfo { Name = "SetLayoutHorizontal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ContentSizeFitter_Wrap.M_SetLayoutHorizontal
#endif
                    }},
                    {"SetLayoutVertical", new MemberRegisterInfo { Name = "SetLayoutVertical", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ContentSizeFitter_Wrap.M_SetLayoutVertical
#endif
                    }},
                    {"horizontalFit", new MemberRegisterInfo { Name = "horizontalFit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ContentSizeFitter_Wrap.G_horizontalFit, PropertySetter = UnityEngine_UI_ContentSizeFitter_Wrap.S_horizontalFit
#endif
                    }},
                    {"verticalFit", new MemberRegisterInfo { Name = "verticalFit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ContentSizeFitter_Wrap.G_verticalFit, PropertySetter = UnityEngine_UI_ContentSizeFitter_Wrap.S_verticalFit
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_GridLayoutGroup_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"CalculateLayoutInputHorizontal", new MemberRegisterInfo { Name = "CalculateLayoutInputHorizontal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_GridLayoutGroup_Wrap.M_CalculateLayoutInputHorizontal
#endif
                    }},
                    {"CalculateLayoutInputVertical", new MemberRegisterInfo { Name = "CalculateLayoutInputVertical", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_GridLayoutGroup_Wrap.M_CalculateLayoutInputVertical
#endif
                    }},
                    {"SetLayoutHorizontal", new MemberRegisterInfo { Name = "SetLayoutHorizontal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_GridLayoutGroup_Wrap.M_SetLayoutHorizontal
#endif
                    }},
                    {"SetLayoutVertical", new MemberRegisterInfo { Name = "SetLayoutVertical", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_GridLayoutGroup_Wrap.M_SetLayoutVertical
#endif
                    }},
                    {"startCorner", new MemberRegisterInfo { Name = "startCorner", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_GridLayoutGroup_Wrap.G_startCorner, PropertySetter = UnityEngine_UI_GridLayoutGroup_Wrap.S_startCorner
#endif
                    }},
                    {"startAxis", new MemberRegisterInfo { Name = "startAxis", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_GridLayoutGroup_Wrap.G_startAxis, PropertySetter = UnityEngine_UI_GridLayoutGroup_Wrap.S_startAxis
#endif
                    }},
                    {"cellSize", new MemberRegisterInfo { Name = "cellSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_GridLayoutGroup_Wrap.G_cellSize, PropertySetter = UnityEngine_UI_GridLayoutGroup_Wrap.S_cellSize
#endif
                    }},
                    {"spacing", new MemberRegisterInfo { Name = "spacing", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_GridLayoutGroup_Wrap.G_spacing, PropertySetter = UnityEngine_UI_GridLayoutGroup_Wrap.S_spacing
#endif
                    }},
                    {"constraint", new MemberRegisterInfo { Name = "constraint", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_GridLayoutGroup_Wrap.G_constraint, PropertySetter = UnityEngine_UI_GridLayoutGroup_Wrap.S_constraint
#endif
                    }},
                    {"constraintCount", new MemberRegisterInfo { Name = "constraintCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_GridLayoutGroup_Wrap.G_constraintCount, PropertySetter = UnityEngine_UI_GridLayoutGroup_Wrap.S_constraintCount
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_HorizontalLayoutGroup_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"CalculateLayoutInputHorizontal", new MemberRegisterInfo { Name = "CalculateLayoutInputHorizontal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_HorizontalLayoutGroup_Wrap.M_CalculateLayoutInputHorizontal
#endif
                    }},
                    {"CalculateLayoutInputVertical", new MemberRegisterInfo { Name = "CalculateLayoutInputVertical", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_HorizontalLayoutGroup_Wrap.M_CalculateLayoutInputVertical
#endif
                    }},
                    {"SetLayoutHorizontal", new MemberRegisterInfo { Name = "SetLayoutHorizontal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_HorizontalLayoutGroup_Wrap.M_SetLayoutHorizontal
#endif
                    }},
                    {"SetLayoutVertical", new MemberRegisterInfo { Name = "SetLayoutVertical", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_HorizontalLayoutGroup_Wrap.M_SetLayoutVertical
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_HorizontalOrVerticalLayoutGroup_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"spacing", new MemberRegisterInfo { Name = "spacing", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_HorizontalOrVerticalLayoutGroup_Wrap.G_spacing, PropertySetter = UnityEngine_UI_HorizontalOrVerticalLayoutGroup_Wrap.S_spacing
#endif
                    }},
                    {"childForceExpandWidth", new MemberRegisterInfo { Name = "childForceExpandWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_HorizontalOrVerticalLayoutGroup_Wrap.G_childForceExpandWidth, PropertySetter = UnityEngine_UI_HorizontalOrVerticalLayoutGroup_Wrap.S_childForceExpandWidth
#endif
                    }},
                    {"childForceExpandHeight", new MemberRegisterInfo { Name = "childForceExpandHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_HorizontalOrVerticalLayoutGroup_Wrap.G_childForceExpandHeight, PropertySetter = UnityEngine_UI_HorizontalOrVerticalLayoutGroup_Wrap.S_childForceExpandHeight
#endif
                    }},
                    {"childControlWidth", new MemberRegisterInfo { Name = "childControlWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_HorizontalOrVerticalLayoutGroup_Wrap.G_childControlWidth, PropertySetter = UnityEngine_UI_HorizontalOrVerticalLayoutGroup_Wrap.S_childControlWidth
#endif
                    }},
                    {"childControlHeight", new MemberRegisterInfo { Name = "childControlHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_HorizontalOrVerticalLayoutGroup_Wrap.G_childControlHeight, PropertySetter = UnityEngine_UI_HorizontalOrVerticalLayoutGroup_Wrap.S_childControlHeight
#endif
                    }},
                    {"childScaleWidth", new MemberRegisterInfo { Name = "childScaleWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_HorizontalOrVerticalLayoutGroup_Wrap.G_childScaleWidth, PropertySetter = UnityEngine_UI_HorizontalOrVerticalLayoutGroup_Wrap.S_childScaleWidth
#endif
                    }},
                    {"childScaleHeight", new MemberRegisterInfo { Name = "childScaleHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_HorizontalOrVerticalLayoutGroup_Wrap.G_childScaleHeight, PropertySetter = UnityEngine_UI_HorizontalOrVerticalLayoutGroup_Wrap.S_childScaleHeight
#endif
                    }},
                    {"reverseArrangement", new MemberRegisterInfo { Name = "reverseArrangement", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_HorizontalOrVerticalLayoutGroup_Wrap.G_reverseArrangement, PropertySetter = UnityEngine_UI_HorizontalOrVerticalLayoutGroup_Wrap.S_reverseArrangement
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_ILayoutElement_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"CalculateLayoutInputHorizontal", new MemberRegisterInfo { Name = "CalculateLayoutInputHorizontal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ILayoutElement_Wrap.M_CalculateLayoutInputHorizontal
#endif
                    }},
                    {"CalculateLayoutInputVertical", new MemberRegisterInfo { Name = "CalculateLayoutInputVertical", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ILayoutElement_Wrap.M_CalculateLayoutInputVertical
#endif
                    }},
                    {"minWidth", new MemberRegisterInfo { Name = "minWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ILayoutElement_Wrap.G_minWidth
#endif
                    }},
                    {"preferredWidth", new MemberRegisterInfo { Name = "preferredWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ILayoutElement_Wrap.G_preferredWidth
#endif
                    }},
                    {"flexibleWidth", new MemberRegisterInfo { Name = "flexibleWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ILayoutElement_Wrap.G_flexibleWidth
#endif
                    }},
                    {"minHeight", new MemberRegisterInfo { Name = "minHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ILayoutElement_Wrap.G_minHeight
#endif
                    }},
                    {"preferredHeight", new MemberRegisterInfo { Name = "preferredHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ILayoutElement_Wrap.G_preferredHeight
#endif
                    }},
                    {"flexibleHeight", new MemberRegisterInfo { Name = "flexibleHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ILayoutElement_Wrap.G_flexibleHeight
#endif
                    }},
                    {"layoutPriority", new MemberRegisterInfo { Name = "layoutPriority", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ILayoutElement_Wrap.G_layoutPriority
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_ILayoutController_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"SetLayoutHorizontal", new MemberRegisterInfo { Name = "SetLayoutHorizontal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ILayoutController_Wrap.M_SetLayoutHorizontal
#endif
                    }},
                    {"SetLayoutVertical", new MemberRegisterInfo { Name = "SetLayoutVertical", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ILayoutController_Wrap.M_SetLayoutVertical
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_ILayoutGroup_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_ILayoutSelfController_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_ILayoutIgnorer_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"ignoreLayout", new MemberRegisterInfo { Name = "ignoreLayout", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ILayoutIgnorer_Wrap.G_ignoreLayout
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_LayoutElement_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"CalculateLayoutInputHorizontal", new MemberRegisterInfo { Name = "CalculateLayoutInputHorizontal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutElement_Wrap.M_CalculateLayoutInputHorizontal
#endif
                    }},
                    {"CalculateLayoutInputVertical", new MemberRegisterInfo { Name = "CalculateLayoutInputVertical", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutElement_Wrap.M_CalculateLayoutInputVertical
#endif
                    }},
                    {"ignoreLayout", new MemberRegisterInfo { Name = "ignoreLayout", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_LayoutElement_Wrap.G_ignoreLayout, PropertySetter = UnityEngine_UI_LayoutElement_Wrap.S_ignoreLayout
#endif
                    }},
                    {"minWidth", new MemberRegisterInfo { Name = "minWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_LayoutElement_Wrap.G_minWidth, PropertySetter = UnityEngine_UI_LayoutElement_Wrap.S_minWidth
#endif
                    }},
                    {"minHeight", new MemberRegisterInfo { Name = "minHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_LayoutElement_Wrap.G_minHeight, PropertySetter = UnityEngine_UI_LayoutElement_Wrap.S_minHeight
#endif
                    }},
                    {"preferredWidth", new MemberRegisterInfo { Name = "preferredWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_LayoutElement_Wrap.G_preferredWidth, PropertySetter = UnityEngine_UI_LayoutElement_Wrap.S_preferredWidth
#endif
                    }},
                    {"preferredHeight", new MemberRegisterInfo { Name = "preferredHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_LayoutElement_Wrap.G_preferredHeight, PropertySetter = UnityEngine_UI_LayoutElement_Wrap.S_preferredHeight
#endif
                    }},
                    {"flexibleWidth", new MemberRegisterInfo { Name = "flexibleWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_LayoutElement_Wrap.G_flexibleWidth, PropertySetter = UnityEngine_UI_LayoutElement_Wrap.S_flexibleWidth
#endif
                    }},
                    {"flexibleHeight", new MemberRegisterInfo { Name = "flexibleHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_LayoutElement_Wrap.G_flexibleHeight, PropertySetter = UnityEngine_UI_LayoutElement_Wrap.S_flexibleHeight
#endif
                    }},
                    {"layoutPriority", new MemberRegisterInfo { Name = "layoutPriority", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_LayoutElement_Wrap.G_layoutPriority, PropertySetter = UnityEngine_UI_LayoutElement_Wrap.S_layoutPriority
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_LayoutGroup_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"CalculateLayoutInputHorizontal", new MemberRegisterInfo { Name = "CalculateLayoutInputHorizontal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutGroup_Wrap.M_CalculateLayoutInputHorizontal
#endif
                    }},
                    {"CalculateLayoutInputVertical", new MemberRegisterInfo { Name = "CalculateLayoutInputVertical", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutGroup_Wrap.M_CalculateLayoutInputVertical
#endif
                    }},
                    {"SetLayoutHorizontal", new MemberRegisterInfo { Name = "SetLayoutHorizontal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutGroup_Wrap.M_SetLayoutHorizontal
#endif
                    }},
                    {"SetLayoutVertical", new MemberRegisterInfo { Name = "SetLayoutVertical", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutGroup_Wrap.M_SetLayoutVertical
#endif
                    }},
                    {"padding", new MemberRegisterInfo { Name = "padding", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_LayoutGroup_Wrap.G_padding, PropertySetter = UnityEngine_UI_LayoutGroup_Wrap.S_padding
#endif
                    }},
                    {"childAlignment", new MemberRegisterInfo { Name = "childAlignment", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_LayoutGroup_Wrap.G_childAlignment, PropertySetter = UnityEngine_UI_LayoutGroup_Wrap.S_childAlignment
#endif
                    }},
                    {"minWidth", new MemberRegisterInfo { Name = "minWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_LayoutGroup_Wrap.G_minWidth
#endif
                    }},
                    {"preferredWidth", new MemberRegisterInfo { Name = "preferredWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_LayoutGroup_Wrap.G_preferredWidth
#endif
                    }},
                    {"flexibleWidth", new MemberRegisterInfo { Name = "flexibleWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_LayoutGroup_Wrap.G_flexibleWidth
#endif
                    }},
                    {"minHeight", new MemberRegisterInfo { Name = "minHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_LayoutGroup_Wrap.G_minHeight
#endif
                    }},
                    {"preferredHeight", new MemberRegisterInfo { Name = "preferredHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_LayoutGroup_Wrap.G_preferredHeight
#endif
                    }},
                    {"flexibleHeight", new MemberRegisterInfo { Name = "flexibleHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_LayoutGroup_Wrap.G_flexibleHeight
#endif
                    }},
                    {"layoutPriority", new MemberRegisterInfo { Name = "layoutPriority", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_LayoutGroup_Wrap.G_layoutPriority
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_LayoutRebuilder_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UI_LayoutRebuilder_Wrap.Constructor
#endif
                    }},
                    {"IsDestroyed", new MemberRegisterInfo { Name = "IsDestroyed", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutRebuilder_Wrap.M_IsDestroyed
#endif
                    }},
                    {"Rebuild", new MemberRegisterInfo { Name = "Rebuild", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutRebuilder_Wrap.M_Rebuild
#endif
                    }},
                    {"LayoutComplete", new MemberRegisterInfo { Name = "LayoutComplete", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutRebuilder_Wrap.M_LayoutComplete
#endif
                    }},
                    {"GraphicUpdateComplete", new MemberRegisterInfo { Name = "GraphicUpdateComplete", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutRebuilder_Wrap.M_GraphicUpdateComplete
#endif
                    }},
                    {"GetHashCode", new MemberRegisterInfo { Name = "GetHashCode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutRebuilder_Wrap.M_GetHashCode
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutRebuilder_Wrap.M_Equals
#endif
                    }},
                    {"ToString", new MemberRegisterInfo { Name = "ToString", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutRebuilder_Wrap.M_ToString
#endif
                    }},
                    {"transform", new MemberRegisterInfo { Name = "transform", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_LayoutRebuilder_Wrap.G_transform
#endif
                    }},
                    {"ForceRebuildLayoutImmediate_static", new MemberRegisterInfo { Name = "ForceRebuildLayoutImmediate", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutRebuilder_Wrap.F_ForceRebuildLayoutImmediate
#endif
                    }},
                    {"MarkLayoutForRebuild_static", new MemberRegisterInfo { Name = "MarkLayoutForRebuild", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutRebuilder_Wrap.F_MarkLayoutForRebuild
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_LayoutUtility_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"GetMinSize_static", new MemberRegisterInfo { Name = "GetMinSize", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutUtility_Wrap.F_GetMinSize
#endif
                    }},
                    {"GetPreferredSize_static", new MemberRegisterInfo { Name = "GetPreferredSize", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutUtility_Wrap.F_GetPreferredSize
#endif
                    }},
                    {"GetFlexibleSize_static", new MemberRegisterInfo { Name = "GetFlexibleSize", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutUtility_Wrap.F_GetFlexibleSize
#endif
                    }},
                    {"GetMinWidth_static", new MemberRegisterInfo { Name = "GetMinWidth", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutUtility_Wrap.F_GetMinWidth
#endif
                    }},
                    {"GetPreferredWidth_static", new MemberRegisterInfo { Name = "GetPreferredWidth", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutUtility_Wrap.F_GetPreferredWidth
#endif
                    }},
                    {"GetFlexibleWidth_static", new MemberRegisterInfo { Name = "GetFlexibleWidth", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutUtility_Wrap.F_GetFlexibleWidth
#endif
                    }},
                    {"GetMinHeight_static", new MemberRegisterInfo { Name = "GetMinHeight", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutUtility_Wrap.F_GetMinHeight
#endif
                    }},
                    {"GetPreferredHeight_static", new MemberRegisterInfo { Name = "GetPreferredHeight", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutUtility_Wrap.F_GetPreferredHeight
#endif
                    }},
                    {"GetFlexibleHeight_static", new MemberRegisterInfo { Name = "GetFlexibleHeight", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutUtility_Wrap.F_GetFlexibleHeight
#endif
                    }},
                    {"GetLayoutProperty_static", new MemberRegisterInfo { Name = "GetLayoutProperty", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_LayoutUtility_Wrap.F_GetLayoutProperty
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_VerticalLayoutGroup_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"CalculateLayoutInputHorizontal", new MemberRegisterInfo { Name = "CalculateLayoutInputHorizontal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_VerticalLayoutGroup_Wrap.M_CalculateLayoutInputHorizontal
#endif
                    }},
                    {"CalculateLayoutInputVertical", new MemberRegisterInfo { Name = "CalculateLayoutInputVertical", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_VerticalLayoutGroup_Wrap.M_CalculateLayoutInputVertical
#endif
                    }},
                    {"SetLayoutHorizontal", new MemberRegisterInfo { Name = "SetLayoutHorizontal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_VerticalLayoutGroup_Wrap.M_SetLayoutHorizontal
#endif
                    }},
                    {"SetLayoutVertical", new MemberRegisterInfo { Name = "SetLayoutVertical", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_VerticalLayoutGroup_Wrap.M_SetLayoutVertical
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_Mask_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"MaskEnabled", new MemberRegisterInfo { Name = "MaskEnabled", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Mask_Wrap.M_MaskEnabled
#endif
                    }},
                    {"IsRaycastLocationValid", new MemberRegisterInfo { Name = "IsRaycastLocationValid", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Mask_Wrap.M_IsRaycastLocationValid
#endif
                    }},
                    {"GetModifiedMaterial", new MemberRegisterInfo { Name = "GetModifiedMaterial", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Mask_Wrap.M_GetModifiedMaterial
#endif
                    }},
                    {"rectTransform", new MemberRegisterInfo { Name = "rectTransform", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Mask_Wrap.G_rectTransform
#endif
                    }},
                    {"showMaskGraphic", new MemberRegisterInfo { Name = "showMaskGraphic", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Mask_Wrap.G_showMaskGraphic, PropertySetter = UnityEngine_UI_Mask_Wrap.S_showMaskGraphic
#endif
                    }},
                    {"graphic", new MemberRegisterInfo { Name = "graphic", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Mask_Wrap.G_graphic
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_MaskUtilities_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UI_MaskUtilities_Wrap.Constructor
#endif
                    }},
                    {"Notify2DMaskStateChanged_static", new MemberRegisterInfo { Name = "Notify2DMaskStateChanged", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_MaskUtilities_Wrap.F_Notify2DMaskStateChanged
#endif
                    }},
                    {"NotifyStencilStateChanged_static", new MemberRegisterInfo { Name = "NotifyStencilStateChanged", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_MaskUtilities_Wrap.F_NotifyStencilStateChanged
#endif
                    }},
                    {"FindRootSortOverrideCanvas_static", new MemberRegisterInfo { Name = "FindRootSortOverrideCanvas", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_MaskUtilities_Wrap.F_FindRootSortOverrideCanvas
#endif
                    }},
                    {"GetStencilDepth_static", new MemberRegisterInfo { Name = "GetStencilDepth", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_MaskUtilities_Wrap.F_GetStencilDepth
#endif
                    }},
                    {"IsDescendantOrSelf_static", new MemberRegisterInfo { Name = "IsDescendantOrSelf", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_MaskUtilities_Wrap.F_IsDescendantOrSelf
#endif
                    }},
                    {"GetRectMaskForClippable_static", new MemberRegisterInfo { Name = "GetRectMaskForClippable", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_MaskUtilities_Wrap.F_GetRectMaskForClippable
#endif
                    }},
                    {"GetRectMasksForClip_static", new MemberRegisterInfo { Name = "GetRectMasksForClip", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_MaskUtilities_Wrap.F_GetRectMasksForClip
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_MaskableGraphic_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"GetModifiedMaterial", new MemberRegisterInfo { Name = "GetModifiedMaterial", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_MaskableGraphic_Wrap.M_GetModifiedMaterial
#endif
                    }},
                    {"Cull", new MemberRegisterInfo { Name = "Cull", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_MaskableGraphic_Wrap.M_Cull
#endif
                    }},
                    {"SetClipRect", new MemberRegisterInfo { Name = "SetClipRect", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_MaskableGraphic_Wrap.M_SetClipRect
#endif
                    }},
                    {"SetClipSoftness", new MemberRegisterInfo { Name = "SetClipSoftness", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_MaskableGraphic_Wrap.M_SetClipSoftness
#endif
                    }},
                    {"RecalculateClipping", new MemberRegisterInfo { Name = "RecalculateClipping", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_MaskableGraphic_Wrap.M_RecalculateClipping
#endif
                    }},
                    {"RecalculateMasking", new MemberRegisterInfo { Name = "RecalculateMasking", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_MaskableGraphic_Wrap.M_RecalculateMasking
#endif
                    }},
                    {"onCullStateChanged", new MemberRegisterInfo { Name = "onCullStateChanged", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_MaskableGraphic_Wrap.G_onCullStateChanged, PropertySetter = UnityEngine_UI_MaskableGraphic_Wrap.S_onCullStateChanged
#endif
                    }},
                    {"maskable", new MemberRegisterInfo { Name = "maskable", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_MaskableGraphic_Wrap.G_maskable, PropertySetter = UnityEngine_UI_MaskableGraphic_Wrap.S_maskable
#endif
                    }},
                    {"isMaskingGraphic", new MemberRegisterInfo { Name = "isMaskingGraphic", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_MaskableGraphic_Wrap.G_isMaskingGraphic, PropertySetter = UnityEngine_UI_MaskableGraphic_Wrap.S_isMaskingGraphic
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_IMaterialModifier_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"GetModifiedMaterial", new MemberRegisterInfo { Name = "GetModifiedMaterial", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_IMaterialModifier_Wrap.M_GetModifiedMaterial
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_Navigation_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UI_Navigation_Wrap.Constructor
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Navigation_Wrap.M_Equals
#endif
                    }},
                    {"mode", new MemberRegisterInfo { Name = "mode", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Navigation_Wrap.G_mode, PropertySetter = UnityEngine_UI_Navigation_Wrap.S_mode
#endif
                    }},
                    {"wrapAround", new MemberRegisterInfo { Name = "wrapAround", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Navigation_Wrap.G_wrapAround, PropertySetter = UnityEngine_UI_Navigation_Wrap.S_wrapAround
#endif
                    }},
                    {"selectOnUp", new MemberRegisterInfo { Name = "selectOnUp", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Navigation_Wrap.G_selectOnUp, PropertySetter = UnityEngine_UI_Navigation_Wrap.S_selectOnUp
#endif
                    }},
                    {"selectOnDown", new MemberRegisterInfo { Name = "selectOnDown", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Navigation_Wrap.G_selectOnDown, PropertySetter = UnityEngine_UI_Navigation_Wrap.S_selectOnDown
#endif
                    }},
                    {"selectOnLeft", new MemberRegisterInfo { Name = "selectOnLeft", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Navigation_Wrap.G_selectOnLeft, PropertySetter = UnityEngine_UI_Navigation_Wrap.S_selectOnLeft
#endif
                    }},
                    {"selectOnRight", new MemberRegisterInfo { Name = "selectOnRight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Navigation_Wrap.G_selectOnRight, PropertySetter = UnityEngine_UI_Navigation_Wrap.S_selectOnRight
#endif
                    }},
                    {"defaultNavigation_static", new MemberRegisterInfo { Name = "defaultNavigation", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Navigation_Wrap.G_defaultNavigation
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_RawImage_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"SetNativeSize", new MemberRegisterInfo { Name = "SetNativeSize", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_RawImage_Wrap.M_SetNativeSize
#endif
                    }},
                    {"mainTexture", new MemberRegisterInfo { Name = "mainTexture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_RawImage_Wrap.G_mainTexture
#endif
                    }},
                    {"texture", new MemberRegisterInfo { Name = "texture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_RawImage_Wrap.G_texture, PropertySetter = UnityEngine_UI_RawImage_Wrap.S_texture
#endif
                    }},
                    {"uvRect", new MemberRegisterInfo { Name = "uvRect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_RawImage_Wrap.G_uvRect, PropertySetter = UnityEngine_UI_RawImage_Wrap.S_uvRect
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_RectMask2D_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"IsRaycastLocationValid", new MemberRegisterInfo { Name = "IsRaycastLocationValid", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_RectMask2D_Wrap.M_IsRaycastLocationValid
#endif
                    }},
                    {"PerformClipping", new MemberRegisterInfo { Name = "PerformClipping", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_RectMask2D_Wrap.M_PerformClipping
#endif
                    }},
                    {"UpdateClipSoftness", new MemberRegisterInfo { Name = "UpdateClipSoftness", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_RectMask2D_Wrap.M_UpdateClipSoftness
#endif
                    }},
                    {"AddClippable", new MemberRegisterInfo { Name = "AddClippable", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_RectMask2D_Wrap.M_AddClippable
#endif
                    }},
                    {"RemoveClippable", new MemberRegisterInfo { Name = "RemoveClippable", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_RectMask2D_Wrap.M_RemoveClippable
#endif
                    }},
                    {"padding", new MemberRegisterInfo { Name = "padding", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_RectMask2D_Wrap.G_padding, PropertySetter = UnityEngine_UI_RectMask2D_Wrap.S_padding
#endif
                    }},
                    {"softness", new MemberRegisterInfo { Name = "softness", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_RectMask2D_Wrap.G_softness, PropertySetter = UnityEngine_UI_RectMask2D_Wrap.S_softness
#endif
                    }},
                    {"canvasRect", new MemberRegisterInfo { Name = "canvasRect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_RectMask2D_Wrap.G_canvasRect
#endif
                    }},
                    {"rectTransform", new MemberRegisterInfo { Name = "rectTransform", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_RectMask2D_Wrap.G_rectTransform
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_ScrollRect_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"Rebuild", new MemberRegisterInfo { Name = "Rebuild", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ScrollRect_Wrap.M_Rebuild
#endif
                    }},
                    {"LayoutComplete", new MemberRegisterInfo { Name = "LayoutComplete", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ScrollRect_Wrap.M_LayoutComplete
#endif
                    }},
                    {"GraphicUpdateComplete", new MemberRegisterInfo { Name = "GraphicUpdateComplete", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ScrollRect_Wrap.M_GraphicUpdateComplete
#endif
                    }},
                    {"IsActive", new MemberRegisterInfo { Name = "IsActive", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ScrollRect_Wrap.M_IsActive
#endif
                    }},
                    {"StopMovement", new MemberRegisterInfo { Name = "StopMovement", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ScrollRect_Wrap.M_StopMovement
#endif
                    }},
                    {"OnScroll", new MemberRegisterInfo { Name = "OnScroll", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ScrollRect_Wrap.M_OnScroll
#endif
                    }},
                    {"OnInitializePotentialDrag", new MemberRegisterInfo { Name = "OnInitializePotentialDrag", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ScrollRect_Wrap.M_OnInitializePotentialDrag
#endif
                    }},
                    {"OnBeginDrag", new MemberRegisterInfo { Name = "OnBeginDrag", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ScrollRect_Wrap.M_OnBeginDrag
#endif
                    }},
                    {"OnEndDrag", new MemberRegisterInfo { Name = "OnEndDrag", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ScrollRect_Wrap.M_OnEndDrag
#endif
                    }},
                    {"OnDrag", new MemberRegisterInfo { Name = "OnDrag", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ScrollRect_Wrap.M_OnDrag
#endif
                    }},
                    {"CalculateLayoutInputHorizontal", new MemberRegisterInfo { Name = "CalculateLayoutInputHorizontal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ScrollRect_Wrap.M_CalculateLayoutInputHorizontal
#endif
                    }},
                    {"CalculateLayoutInputVertical", new MemberRegisterInfo { Name = "CalculateLayoutInputVertical", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ScrollRect_Wrap.M_CalculateLayoutInputVertical
#endif
                    }},
                    {"SetLayoutHorizontal", new MemberRegisterInfo { Name = "SetLayoutHorizontal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ScrollRect_Wrap.M_SetLayoutHorizontal
#endif
                    }},
                    {"SetLayoutVertical", new MemberRegisterInfo { Name = "SetLayoutVertical", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ScrollRect_Wrap.M_SetLayoutVertical
#endif
                    }},
                    {"content", new MemberRegisterInfo { Name = "content", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_content, PropertySetter = UnityEngine_UI_ScrollRect_Wrap.S_content
#endif
                    }},
                    {"horizontal", new MemberRegisterInfo { Name = "horizontal", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_horizontal, PropertySetter = UnityEngine_UI_ScrollRect_Wrap.S_horizontal
#endif
                    }},
                    {"vertical", new MemberRegisterInfo { Name = "vertical", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_vertical, PropertySetter = UnityEngine_UI_ScrollRect_Wrap.S_vertical
#endif
                    }},
                    {"movementType", new MemberRegisterInfo { Name = "movementType", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_movementType, PropertySetter = UnityEngine_UI_ScrollRect_Wrap.S_movementType
#endif
                    }},
                    {"elasticity", new MemberRegisterInfo { Name = "elasticity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_elasticity, PropertySetter = UnityEngine_UI_ScrollRect_Wrap.S_elasticity
#endif
                    }},
                    {"inertia", new MemberRegisterInfo { Name = "inertia", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_inertia, PropertySetter = UnityEngine_UI_ScrollRect_Wrap.S_inertia
#endif
                    }},
                    {"decelerationRate", new MemberRegisterInfo { Name = "decelerationRate", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_decelerationRate, PropertySetter = UnityEngine_UI_ScrollRect_Wrap.S_decelerationRate
#endif
                    }},
                    {"scrollSensitivity", new MemberRegisterInfo { Name = "scrollSensitivity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_scrollSensitivity, PropertySetter = UnityEngine_UI_ScrollRect_Wrap.S_scrollSensitivity
#endif
                    }},
                    {"viewport", new MemberRegisterInfo { Name = "viewport", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_viewport, PropertySetter = UnityEngine_UI_ScrollRect_Wrap.S_viewport
#endif
                    }},
                    {"horizontalScrollbar", new MemberRegisterInfo { Name = "horizontalScrollbar", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_horizontalScrollbar, PropertySetter = UnityEngine_UI_ScrollRect_Wrap.S_horizontalScrollbar
#endif
                    }},
                    {"verticalScrollbar", new MemberRegisterInfo { Name = "verticalScrollbar", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_verticalScrollbar, PropertySetter = UnityEngine_UI_ScrollRect_Wrap.S_verticalScrollbar
#endif
                    }},
                    {"horizontalScrollbarVisibility", new MemberRegisterInfo { Name = "horizontalScrollbarVisibility", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_horizontalScrollbarVisibility, PropertySetter = UnityEngine_UI_ScrollRect_Wrap.S_horizontalScrollbarVisibility
#endif
                    }},
                    {"verticalScrollbarVisibility", new MemberRegisterInfo { Name = "verticalScrollbarVisibility", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_verticalScrollbarVisibility, PropertySetter = UnityEngine_UI_ScrollRect_Wrap.S_verticalScrollbarVisibility
#endif
                    }},
                    {"horizontalScrollbarSpacing", new MemberRegisterInfo { Name = "horizontalScrollbarSpacing", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_horizontalScrollbarSpacing, PropertySetter = UnityEngine_UI_ScrollRect_Wrap.S_horizontalScrollbarSpacing
#endif
                    }},
                    {"verticalScrollbarSpacing", new MemberRegisterInfo { Name = "verticalScrollbarSpacing", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_verticalScrollbarSpacing, PropertySetter = UnityEngine_UI_ScrollRect_Wrap.S_verticalScrollbarSpacing
#endif
                    }},
                    {"onValueChanged", new MemberRegisterInfo { Name = "onValueChanged", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_onValueChanged, PropertySetter = UnityEngine_UI_ScrollRect_Wrap.S_onValueChanged
#endif
                    }},
                    {"velocity", new MemberRegisterInfo { Name = "velocity", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_velocity, PropertySetter = UnityEngine_UI_ScrollRect_Wrap.S_velocity
#endif
                    }},
                    {"normalizedPosition", new MemberRegisterInfo { Name = "normalizedPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_normalizedPosition, PropertySetter = UnityEngine_UI_ScrollRect_Wrap.S_normalizedPosition
#endif
                    }},
                    {"horizontalNormalizedPosition", new MemberRegisterInfo { Name = "horizontalNormalizedPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_horizontalNormalizedPosition, PropertySetter = UnityEngine_UI_ScrollRect_Wrap.S_horizontalNormalizedPosition
#endif
                    }},
                    {"verticalNormalizedPosition", new MemberRegisterInfo { Name = "verticalNormalizedPosition", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_verticalNormalizedPosition, PropertySetter = UnityEngine_UI_ScrollRect_Wrap.S_verticalNormalizedPosition
#endif
                    }},
                    {"minWidth", new MemberRegisterInfo { Name = "minWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_minWidth
#endif
                    }},
                    {"preferredWidth", new MemberRegisterInfo { Name = "preferredWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_preferredWidth
#endif
                    }},
                    {"flexibleWidth", new MemberRegisterInfo { Name = "flexibleWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_flexibleWidth
#endif
                    }},
                    {"minHeight", new MemberRegisterInfo { Name = "minHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_minHeight
#endif
                    }},
                    {"preferredHeight", new MemberRegisterInfo { Name = "preferredHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_preferredHeight
#endif
                    }},
                    {"flexibleHeight", new MemberRegisterInfo { Name = "flexibleHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_flexibleHeight
#endif
                    }},
                    {"layoutPriority", new MemberRegisterInfo { Name = "layoutPriority", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ScrollRect_Wrap.G_layoutPriority
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_Scrollbar_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"SetValueWithoutNotify", new MemberRegisterInfo { Name = "SetValueWithoutNotify", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Scrollbar_Wrap.M_SetValueWithoutNotify
#endif
                    }},
                    {"Rebuild", new MemberRegisterInfo { Name = "Rebuild", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Scrollbar_Wrap.M_Rebuild
#endif
                    }},
                    {"LayoutComplete", new MemberRegisterInfo { Name = "LayoutComplete", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Scrollbar_Wrap.M_LayoutComplete
#endif
                    }},
                    {"GraphicUpdateComplete", new MemberRegisterInfo { Name = "GraphicUpdateComplete", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Scrollbar_Wrap.M_GraphicUpdateComplete
#endif
                    }},
                    {"OnBeginDrag", new MemberRegisterInfo { Name = "OnBeginDrag", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Scrollbar_Wrap.M_OnBeginDrag
#endif
                    }},
                    {"OnDrag", new MemberRegisterInfo { Name = "OnDrag", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Scrollbar_Wrap.M_OnDrag
#endif
                    }},
                    {"OnPointerDown", new MemberRegisterInfo { Name = "OnPointerDown", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Scrollbar_Wrap.M_OnPointerDown
#endif
                    }},
                    {"OnPointerUp", new MemberRegisterInfo { Name = "OnPointerUp", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Scrollbar_Wrap.M_OnPointerUp
#endif
                    }},
                    {"OnMove", new MemberRegisterInfo { Name = "OnMove", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Scrollbar_Wrap.M_OnMove
#endif
                    }},
                    {"FindSelectableOnLeft", new MemberRegisterInfo { Name = "FindSelectableOnLeft", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Scrollbar_Wrap.M_FindSelectableOnLeft
#endif
                    }},
                    {"FindSelectableOnRight", new MemberRegisterInfo { Name = "FindSelectableOnRight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Scrollbar_Wrap.M_FindSelectableOnRight
#endif
                    }},
                    {"FindSelectableOnUp", new MemberRegisterInfo { Name = "FindSelectableOnUp", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Scrollbar_Wrap.M_FindSelectableOnUp
#endif
                    }},
                    {"FindSelectableOnDown", new MemberRegisterInfo { Name = "FindSelectableOnDown", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Scrollbar_Wrap.M_FindSelectableOnDown
#endif
                    }},
                    {"OnInitializePotentialDrag", new MemberRegisterInfo { Name = "OnInitializePotentialDrag", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Scrollbar_Wrap.M_OnInitializePotentialDrag
#endif
                    }},
                    {"SetDirection", new MemberRegisterInfo { Name = "SetDirection", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Scrollbar_Wrap.M_SetDirection
#endif
                    }},
                    {"handleRect", new MemberRegisterInfo { Name = "handleRect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Scrollbar_Wrap.G_handleRect, PropertySetter = UnityEngine_UI_Scrollbar_Wrap.S_handleRect
#endif
                    }},
                    {"direction", new MemberRegisterInfo { Name = "direction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Scrollbar_Wrap.G_direction, PropertySetter = UnityEngine_UI_Scrollbar_Wrap.S_direction
#endif
                    }},
                    {"value", new MemberRegisterInfo { Name = "value", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Scrollbar_Wrap.G_value, PropertySetter = UnityEngine_UI_Scrollbar_Wrap.S_value
#endif
                    }},
                    {"size", new MemberRegisterInfo { Name = "size", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Scrollbar_Wrap.G_size, PropertySetter = UnityEngine_UI_Scrollbar_Wrap.S_size
#endif
                    }},
                    {"numberOfSteps", new MemberRegisterInfo { Name = "numberOfSteps", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Scrollbar_Wrap.G_numberOfSteps, PropertySetter = UnityEngine_UI_Scrollbar_Wrap.S_numberOfSteps
#endif
                    }},
                    {"onValueChanged", new MemberRegisterInfo { Name = "onValueChanged", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Scrollbar_Wrap.G_onValueChanged, PropertySetter = UnityEngine_UI_Scrollbar_Wrap.S_onValueChanged
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_Slider_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"SetValueWithoutNotify", new MemberRegisterInfo { Name = "SetValueWithoutNotify", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Slider_Wrap.M_SetValueWithoutNotify
#endif
                    }},
                    {"Rebuild", new MemberRegisterInfo { Name = "Rebuild", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Slider_Wrap.M_Rebuild
#endif
                    }},
                    {"LayoutComplete", new MemberRegisterInfo { Name = "LayoutComplete", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Slider_Wrap.M_LayoutComplete
#endif
                    }},
                    {"GraphicUpdateComplete", new MemberRegisterInfo { Name = "GraphicUpdateComplete", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Slider_Wrap.M_GraphicUpdateComplete
#endif
                    }},
                    {"OnPointerDown", new MemberRegisterInfo { Name = "OnPointerDown", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Slider_Wrap.M_OnPointerDown
#endif
                    }},
                    {"OnDrag", new MemberRegisterInfo { Name = "OnDrag", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Slider_Wrap.M_OnDrag
#endif
                    }},
                    {"OnMove", new MemberRegisterInfo { Name = "OnMove", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Slider_Wrap.M_OnMove
#endif
                    }},
                    {"FindSelectableOnLeft", new MemberRegisterInfo { Name = "FindSelectableOnLeft", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Slider_Wrap.M_FindSelectableOnLeft
#endif
                    }},
                    {"FindSelectableOnRight", new MemberRegisterInfo { Name = "FindSelectableOnRight", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Slider_Wrap.M_FindSelectableOnRight
#endif
                    }},
                    {"FindSelectableOnUp", new MemberRegisterInfo { Name = "FindSelectableOnUp", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Slider_Wrap.M_FindSelectableOnUp
#endif
                    }},
                    {"FindSelectableOnDown", new MemberRegisterInfo { Name = "FindSelectableOnDown", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Slider_Wrap.M_FindSelectableOnDown
#endif
                    }},
                    {"OnInitializePotentialDrag", new MemberRegisterInfo { Name = "OnInitializePotentialDrag", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Slider_Wrap.M_OnInitializePotentialDrag
#endif
                    }},
                    {"SetDirection", new MemberRegisterInfo { Name = "SetDirection", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Slider_Wrap.M_SetDirection
#endif
                    }},
                    {"fillRect", new MemberRegisterInfo { Name = "fillRect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Slider_Wrap.G_fillRect, PropertySetter = UnityEngine_UI_Slider_Wrap.S_fillRect
#endif
                    }},
                    {"handleRect", new MemberRegisterInfo { Name = "handleRect", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Slider_Wrap.G_handleRect, PropertySetter = UnityEngine_UI_Slider_Wrap.S_handleRect
#endif
                    }},
                    {"direction", new MemberRegisterInfo { Name = "direction", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Slider_Wrap.G_direction, PropertySetter = UnityEngine_UI_Slider_Wrap.S_direction
#endif
                    }},
                    {"minValue", new MemberRegisterInfo { Name = "minValue", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Slider_Wrap.G_minValue, PropertySetter = UnityEngine_UI_Slider_Wrap.S_minValue
#endif
                    }},
                    {"maxValue", new MemberRegisterInfo { Name = "maxValue", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Slider_Wrap.G_maxValue, PropertySetter = UnityEngine_UI_Slider_Wrap.S_maxValue
#endif
                    }},
                    {"wholeNumbers", new MemberRegisterInfo { Name = "wholeNumbers", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Slider_Wrap.G_wholeNumbers, PropertySetter = UnityEngine_UI_Slider_Wrap.S_wholeNumbers
#endif
                    }},
                    {"value", new MemberRegisterInfo { Name = "value", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Slider_Wrap.G_value, PropertySetter = UnityEngine_UI_Slider_Wrap.S_value
#endif
                    }},
                    {"normalizedValue", new MemberRegisterInfo { Name = "normalizedValue", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Slider_Wrap.G_normalizedValue, PropertySetter = UnityEngine_UI_Slider_Wrap.S_normalizedValue
#endif
                    }},
                    {"onValueChanged", new MemberRegisterInfo { Name = "onValueChanged", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Slider_Wrap.G_onValueChanged, PropertySetter = UnityEngine_UI_Slider_Wrap.S_onValueChanged
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_SpriteState_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UI_SpriteState_Wrap.Constructor
#endif
                    }},
                    {"Equals", new MemberRegisterInfo { Name = "Equals", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_SpriteState_Wrap.M_Equals
#endif
                    }},
                    {"highlightedSprite", new MemberRegisterInfo { Name = "highlightedSprite", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_SpriteState_Wrap.G_highlightedSprite, PropertySetter = UnityEngine_UI_SpriteState_Wrap.S_highlightedSprite
#endif
                    }},
                    {"pressedSprite", new MemberRegisterInfo { Name = "pressedSprite", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_SpriteState_Wrap.G_pressedSprite, PropertySetter = UnityEngine_UI_SpriteState_Wrap.S_pressedSprite
#endif
                    }},
                    {"selectedSprite", new MemberRegisterInfo { Name = "selectedSprite", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_SpriteState_Wrap.G_selectedSprite, PropertySetter = UnityEngine_UI_SpriteState_Wrap.S_selectedSprite
#endif
                    }},
                    {"disabledSprite", new MemberRegisterInfo { Name = "disabledSprite", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_SpriteState_Wrap.G_disabledSprite, PropertySetter = UnityEngine_UI_SpriteState_Wrap.S_disabledSprite
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_StencilMaterial_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"Add_static", new MemberRegisterInfo { Name = "Add", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_StencilMaterial_Wrap.F_Add
#endif
                    }},
                    {"Remove_static", new MemberRegisterInfo { Name = "Remove", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_StencilMaterial_Wrap.F_Remove
#endif
                    }},
                    {"ClearAll_static", new MemberRegisterInfo { Name = "ClearAll", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_StencilMaterial_Wrap.F_ClearAll
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_Text_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"FontTextureChanged", new MemberRegisterInfo { Name = "FontTextureChanged", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Text_Wrap.M_FontTextureChanged
#endif
                    }},
                    {"GetGenerationSettings", new MemberRegisterInfo { Name = "GetGenerationSettings", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Text_Wrap.M_GetGenerationSettings
#endif
                    }},
                    {"CalculateLayoutInputHorizontal", new MemberRegisterInfo { Name = "CalculateLayoutInputHorizontal", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Text_Wrap.M_CalculateLayoutInputHorizontal
#endif
                    }},
                    {"CalculateLayoutInputVertical", new MemberRegisterInfo { Name = "CalculateLayoutInputVertical", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Text_Wrap.M_CalculateLayoutInputVertical
#endif
                    }},
                    {"OnRebuildRequested", new MemberRegisterInfo { Name = "OnRebuildRequested", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"cachedTextGenerator", new MemberRegisterInfo { Name = "cachedTextGenerator", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_cachedTextGenerator
#endif
                    }},
                    {"cachedTextGeneratorForLayout", new MemberRegisterInfo { Name = "cachedTextGeneratorForLayout", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_cachedTextGeneratorForLayout
#endif
                    }},
                    {"mainTexture", new MemberRegisterInfo { Name = "mainTexture", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_mainTexture
#endif
                    }},
                    {"font", new MemberRegisterInfo { Name = "font", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_font, PropertySetter = UnityEngine_UI_Text_Wrap.S_font
#endif
                    }},
                    {"text", new MemberRegisterInfo { Name = "text", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_text, PropertySetter = UnityEngine_UI_Text_Wrap.S_text
#endif
                    }},
                    {"supportRichText", new MemberRegisterInfo { Name = "supportRichText", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_supportRichText, PropertySetter = UnityEngine_UI_Text_Wrap.S_supportRichText
#endif
                    }},
                    {"resizeTextForBestFit", new MemberRegisterInfo { Name = "resizeTextForBestFit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_resizeTextForBestFit, PropertySetter = UnityEngine_UI_Text_Wrap.S_resizeTextForBestFit
#endif
                    }},
                    {"resizeTextMinSize", new MemberRegisterInfo { Name = "resizeTextMinSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_resizeTextMinSize, PropertySetter = UnityEngine_UI_Text_Wrap.S_resizeTextMinSize
#endif
                    }},
                    {"resizeTextMaxSize", new MemberRegisterInfo { Name = "resizeTextMaxSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_resizeTextMaxSize, PropertySetter = UnityEngine_UI_Text_Wrap.S_resizeTextMaxSize
#endif
                    }},
                    {"alignment", new MemberRegisterInfo { Name = "alignment", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_alignment, PropertySetter = UnityEngine_UI_Text_Wrap.S_alignment
#endif
                    }},
                    {"alignByGeometry", new MemberRegisterInfo { Name = "alignByGeometry", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_alignByGeometry, PropertySetter = UnityEngine_UI_Text_Wrap.S_alignByGeometry
#endif
                    }},
                    {"fontSize", new MemberRegisterInfo { Name = "fontSize", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_fontSize, PropertySetter = UnityEngine_UI_Text_Wrap.S_fontSize
#endif
                    }},
                    {"horizontalOverflow", new MemberRegisterInfo { Name = "horizontalOverflow", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_horizontalOverflow, PropertySetter = UnityEngine_UI_Text_Wrap.S_horizontalOverflow
#endif
                    }},
                    {"verticalOverflow", new MemberRegisterInfo { Name = "verticalOverflow", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_verticalOverflow, PropertySetter = UnityEngine_UI_Text_Wrap.S_verticalOverflow
#endif
                    }},
                    {"lineSpacing", new MemberRegisterInfo { Name = "lineSpacing", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_lineSpacing, PropertySetter = UnityEngine_UI_Text_Wrap.S_lineSpacing
#endif
                    }},
                    {"fontStyle", new MemberRegisterInfo { Name = "fontStyle", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_fontStyle, PropertySetter = UnityEngine_UI_Text_Wrap.S_fontStyle
#endif
                    }},
                    {"pixelsPerUnit", new MemberRegisterInfo { Name = "pixelsPerUnit", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_pixelsPerUnit
#endif
                    }},
                    {"minWidth", new MemberRegisterInfo { Name = "minWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_minWidth
#endif
                    }},
                    {"preferredWidth", new MemberRegisterInfo { Name = "preferredWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_preferredWidth
#endif
                    }},
                    {"flexibleWidth", new MemberRegisterInfo { Name = "flexibleWidth", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_flexibleWidth
#endif
                    }},
                    {"minHeight", new MemberRegisterInfo { Name = "minHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_minHeight
#endif
                    }},
                    {"preferredHeight", new MemberRegisterInfo { Name = "preferredHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_preferredHeight
#endif
                    }},
                    {"flexibleHeight", new MemberRegisterInfo { Name = "flexibleHeight", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_flexibleHeight
#endif
                    }},
                    {"layoutPriority", new MemberRegisterInfo { Name = "layoutPriority", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Text_Wrap.G_layoutPriority
#endif
                    }},
                    {"GetTextAnchorPivot_static", new MemberRegisterInfo { Name = "GetTextAnchorPivot", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Text_Wrap.F_GetTextAnchorPivot
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_ToggleGroup_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"NotifyToggleOn", new MemberRegisterInfo { Name = "NotifyToggleOn", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ToggleGroup_Wrap.M_NotifyToggleOn
#endif
                    }},
                    {"UnregisterToggle", new MemberRegisterInfo { Name = "UnregisterToggle", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ToggleGroup_Wrap.M_UnregisterToggle
#endif
                    }},
                    {"RegisterToggle", new MemberRegisterInfo { Name = "RegisterToggle", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ToggleGroup_Wrap.M_RegisterToggle
#endif
                    }},
                    {"EnsureValidState", new MemberRegisterInfo { Name = "EnsureValidState", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ToggleGroup_Wrap.M_EnsureValidState
#endif
                    }},
                    {"AnyTogglesOn", new MemberRegisterInfo { Name = "AnyTogglesOn", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ToggleGroup_Wrap.M_AnyTogglesOn
#endif
                    }},
                    {"ActiveToggles", new MemberRegisterInfo { Name = "ActiveToggles", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ToggleGroup_Wrap.M_ActiveToggles
#endif
                    }},
                    {"GetFirstActiveToggle", new MemberRegisterInfo { Name = "GetFirstActiveToggle", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ToggleGroup_Wrap.M_GetFirstActiveToggle
#endif
                    }},
                    {"SetAllTogglesOff", new MemberRegisterInfo { Name = "SetAllTogglesOff", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_ToggleGroup_Wrap.M_SetAllTogglesOff
#endif
                    }},
                    {"allowSwitchOff", new MemberRegisterInfo { Name = "allowSwitchOff", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_ToggleGroup_Wrap.G_allowSwitchOff, PropertySetter = UnityEngine_UI_ToggleGroup_Wrap.S_allowSwitchOff
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_VertexHelper_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UI_VertexHelper_Wrap.Constructor
#endif
                    }},
                    {"Dispose", new MemberRegisterInfo { Name = "Dispose", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_VertexHelper_Wrap.M_Dispose
#endif
                    }},
                    {"Clear", new MemberRegisterInfo { Name = "Clear", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_VertexHelper_Wrap.M_Clear
#endif
                    }},
                    {"PopulateUIVertex", new MemberRegisterInfo { Name = "PopulateUIVertex", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_VertexHelper_Wrap.M_PopulateUIVertex
#endif
                    }},
                    {"SetUIVertex", new MemberRegisterInfo { Name = "SetUIVertex", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_VertexHelper_Wrap.M_SetUIVertex
#endif
                    }},
                    {"FillMesh", new MemberRegisterInfo { Name = "FillMesh", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_VertexHelper_Wrap.M_FillMesh
#endif
                    }},
                    {"AddVert", new MemberRegisterInfo { Name = "AddVert", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_VertexHelper_Wrap.M_AddVert
#endif
                    }},
                    {"AddTriangle", new MemberRegisterInfo { Name = "AddTriangle", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_VertexHelper_Wrap.M_AddTriangle
#endif
                    }},
                    {"AddUIVertexQuad", new MemberRegisterInfo { Name = "AddUIVertexQuad", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_VertexHelper_Wrap.M_AddUIVertexQuad
#endif
                    }},
                    {"AddUIVertexStream", new MemberRegisterInfo { Name = "AddUIVertexStream", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_VertexHelper_Wrap.M_AddUIVertexStream
#endif
                    }},
                    {"AddUIVertexTriangleStream", new MemberRegisterInfo { Name = "AddUIVertexTriangleStream", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_VertexHelper_Wrap.M_AddUIVertexTriangleStream
#endif
                    }},
                    {"GetUIVertexStream", new MemberRegisterInfo { Name = "GetUIVertexStream", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_VertexHelper_Wrap.M_GetUIVertexStream
#endif
                    }},
                    {"currentVertCount", new MemberRegisterInfo { Name = "currentVertCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_VertexHelper_Wrap.G_currentVertCount
#endif
                    }},
                    {"currentIndexCount", new MemberRegisterInfo { Name = "currentIndexCount", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_VertexHelper_Wrap.G_currentIndexCount
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_BaseMeshEffect_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"ModifyMesh", new MemberRegisterInfo { Name = "ModifyMesh", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_BaseMeshEffect_Wrap.M_ModifyMesh
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_IMeshModifier_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"ModifyMesh", new MemberRegisterInfo { Name = "ModifyMesh", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_IMeshModifier_Wrap.M_ModifyMesh
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_Outline_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"ModifyMesh", new MemberRegisterInfo { Name = "ModifyMesh", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Outline_Wrap.M_ModifyMesh
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_PositionAsUV1_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"ModifyMesh", new MemberRegisterInfo { Name = "ModifyMesh", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_PositionAsUV1_Wrap.M_ModifyMesh
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_Shadow_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"ModifyMesh", new MemberRegisterInfo { Name = "ModifyMesh", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_Shadow_Wrap.M_ModifyMesh
#endif
                    }},
                    {"effectColor", new MemberRegisterInfo { Name = "effectColor", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Shadow_Wrap.G_effectColor, PropertySetter = UnityEngine_UI_Shadow_Wrap.S_effectColor
#endif
                    }},
                    {"effectDistance", new MemberRegisterInfo { Name = "effectDistance", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Shadow_Wrap.G_effectDistance, PropertySetter = UnityEngine_UI_Shadow_Wrap.S_effectDistance
#endif
                    }},
                    {"useGraphicAlpha", new MemberRegisterInfo { Name = "useGraphicAlpha", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Shadow_Wrap.G_useGraphicAlpha, PropertySetter = UnityEngine_UI_Shadow_Wrap.S_useGraphicAlpha
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_DefaultControls_IFactoryControls_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"CreateGameObject", new MemberRegisterInfo { Name = "CreateGameObject", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = UnityEngine_UI_DefaultControls_IFactoryControls_Wrap.M_CreateGameObject
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_DefaultControls_Resources_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UI_DefaultControls_Resources_Wrap.Constructor
#endif
                    }},
                    {"standard", new MemberRegisterInfo { Name = "standard", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_DefaultControls_Resources_Wrap.G_standard, PropertySetter = UnityEngine_UI_DefaultControls_Resources_Wrap.S_standard
#endif
                    }},
                    {"background", new MemberRegisterInfo { Name = "background", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_DefaultControls_Resources_Wrap.G_background, PropertySetter = UnityEngine_UI_DefaultControls_Resources_Wrap.S_background
#endif
                    }},
                    {"inputField", new MemberRegisterInfo { Name = "inputField", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_DefaultControls_Resources_Wrap.G_inputField, PropertySetter = UnityEngine_UI_DefaultControls_Resources_Wrap.S_inputField
#endif
                    }},
                    {"knob", new MemberRegisterInfo { Name = "knob", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_DefaultControls_Resources_Wrap.G_knob, PropertySetter = UnityEngine_UI_DefaultControls_Resources_Wrap.S_knob
#endif
                    }},
                    {"checkmark", new MemberRegisterInfo { Name = "checkmark", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_DefaultControls_Resources_Wrap.G_checkmark, PropertySetter = UnityEngine_UI_DefaultControls_Resources_Wrap.S_checkmark
#endif
                    }},
                    {"dropdown", new MemberRegisterInfo { Name = "dropdown", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_DefaultControls_Resources_Wrap.G_dropdown, PropertySetter = UnityEngine_UI_DefaultControls_Resources_Wrap.S_dropdown
#endif
                    }},
                    {"mask", new MemberRegisterInfo { Name = "mask", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_DefaultControls_Resources_Wrap.G_mask, PropertySetter = UnityEngine_UI_DefaultControls_Resources_Wrap.S_mask
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_Dropdown_OptionData_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UI_Dropdown_OptionData_Wrap.Constructor
#endif
                    }},
                    {"text", new MemberRegisterInfo { Name = "text", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Dropdown_OptionData_Wrap.G_text, PropertySetter = UnityEngine_UI_Dropdown_OptionData_Wrap.S_text
#endif
                    }},
                    {"image", new MemberRegisterInfo { Name = "image", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Dropdown_OptionData_Wrap.G_image, PropertySetter = UnityEngine_UI_Dropdown_OptionData_Wrap.S_image
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_Dropdown_OptionDataList_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UI_Dropdown_OptionDataList_Wrap.Constructor
#endif
                    }},
                    {"options", new MemberRegisterInfo { Name = "options", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = UnityEngine_UI_Dropdown_OptionDataList_Wrap.G_options, PropertySetter = UnityEngine_UI_Dropdown_OptionDataList_Wrap.S_options
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_Dropdown_DropdownEvent_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UI_Dropdown_DropdownEvent_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_InputField_SubmitEvent_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UI_InputField_SubmitEvent_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_InputField_OnChangeEvent_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UI_InputField_OnChangeEvent_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_MaskableGraphic_CullStateChangedEvent_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UI_MaskableGraphic_CullStateChangedEvent_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_ScrollRect_ScrollRectEvent_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UI_ScrollRect_ScrollRectEvent_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_Scrollbar_ScrollEvent_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UI_Scrollbar_ScrollEvent_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_UnityEngine_UI_Slider_SliderEvent_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = UnityEngine_UI_Slider_SliderEvent_Wrap.Constructor
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_TsSamples_Example2_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = TsSamples_Example2_Wrap.Constructor
#endif
                    }},
                    {"moduleName", new MemberRegisterInfo { Name = "moduleName", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = TsSamples_Example2_Wrap.G_moduleName, PropertySetter = TsSamples_Example2_Wrap.S_moduleName
#endif
                    }},
                    {"action1", new MemberRegisterInfo { Name = "action1", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = TsSamples_Example2_Wrap.G_action1, PropertySetter = TsSamples_Example2_Wrap.S_action1
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_TsSamples_Example3_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = TsSamples_Example3_Wrap.Constructor
#endif
                    }},
                    {"add_onClick1", new MemberRegisterInfo { Name = "add_onClick1", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = TsSamples_Example3_Wrap.A_onClick1
#endif
                    }},
                    {"remove_onClick1", new MemberRegisterInfo { Name = "remove_onClick1", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = TsSamples_Example3_Wrap.R_onClick1
#endif
                    }},
                    {"add_onClick2", new MemberRegisterInfo { Name = "add_onClick2", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = TsSamples_Example3_Wrap.A_onClick2
#endif
                    }},
                    {"remove_onClick2", new MemberRegisterInfo { Name = "remove_onClick2", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = TsSamples_Example3_Wrap.R_onClick2
#endif
                    }},
                    {"moduleName", new MemberRegisterInfo { Name = "moduleName", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = TsSamples_Example3_Wrap.G_moduleName, PropertySetter = TsSamples_Example3_Wrap.S_moduleName
#endif
                    }},
                    {"_btn", new MemberRegisterInfo { Name = "_btn", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = TsSamples_Example3_Wrap.G__btn, PropertySetter = TsSamples_Example3_Wrap.S__btn
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_TsSamples_Example4_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = TsSamples_Example4_Wrap.Constructor
#endif
                    }},
                    {"moduleName", new MemberRegisterInfo { Name = "moduleName", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = TsSamples_Example4_Wrap.G_moduleName, PropertySetter = TsSamples_Example4_Wrap.S_moduleName
#endif
                    }},
                    {"_btn", new MemberRegisterInfo { Name = "_btn", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = TsSamples_Example4_Wrap.G__btn, PropertySetter = TsSamples_Example4_Wrap.S__btn
#endif
                    }},
                    {"RotateForSeconds_static", new MemberRegisterInfo { Name = "RotateForSeconds", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = TsSamples_Example4_Wrap.F_RotateForSeconds
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_TsSamples_Example5_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = TsSamples_Example5_Wrap.Constructor
#endif
                    }},
                    {"moduleName", new MemberRegisterInfo { Name = "moduleName", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = TsSamples_Example5_Wrap.G_moduleName, PropertySetter = TsSamples_Example5_Wrap.S_moduleName
#endif
                    }},
                    {"JsStart", new MemberRegisterInfo { Name = "JsStart", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = TsSamples_Example5_Wrap.G_JsStart, PropertySetter = TsSamples_Example5_Wrap.S_JsStart
#endif
                    }},
                    {"JsUpdate", new MemberRegisterInfo { Name = "JsUpdate", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = TsSamples_Example5_Wrap.G_JsUpdate, PropertySetter = TsSamples_Example5_Wrap.S_JsUpdate
#endif
                    }},
                    {"JsOnDestory", new MemberRegisterInfo { Name = "JsOnDestory", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = TsSamples_Example5_Wrap.G_JsOnDestory, PropertySetter = TsSamples_Example5_Wrap.S_JsOnDestory
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_Puerts_JsEnv_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {".ctor", new MemberRegisterInfo { Name = ".ctor", IsStatic = false, MemberType = MemberType.Constructor, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Constructor = Puerts_JsEnv_Wrap.Constructor
#endif
                    }},
                    {"ExecuteModule", new MemberRegisterInfo { Name = "ExecuteModule", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = Puerts_JsEnv_Wrap.M_ExecuteModule
#endif
                    }},
                    {"Eval", new MemberRegisterInfo { Name = "Eval", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = Puerts_JsEnv_Wrap.M_Eval
#endif
                    }},
                    {"ClearModuleCache", new MemberRegisterInfo { Name = "ClearModuleCache", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = Puerts_JsEnv_Wrap.M_ClearModuleCache
#endif
                    }},
                    {"AddRegisterInfoGetter", new MemberRegisterInfo { Name = "AddRegisterInfoGetter", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = Puerts_JsEnv_Wrap.M_AddRegisterInfoGetter
#endif
                    }},
                    {"SetDefaultBindingMode", new MemberRegisterInfo { Name = "SetDefaultBindingMode", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = Puerts_JsEnv_Wrap.M_SetDefaultBindingMode
#endif
                    }},
                    {"RegisterGeneralGetSet", new MemberRegisterInfo { Name = "RegisterGeneralGetSet", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = Puerts_JsEnv_Wrap.M_RegisterGeneralGetSet
#endif
                    }},
                    {"GetTypeId", new MemberRegisterInfo { Name = "GetTypeId", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = Puerts_JsEnv_Wrap.M_GetTypeId
#endif
                    }},
                    {"Tick", new MemberRegisterInfo { Name = "Tick", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = Puerts_JsEnv_Wrap.M_Tick
#endif
                    }},
                    {"WaitDebugger", new MemberRegisterInfo { Name = "WaitDebugger", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = Puerts_JsEnv_Wrap.M_WaitDebugger
#endif
                    }},
                    {"WaitDebuggerAsync", new MemberRegisterInfo { Name = "WaitDebuggerAsync", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = Puerts_JsEnv_Wrap.M_WaitDebuggerAsync
#endif
                    }},
                    {"Dispose", new MemberRegisterInfo { Name = "Dispose", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = Puerts_JsEnv_Wrap.M_Dispose
#endif
                    }},
                    {"Isolate", new MemberRegisterInfo { Name = "Isolate", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = Puerts_JsEnv_Wrap.G_Isolate
#endif
                    }},
                    {"Index", new MemberRegisterInfo { Name = "Index", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = Puerts_JsEnv_Wrap.G_Index
#endif
                    }},
                    {"Backend", new MemberRegisterInfo { Name = "Backend", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = Puerts_JsEnv_Wrap.G_Backend, PropertySetter = Puerts_JsEnv_Wrap.S_Backend
#endif
                    }},
                    {"debugPort", new MemberRegisterInfo { Name = "debugPort", IsStatic = false, MemberType = MemberType.Property, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"ClearAllModuleCaches_static", new MemberRegisterInfo { Name = "ClearAllModuleCaches", IsStatic = true, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = Puerts_JsEnv_Wrap.F_ClearAllModuleCaches
#endif
                    }},
                    {"jsEnvs_static", new MemberRegisterInfo { Name = "jsEnvs", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , PropertyGetter = Puerts_JsEnv_Wrap.G_jsEnvs, PropertySetter = Puerts_JsEnv_Wrap.S_jsEnvs
#endif
                    }},
                    {"OnJsEnvCreate_static", new MemberRegisterInfo { Name = "OnJsEnvCreate", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                    {"OnJsEnvDispose_static", new MemberRegisterInfo { Name = "OnJsEnvDispose", IsStatic = true, MemberType = MemberType.Property, UseBindingMode = BindingMode.DontBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    
#endif
                    }},
                }
            };
        }
        public static RegisterInfo GetRegisterInfo_Puerts_ILoader_Wrap() 
        {
            return new RegisterInfo 
            {
#if !EXPERIMENTAL_IL2CPP_PUERTS
                BlittableCopy = false,
#endif

                Members = new System.Collections.Generic.Dictionary<string, MemberRegisterInfo>
                {
                    
                    {"FileExists", new MemberRegisterInfo { Name = "FileExists", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = Puerts_ILoader_Wrap.M_FileExists
#endif
                    }},
                    {"ReadFile", new MemberRegisterInfo { Name = "ReadFile", IsStatic = false, MemberType = MemberType.Method, UseBindingMode = BindingMode.FastBinding
#if !EXPERIMENTAL_IL2CPP_PUERTS
                    , Method = Puerts_ILoader_Wrap.M_ReadFile
#endif
                    }},
                }
            };
        }

        public static void AddRegisterInfoGetterIntoJsEnv(JsEnv jsEnv)
        {
            
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Debug), GetRegisterInfo_UnityEngine_Debug_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Vector3), GetRegisterInfo_UnityEngine_Vector3_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(System.Collections.Generic.List<int>), GetRegisterInfo_System_Collections_Generic_List_1_System_Int32__Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<int>>), GetRegisterInfo_System_Collections_Generic_Dictionary_2_System_String_System_Collections_Generic_List_1_System_Int32___Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Time), GetRegisterInfo_UnityEngine_Time_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Transform), GetRegisterInfo_UnityEngine_Transform_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Component), GetRegisterInfo_UnityEngine_Component_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.GameObject), GetRegisterInfo_UnityEngine_GameObject_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Object), GetRegisterInfo_UnityEngine_Object_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(System.Delegate), GetRegisterInfo_System_Delegate_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(System.Object), GetRegisterInfo_System_Object_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(System.Array), GetRegisterInfo_System_Array_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(System.Type), GetRegisterInfo_System_Type_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem), GetRegisterInfo_UnityEngine_ParticleSystem_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Canvas), GetRegisterInfo_UnityEngine_Canvas_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Behaviour), GetRegisterInfo_UnityEngine_Behaviour_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.MonoBehaviour), GetRegisterInfo_UnityEngine_MonoBehaviour_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.EventSystems.UIBehaviour), GetRegisterInfo_UnityEngine_EventSystems_UIBehaviour_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.Selectable), GetRegisterInfo_UnityEngine_UI_Selectable_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.Button), GetRegisterInfo_UnityEngine_UI_Button_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.Button.ButtonClickedEvent), GetRegisterInfo_UnityEngine_UI_Button_ButtonClickedEvent_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Events.UnityEvent), GetRegisterInfo_UnityEngine_Events_UnityEvent_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.InputField), GetRegisterInfo_UnityEngine_UI_InputField_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.Toggle), GetRegisterInfo_UnityEngine_UI_Toggle_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.Toggle.ToggleEvent), GetRegisterInfo_UnityEngine_UI_Toggle_ToggleEvent_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Events.UnityEvent<bool>), GetRegisterInfo_UnityEngine_Events_UnityEvent_1_System_Boolean__Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(TsSamples.Example1), GetRegisterInfo_TsSamples_Example1_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(TsSamples.Example2TestClass), GetRegisterInfo_TsSamples_Example2TestClass_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(System.Threading.Tasks.ConcurrentExclusiveSchedulerPair), GetRegisterInfo_System_Threading_Tasks_ConcurrentExclusiveSchedulerPair_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(System.Threading.Tasks.ParallelOptions), GetRegisterInfo_System_Threading_Tasks_ParallelOptions_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(System.Threading.Tasks.Parallel), GetRegisterInfo_System_Threading_Tasks_Parallel_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(System.Threading.Tasks.ParallelLoopState), GetRegisterInfo_System_Threading_Tasks_ParallelLoopState_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(System.Threading.Tasks.ParallelLoopResult), GetRegisterInfo_System_Threading_Tasks_ParallelLoopResult_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(System.Threading.Tasks.Task), GetRegisterInfo_System_Threading_Tasks_Task_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(System.Threading.Tasks.TaskCanceledException), GetRegisterInfo_System_Threading_Tasks_TaskCanceledException_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(System.Threading.Tasks.TaskFactory), GetRegisterInfo_System_Threading_Tasks_TaskFactory_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(System.Threading.Tasks.TaskScheduler), GetRegisterInfo_System_Threading_Tasks_TaskScheduler_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(System.Threading.Tasks.UnobservedTaskExceptionEventArgs), GetRegisterInfo_System_Threading_Tasks_UnobservedTaskExceptionEventArgs_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(System.Threading.Tasks.TaskSchedulerException), GetRegisterInfo_System_Threading_Tasks_TaskSchedulerException_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AndroidJavaException), GetRegisterInfo_UnityEngine_AndroidJavaException_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AndroidJavaObject), GetRegisterInfo_UnityEngine_AndroidJavaObject_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AndroidJavaClass), GetRegisterInfo_UnityEngine_AndroidJavaClass_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.jvalue), GetRegisterInfo_UnityEngine_jvalue_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AndroidJNIHelper), GetRegisterInfo_UnityEngine_AndroidJNIHelper_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AndroidJNI), GetRegisterInfo_UnityEngine_AndroidJNI_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Animator), GetRegisterInfo_UnityEngine_Animator_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.IAnimationClipSource), GetRegisterInfo_UnityEngine_IAnimationClipSource_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SharedBetweenAnimatorsAttribute), GetRegisterInfo_UnityEngine_SharedBetweenAnimatorsAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.StateMachineBehaviour), GetRegisterInfo_UnityEngine_StateMachineBehaviour_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Animation), GetRegisterInfo_UnityEngine_Animation_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AnimationState), GetRegisterInfo_UnityEngine_AnimationState_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AnimationEvent), GetRegisterInfo_UnityEngine_AnimationEvent_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AnimationClip), GetRegisterInfo_UnityEngine_AnimationClip_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AnimatorClipInfo), GetRegisterInfo_UnityEngine_AnimatorClipInfo_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AnimatorStateInfo), GetRegisterInfo_UnityEngine_AnimatorStateInfo_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AnimatorTransitionInfo), GetRegisterInfo_UnityEngine_AnimatorTransitionInfo_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.MatchTargetWeightMask), GetRegisterInfo_UnityEngine_MatchTargetWeightMask_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AnimatorControllerParameter), GetRegisterInfo_UnityEngine_AnimatorControllerParameter_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AnimatorOverrideController), GetRegisterInfo_UnityEngine_AnimatorOverrideController_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AnimatorUtility), GetRegisterInfo_UnityEngine_AnimatorUtility_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Avatar), GetRegisterInfo_UnityEngine_Avatar_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SkeletonBone), GetRegisterInfo_UnityEngine_SkeletonBone_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.HumanLimit), GetRegisterInfo_UnityEngine_HumanLimit_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.HumanBone), GetRegisterInfo_UnityEngine_HumanBone_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.HumanDescription), GetRegisterInfo_UnityEngine_HumanDescription_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AvatarBuilder), GetRegisterInfo_UnityEngine_AvatarBuilder_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AvatarMask), GetRegisterInfo_UnityEngine_AvatarMask_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.HumanPose), GetRegisterInfo_UnityEngine_HumanPose_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.HumanPoseHandler), GetRegisterInfo_UnityEngine_HumanPoseHandler_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.HumanTrait), GetRegisterInfo_UnityEngine_HumanTrait_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Motion), GetRegisterInfo_UnityEngine_Motion_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RuntimeAnimatorController), GetRegisterInfo_UnityEngine_RuntimeAnimatorController_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AssetBundle), GetRegisterInfo_UnityEngine_AssetBundle_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AssetBundleCreateRequest), GetRegisterInfo_UnityEngine_AssetBundleCreateRequest_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AssetBundleManifest), GetRegisterInfo_UnityEngine_AssetBundleManifest_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AssetBundleRecompressOperation), GetRegisterInfo_UnityEngine_AssetBundleRecompressOperation_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AssetBundleRequest), GetRegisterInfo_UnityEngine_AssetBundleRequest_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.BuildCompression), GetRegisterInfo_UnityEngine_BuildCompression_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AudioSettings), GetRegisterInfo_UnityEngine_AudioSettings_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AudioSettings.Mobile), GetRegisterInfo_UnityEngine_AudioSettings_Mobile_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AudioSource), GetRegisterInfo_UnityEngine_AudioSource_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AudioLowPassFilter), GetRegisterInfo_UnityEngine_AudioLowPassFilter_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AudioHighPassFilter), GetRegisterInfo_UnityEngine_AudioHighPassFilter_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AudioReverbFilter), GetRegisterInfo_UnityEngine_AudioReverbFilter_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AudioConfiguration), GetRegisterInfo_UnityEngine_AudioConfiguration_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AudioClip), GetRegisterInfo_UnityEngine_AudioClip_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AudioBehaviour), GetRegisterInfo_UnityEngine_AudioBehaviour_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AudioListener), GetRegisterInfo_UnityEngine_AudioListener_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AudioReverbZone), GetRegisterInfo_UnityEngine_AudioReverbZone_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AudioDistortionFilter), GetRegisterInfo_UnityEngine_AudioDistortionFilter_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AudioEchoFilter), GetRegisterInfo_UnityEngine_AudioEchoFilter_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AudioChorusFilter), GetRegisterInfo_UnityEngine_AudioChorusFilter_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Microphone), GetRegisterInfo_UnityEngine_Microphone_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AudioRenderer), GetRegisterInfo_UnityEngine_AudioRenderer_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.WebCamDevice), GetRegisterInfo_UnityEngine_WebCamDevice_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.WebCamTexture), GetRegisterInfo_UnityEngine_WebCamTexture_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ClothSphereColliderPair), GetRegisterInfo_UnityEngine_ClothSphereColliderPair_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ClothSkinningCoefficient), GetRegisterInfo_UnityEngine_ClothSkinningCoefficient_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Cloth), GetRegisterInfo_UnityEngine_Cloth_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ClusterSerialization), GetRegisterInfo_UnityEngine_ClusterSerialization_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SortingLayer), GetRegisterInfo_UnityEngine_SortingLayer_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Keyframe), GetRegisterInfo_UnityEngine_Keyframe_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AnimationCurve), GetRegisterInfo_UnityEngine_AnimationCurve_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Application), GetRegisterInfo_UnityEngine_Application_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CachedAssetBundle), GetRegisterInfo_UnityEngine_CachedAssetBundle_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Cache), GetRegisterInfo_UnityEngine_Cache_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Camera), GetRegisterInfo_UnityEngine_Camera_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Camera.GateFitParameters), GetRegisterInfo_UnityEngine_Camera_GateFitParameters_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Camera.RenderRequest), GetRegisterInfo_UnityEngine_Camera_RenderRequest_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.BoundingSphere), GetRegisterInfo_UnityEngine_BoundingSphere_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CullingGroupEvent), GetRegisterInfo_UnityEngine_CullingGroupEvent_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CullingGroup), GetRegisterInfo_UnityEngine_CullingGroup_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.FlareLayer), GetRegisterInfo_UnityEngine_FlareLayer_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ReflectionProbe), GetRegisterInfo_UnityEngine_ReflectionProbe_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CloudStreaming), GetRegisterInfo_UnityEngine_CloudStreaming_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CrashReport), GetRegisterInfo_UnityEngine_CrashReport_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ExposedPropertyResolver), GetRegisterInfo_UnityEngine_ExposedPropertyResolver_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.IExposedPropertyTable), GetRegisterInfo_UnityEngine_IExposedPropertyTable_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Bounds), GetRegisterInfo_UnityEngine_Bounds_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.BoundsInt), GetRegisterInfo_UnityEngine_BoundsInt_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.BoundsInt.PositionEnumerator), GetRegisterInfo_UnityEngine_BoundsInt_PositionEnumerator_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.GeometryUtility), GetRegisterInfo_UnityEngine_GeometryUtility_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Plane), GetRegisterInfo_UnityEngine_Plane_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Ray), GetRegisterInfo_UnityEngine_Ray_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Ray2D), GetRegisterInfo_UnityEngine_Ray2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Rect), GetRegisterInfo_UnityEngine_Rect_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RectInt), GetRegisterInfo_UnityEngine_RectInt_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RectInt.PositionEnumerator), GetRegisterInfo_UnityEngine_RectInt_PositionEnumerator_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RectOffset), GetRegisterInfo_UnityEngine_RectOffset_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.DynamicGI), GetRegisterInfo_UnityEngine_DynamicGI_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.LightingSettings), GetRegisterInfo_UnityEngine_LightingSettings_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Gizmos), GetRegisterInfo_UnityEngine_Gizmos_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.BeforeRenderOrderAttribute), GetRegisterInfo_UnityEngine_BeforeRenderOrderAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.BillboardAsset), GetRegisterInfo_UnityEngine_BillboardAsset_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.BillboardRenderer), GetRegisterInfo_UnityEngine_BillboardRenderer_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CustomRenderTextureManager), GetRegisterInfo_UnityEngine_CustomRenderTextureManager_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Display), GetRegisterInfo_UnityEngine_Display_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SleepTimeout), GetRegisterInfo_UnityEngine_SleepTimeout_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Screen), GetRegisterInfo_UnityEngine_Screen_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RenderBuffer), GetRegisterInfo_UnityEngine_RenderBuffer_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Graphics), GetRegisterInfo_UnityEngine_Graphics_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.GL), GetRegisterInfo_UnityEngine_GL_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ScalableBufferManager), GetRegisterInfo_UnityEngine_ScalableBufferManager_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.FrameTiming), GetRegisterInfo_UnityEngine_FrameTiming_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.FrameTimingManager), GetRegisterInfo_UnityEngine_FrameTimingManager_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.LightmapData), GetRegisterInfo_UnityEngine_LightmapData_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.LightmapSettings), GetRegisterInfo_UnityEngine_LightmapSettings_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.LightProbes), GetRegisterInfo_UnityEngine_LightProbes_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.HDROutputSettings), GetRegisterInfo_UnityEngine_HDROutputSettings_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Resolution), GetRegisterInfo_UnityEngine_Resolution_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RenderTargetSetup), GetRegisterInfo_UnityEngine_RenderTargetSetup_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.QualitySettings), GetRegisterInfo_UnityEngine_QualitySettings_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RendererExtensions), GetRegisterInfo_UnityEngine_RendererExtensions_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ImageEffectTransformsToLDR), GetRegisterInfo_UnityEngine_ImageEffectTransformsToLDR_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ImageEffectAllowedInSceneView), GetRegisterInfo_UnityEngine_ImageEffectAllowedInSceneView_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ImageEffectOpaque), GetRegisterInfo_UnityEngine_ImageEffectOpaque_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ImageEffectAfterScale), GetRegisterInfo_UnityEngine_ImageEffectAfterScale_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ImageEffectUsesCommandBuffer), GetRegisterInfo_UnityEngine_ImageEffectUsesCommandBuffer_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Mesh), GetRegisterInfo_UnityEngine_Mesh_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Mesh.MeshData), GetRegisterInfo_UnityEngine_Mesh_MeshData_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Mesh.MeshDataArray), GetRegisterInfo_UnityEngine_Mesh_MeshDataArray_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Renderer), GetRegisterInfo_UnityEngine_Renderer_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Projector), GetRegisterInfo_UnityEngine_Projector_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Shader), GetRegisterInfo_UnityEngine_Shader_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.TrailRenderer), GetRegisterInfo_UnityEngine_TrailRenderer_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.LineRenderer), GetRegisterInfo_UnityEngine_LineRenderer_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.MaterialPropertyBlock), GetRegisterInfo_UnityEngine_MaterialPropertyBlock_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RenderSettings), GetRegisterInfo_UnityEngine_RenderSettings_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Material), GetRegisterInfo_UnityEngine_Material_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.GraphicsBuffer), GetRegisterInfo_UnityEngine_GraphicsBuffer_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.OcclusionPortal), GetRegisterInfo_UnityEngine_OcclusionPortal_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.OcclusionArea), GetRegisterInfo_UnityEngine_OcclusionArea_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Flare), GetRegisterInfo_UnityEngine_Flare_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.LensFlare), GetRegisterInfo_UnityEngine_LensFlare_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.LightBakingOutput), GetRegisterInfo_UnityEngine_LightBakingOutput_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Light), GetRegisterInfo_UnityEngine_Light_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Skybox), GetRegisterInfo_UnityEngine_Skybox_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.MeshFilter), GetRegisterInfo_UnityEngine_MeshFilter_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.LightProbeProxyVolume), GetRegisterInfo_UnityEngine_LightProbeProxyVolume_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SkinnedMeshRenderer), GetRegisterInfo_UnityEngine_SkinnedMeshRenderer_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.LightProbeGroup), GetRegisterInfo_UnityEngine_LightProbeGroup_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.LineUtility), GetRegisterInfo_UnityEngine_LineUtility_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.LOD), GetRegisterInfo_UnityEngine_LOD_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.LODGroup), GetRegisterInfo_UnityEngine_LODGroup_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.BoneWeight), GetRegisterInfo_UnityEngine_BoneWeight_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.BoneWeight1), GetRegisterInfo_UnityEngine_BoneWeight1_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CombineInstance), GetRegisterInfo_UnityEngine_CombineInstance_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Texture), GetRegisterInfo_UnityEngine_Texture_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Texture2D), GetRegisterInfo_UnityEngine_Texture2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Cubemap), GetRegisterInfo_UnityEngine_Cubemap_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Texture3D), GetRegisterInfo_UnityEngine_Texture3D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Texture2DArray), GetRegisterInfo_UnityEngine_Texture2DArray_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CubemapArray), GetRegisterInfo_UnityEngine_CubemapArray_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SparseTexture), GetRegisterInfo_UnityEngine_SparseTexture_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RenderTexture), GetRegisterInfo_UnityEngine_RenderTexture_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CustomRenderTextureUpdateZone), GetRegisterInfo_UnityEngine_CustomRenderTextureUpdateZone_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CustomRenderTexture), GetRegisterInfo_UnityEngine_CustomRenderTexture_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RenderTextureDescriptor), GetRegisterInfo_UnityEngine_RenderTextureDescriptor_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Hash128), GetRegisterInfo_UnityEngine_Hash128_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.HashUtilities), GetRegisterInfo_UnityEngine_HashUtilities_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.HashUnsafeUtilities), GetRegisterInfo_UnityEngine_HashUnsafeUtilities_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Cursor), GetRegisterInfo_UnityEngine_Cursor_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ILogger), GetRegisterInfo_UnityEngine_ILogger_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ILogHandler), GetRegisterInfo_UnityEngine_ILogHandler_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Logger), GetRegisterInfo_UnityEngine_Logger_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Color), GetRegisterInfo_UnityEngine_Color_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Color32), GetRegisterInfo_UnityEngine_Color32_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ColorUtility), GetRegisterInfo_UnityEngine_ColorUtility_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.GradientColorKey), GetRegisterInfo_UnityEngine_GradientColorKey_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.GradientAlphaKey), GetRegisterInfo_UnityEngine_GradientAlphaKey_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Gradient), GetRegisterInfo_UnityEngine_Gradient_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.FrustumPlanes), GetRegisterInfo_UnityEngine_FrustumPlanes_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Matrix4x4), GetRegisterInfo_UnityEngine_Matrix4x4_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Quaternion), GetRegisterInfo_UnityEngine_Quaternion_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Mathf), GetRegisterInfo_UnityEngine_Mathf_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Vector2), GetRegisterInfo_UnityEngine_Vector2_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Vector2Int), GetRegisterInfo_UnityEngine_Vector2Int_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Vector3Int), GetRegisterInfo_UnityEngine_Vector3Int_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Vector4), GetRegisterInfo_UnityEngine_Vector4_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Ping), GetRegisterInfo_UnityEngine_Ping_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.PlayerPrefsException), GetRegisterInfo_UnityEngine_PlayerPrefsException_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.PlayerPrefs), GetRegisterInfo_UnityEngine_PlayerPrefs_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.PropertyAttribute), GetRegisterInfo_UnityEngine_PropertyAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ContextMenuItemAttribute), GetRegisterInfo_UnityEngine_ContextMenuItemAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.InspectorNameAttribute), GetRegisterInfo_UnityEngine_InspectorNameAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.TooltipAttribute), GetRegisterInfo_UnityEngine_TooltipAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SpaceAttribute), GetRegisterInfo_UnityEngine_SpaceAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.HeaderAttribute), GetRegisterInfo_UnityEngine_HeaderAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RangeAttribute), GetRegisterInfo_UnityEngine_RangeAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.MinAttribute), GetRegisterInfo_UnityEngine_MinAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.MultilineAttribute), GetRegisterInfo_UnityEngine_MultilineAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.TextAreaAttribute), GetRegisterInfo_UnityEngine_TextAreaAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ColorUsageAttribute), GetRegisterInfo_UnityEngine_ColorUsageAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.GradientUsageAttribute), GetRegisterInfo_UnityEngine_GradientUsageAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.DelayedAttribute), GetRegisterInfo_UnityEngine_DelayedAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.NonReorderableAttribute), GetRegisterInfo_UnityEngine_NonReorderableAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.PropertyName), GetRegisterInfo_UnityEngine_PropertyName_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Random), GetRegisterInfo_UnityEngine_Random_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Random.State), GetRegisterInfo_UnityEngine_Random_State_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ResourceRequest), GetRegisterInfo_UnityEngine_ResourceRequest_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ResourcesAPI), GetRegisterInfo_UnityEngine_ResourcesAPI_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Resources), GetRegisterInfo_UnityEngine_Resources_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AsyncOperation), GetRegisterInfo_UnityEngine_AsyncOperation_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.DisallowMultipleComponent), GetRegisterInfo_UnityEngine_DisallowMultipleComponent_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RequireComponent), GetRegisterInfo_UnityEngine_RequireComponent_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AddComponentMenu), GetRegisterInfo_UnityEngine_AddComponentMenu_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CreateAssetMenuAttribute), GetRegisterInfo_UnityEngine_CreateAssetMenuAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ContextMenu), GetRegisterInfo_UnityEngine_ContextMenu_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ExecuteInEditMode), GetRegisterInfo_UnityEngine_ExecuteInEditMode_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ExecuteAlways), GetRegisterInfo_UnityEngine_ExecuteAlways_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.HideInInspector), GetRegisterInfo_UnityEngine_HideInInspector_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.HelpURLAttribute), GetRegisterInfo_UnityEngine_HelpURLAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.DefaultExecutionOrder), GetRegisterInfo_UnityEngine_DefaultExecutionOrder_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AssemblyIsEditorAssembly), GetRegisterInfo_UnityEngine_AssemblyIsEditorAssembly_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ExcludeFromPresetAttribute), GetRegisterInfo_UnityEngine_ExcludeFromPresetAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Coroutine), GetRegisterInfo_UnityEngine_Coroutine_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CustomYieldInstruction), GetRegisterInfo_UnityEngine_CustomYieldInstruction_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ExcludeFromObjectFactoryAttribute), GetRegisterInfo_UnityEngine_ExcludeFromObjectFactoryAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.LayerMask), GetRegisterInfo_UnityEngine_LayerMask_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RangeInt), GetRegisterInfo_UnityEngine_RangeInt_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RuntimeInitializeOnLoadMethodAttribute), GetRegisterInfo_UnityEngine_RuntimeInitializeOnLoadMethodAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ScriptableObject), GetRegisterInfo_UnityEngine_ScriptableObject_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SelectionBaseAttribute), GetRegisterInfo_UnityEngine_SelectionBaseAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.StackTraceUtility), GetRegisterInfo_UnityEngine_StackTraceUtility_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UnityException), GetRegisterInfo_UnityEngine_UnityException_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.MissingComponentException), GetRegisterInfo_UnityEngine_MissingComponentException_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UnassignedReferenceException), GetRegisterInfo_UnityEngine_UnassignedReferenceException_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.MissingReferenceException), GetRegisterInfo_UnityEngine_MissingReferenceException_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.TextAsset), GetRegisterInfo_UnityEngine_TextAsset_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.TrackedReference), GetRegisterInfo_UnityEngine_TrackedReference_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UnityAPICompatibilityVersionAttribute), GetRegisterInfo_UnityEngine_UnityAPICompatibilityVersionAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.WaitForEndOfFrame), GetRegisterInfo_UnityEngine_WaitForEndOfFrame_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.WaitForFixedUpdate), GetRegisterInfo_UnityEngine_WaitForFixedUpdate_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.WaitForSeconds), GetRegisterInfo_UnityEngine_WaitForSeconds_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.WaitForSecondsRealtime), GetRegisterInfo_UnityEngine_WaitForSecondsRealtime_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.WaitUntil), GetRegisterInfo_UnityEngine_WaitUntil_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.WaitWhile), GetRegisterInfo_UnityEngine_WaitWhile_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.YieldInstruction), GetRegisterInfo_UnityEngine_YieldInstruction_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Security), GetRegisterInfo_UnityEngine_Security_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Types), GetRegisterInfo_UnityEngine_Types_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SerializeField), GetRegisterInfo_UnityEngine_SerializeField_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SerializeReference), GetRegisterInfo_UnityEngine_SerializeReference_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.PreferBinarySerialization), GetRegisterInfo_UnityEngine_PreferBinarySerialization_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ISerializationCallbackReceiver), GetRegisterInfo_UnityEngine_ISerializationCallbackReceiver_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ComputeBuffer), GetRegisterInfo_UnityEngine_ComputeBuffer_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ComputeShader), GetRegisterInfo_UnityEngine_ComputeShader_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ShaderVariantCollection), GetRegisterInfo_UnityEngine_ShaderVariantCollection_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ShaderVariantCollection.ShaderVariant), GetRegisterInfo_UnityEngine_ShaderVariantCollection_ShaderVariant_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Snapping), GetRegisterInfo_UnityEngine_Snapping_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.StaticBatchingUtility), GetRegisterInfo_UnityEngine_StaticBatchingUtility_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SystemInfo), GetRegisterInfo_UnityEngine_SystemInfo_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.TouchScreenKeyboard), GetRegisterInfo_UnityEngine_TouchScreenKeyboard_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.TouchScreenKeyboard.Android), GetRegisterInfo_UnityEngine_TouchScreenKeyboard_Android_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UnityEventQueueSystem), GetRegisterInfo_UnityEngine_UnityEventQueueSystem_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Pose), GetRegisterInfo_UnityEngine_Pose_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.DrivenRectTransformTracker), GetRegisterInfo_UnityEngine_DrivenRectTransformTracker_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RectTransform), GetRegisterInfo_UnityEngine_RectTransform_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SpriteRenderer), GetRegisterInfo_UnityEngine_SpriteRenderer_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SecondarySpriteTexture), GetRegisterInfo_UnityEngine_SecondarySpriteTexture_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Sprite), GetRegisterInfo_UnityEngine_Sprite_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Social), GetRegisterInfo_UnityEngine_Social_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Grid), GetRegisterInfo_UnityEngine_Grid_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.GridLayout), GetRegisterInfo_UnityEngine_GridLayout_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Event), GetRegisterInfo_UnityEngine_Event_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.GUI), GetRegisterInfo_UnityEngine_GUI_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.GUI.Scope), GetRegisterInfo_UnityEngine_GUI_Scope_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.GUIContent), GetRegisterInfo_UnityEngine_GUIContent_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.GUILayout), GetRegisterInfo_UnityEngine_GUILayout_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.GUILayoutOption), GetRegisterInfo_UnityEngine_GUILayoutOption_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.GUILayoutUtility), GetRegisterInfo_UnityEngine_GUILayoutUtility_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.GUISettings), GetRegisterInfo_UnityEngine_GUISettings_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.GUISkin), GetRegisterInfo_UnityEngine_GUISkin_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.GUIStyleState), GetRegisterInfo_UnityEngine_GUIStyleState_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.GUIStyle), GetRegisterInfo_UnityEngine_GUIStyle_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.GUITargetAttribute), GetRegisterInfo_UnityEngine_GUITargetAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.GUIUtility), GetRegisterInfo_UnityEngine_GUIUtility_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ExitGUIException), GetRegisterInfo_UnityEngine_ExitGUIException_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.TextEditor), GetRegisterInfo_UnityEngine_TextEditor_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ImageConversion), GetRegisterInfo_UnityEngine_ImageConversion_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Touch), GetRegisterInfo_UnityEngine_Touch_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AccelerationEvent), GetRegisterInfo_UnityEngine_AccelerationEvent_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Gyroscope), GetRegisterInfo_UnityEngine_Gyroscope_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.LocationInfo), GetRegisterInfo_UnityEngine_LocationInfo_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.LocationService), GetRegisterInfo_UnityEngine_LocationService_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Compass), GetRegisterInfo_UnityEngine_Compass_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Input), GetRegisterInfo_UnityEngine_Input_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.JsonUtility), GetRegisterInfo_UnityEngine_JsonUtility_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.LocalizationAsset), GetRegisterInfo_UnityEngine_LocalizationAsset_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.MinMaxCurve), GetRegisterInfo_UnityEngine_ParticleSystem_MinMaxCurve_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.MainModule), GetRegisterInfo_UnityEngine_ParticleSystem_MainModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.EmissionModule), GetRegisterInfo_UnityEngine_ParticleSystem_EmissionModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.ShapeModule), GetRegisterInfo_UnityEngine_ParticleSystem_ShapeModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.CollisionModule), GetRegisterInfo_UnityEngine_ParticleSystem_CollisionModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.TriggerModule), GetRegisterInfo_UnityEngine_ParticleSystem_TriggerModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.SubEmittersModule), GetRegisterInfo_UnityEngine_ParticleSystem_SubEmittersModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.TextureSheetAnimationModule), GetRegisterInfo_UnityEngine_ParticleSystem_TextureSheetAnimationModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.Particle), GetRegisterInfo_UnityEngine_ParticleSystem_Particle_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.Burst), GetRegisterInfo_UnityEngine_ParticleSystem_Burst_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.MinMaxGradient), GetRegisterInfo_UnityEngine_ParticleSystem_MinMaxGradient_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.EmitParams), GetRegisterInfo_UnityEngine_ParticleSystem_EmitParams_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.PlaybackState), GetRegisterInfo_UnityEngine_ParticleSystem_PlaybackState_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.Trails), GetRegisterInfo_UnityEngine_ParticleSystem_Trails_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.ColliderData), GetRegisterInfo_UnityEngine_ParticleSystem_ColliderData_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.VelocityOverLifetimeModule), GetRegisterInfo_UnityEngine_ParticleSystem_VelocityOverLifetimeModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule), GetRegisterInfo_UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.InheritVelocityModule), GetRegisterInfo_UnityEngine_ParticleSystem_InheritVelocityModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.LifetimeByEmitterSpeedModule), GetRegisterInfo_UnityEngine_ParticleSystem_LifetimeByEmitterSpeedModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.ForceOverLifetimeModule), GetRegisterInfo_UnityEngine_ParticleSystem_ForceOverLifetimeModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.ColorOverLifetimeModule), GetRegisterInfo_UnityEngine_ParticleSystem_ColorOverLifetimeModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.ColorBySpeedModule), GetRegisterInfo_UnityEngine_ParticleSystem_ColorBySpeedModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.SizeOverLifetimeModule), GetRegisterInfo_UnityEngine_ParticleSystem_SizeOverLifetimeModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.SizeBySpeedModule), GetRegisterInfo_UnityEngine_ParticleSystem_SizeBySpeedModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.RotationOverLifetimeModule), GetRegisterInfo_UnityEngine_ParticleSystem_RotationOverLifetimeModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.RotationBySpeedModule), GetRegisterInfo_UnityEngine_ParticleSystem_RotationBySpeedModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.ExternalForcesModule), GetRegisterInfo_UnityEngine_ParticleSystem_ExternalForcesModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.NoiseModule), GetRegisterInfo_UnityEngine_ParticleSystem_NoiseModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.LightsModule), GetRegisterInfo_UnityEngine_ParticleSystem_LightsModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.TrailModule), GetRegisterInfo_UnityEngine_ParticleSystem_TrailModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystem.CustomDataModule), GetRegisterInfo_UnityEngine_ParticleSystem_CustomDataModule_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticlePhysicsExtensions), GetRegisterInfo_UnityEngine_ParticlePhysicsExtensions_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleCollisionEvent), GetRegisterInfo_UnityEngine_ParticleCollisionEvent_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ParticleSystemForceField), GetRegisterInfo_UnityEngine_ParticleSystemForceField_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.WheelFrictionCurve), GetRegisterInfo_UnityEngine_WheelFrictionCurve_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SoftJointLimit), GetRegisterInfo_UnityEngine_SoftJointLimit_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SoftJointLimitSpring), GetRegisterInfo_UnityEngine_SoftJointLimitSpring_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.JointDrive), GetRegisterInfo_UnityEngine_JointDrive_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.JointMotor), GetRegisterInfo_UnityEngine_JointMotor_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.JointSpring), GetRegisterInfo_UnityEngine_JointSpring_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.JointLimits), GetRegisterInfo_UnityEngine_JointLimits_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ControllerColliderHit), GetRegisterInfo_UnityEngine_ControllerColliderHit_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Collision), GetRegisterInfo_UnityEngine_Collision_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.PhysicMaterial), GetRegisterInfo_UnityEngine_PhysicMaterial_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RaycastHit), GetRegisterInfo_UnityEngine_RaycastHit_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Rigidbody), GetRegisterInfo_UnityEngine_Rigidbody_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Collider), GetRegisterInfo_UnityEngine_Collider_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CharacterController), GetRegisterInfo_UnityEngine_CharacterController_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.MeshCollider), GetRegisterInfo_UnityEngine_MeshCollider_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CapsuleCollider), GetRegisterInfo_UnityEngine_CapsuleCollider_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.BoxCollider), GetRegisterInfo_UnityEngine_BoxCollider_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SphereCollider), GetRegisterInfo_UnityEngine_SphereCollider_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ConstantForce), GetRegisterInfo_UnityEngine_ConstantForce_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Joint), GetRegisterInfo_UnityEngine_Joint_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.HingeJoint), GetRegisterInfo_UnityEngine_HingeJoint_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SpringJoint), GetRegisterInfo_UnityEngine_SpringJoint_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.FixedJoint), GetRegisterInfo_UnityEngine_FixedJoint_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CharacterJoint), GetRegisterInfo_UnityEngine_CharacterJoint_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ConfigurableJoint), GetRegisterInfo_UnityEngine_ConfigurableJoint_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ContactPoint), GetRegisterInfo_UnityEngine_ContactPoint_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.PhysicsScene), GetRegisterInfo_UnityEngine_PhysicsScene_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.PhysicsSceneExtensions), GetRegisterInfo_UnityEngine_PhysicsSceneExtensions_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ArticulationDrive), GetRegisterInfo_UnityEngine_ArticulationDrive_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ArticulationReducedSpace), GetRegisterInfo_UnityEngine_ArticulationReducedSpace_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ArticulationJacobian), GetRegisterInfo_UnityEngine_ArticulationJacobian_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ArticulationBody), GetRegisterInfo_UnityEngine_ArticulationBody_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Physics), GetRegisterInfo_UnityEngine_Physics_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RaycastCommand), GetRegisterInfo_UnityEngine_RaycastCommand_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SpherecastCommand), GetRegisterInfo_UnityEngine_SpherecastCommand_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CapsulecastCommand), GetRegisterInfo_UnityEngine_CapsulecastCommand_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.BoxcastCommand), GetRegisterInfo_UnityEngine_BoxcastCommand_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.PhysicsScene2D), GetRegisterInfo_UnityEngine_PhysicsScene2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.PhysicsSceneExtensions2D), GetRegisterInfo_UnityEngine_PhysicsSceneExtensions2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Physics2D), GetRegisterInfo_UnityEngine_Physics2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ColliderDistance2D), GetRegisterInfo_UnityEngine_ColliderDistance2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ContactFilter2D), GetRegisterInfo_UnityEngine_ContactFilter2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Collision2D), GetRegisterInfo_UnityEngine_Collision2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ContactPoint2D), GetRegisterInfo_UnityEngine_ContactPoint2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.JointAngleLimits2D), GetRegisterInfo_UnityEngine_JointAngleLimits2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.JointTranslationLimits2D), GetRegisterInfo_UnityEngine_JointTranslationLimits2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.JointMotor2D), GetRegisterInfo_UnityEngine_JointMotor2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.JointSuspension2D), GetRegisterInfo_UnityEngine_JointSuspension2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RaycastHit2D), GetRegisterInfo_UnityEngine_RaycastHit2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.PhysicsJobOptions2D), GetRegisterInfo_UnityEngine_PhysicsJobOptions2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Rigidbody2D), GetRegisterInfo_UnityEngine_Rigidbody2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Collider2D), GetRegisterInfo_UnityEngine_Collider2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CircleCollider2D), GetRegisterInfo_UnityEngine_CircleCollider2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CapsuleCollider2D), GetRegisterInfo_UnityEngine_CapsuleCollider2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.EdgeCollider2D), GetRegisterInfo_UnityEngine_EdgeCollider2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.BoxCollider2D), GetRegisterInfo_UnityEngine_BoxCollider2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.PolygonCollider2D), GetRegisterInfo_UnityEngine_PolygonCollider2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CompositeCollider2D), GetRegisterInfo_UnityEngine_CompositeCollider2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Joint2D), GetRegisterInfo_UnityEngine_Joint2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AnchoredJoint2D), GetRegisterInfo_UnityEngine_AnchoredJoint2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SpringJoint2D), GetRegisterInfo_UnityEngine_SpringJoint2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.DistanceJoint2D), GetRegisterInfo_UnityEngine_DistanceJoint2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.FrictionJoint2D), GetRegisterInfo_UnityEngine_FrictionJoint2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.HingeJoint2D), GetRegisterInfo_UnityEngine_HingeJoint2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RelativeJoint2D), GetRegisterInfo_UnityEngine_RelativeJoint2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SliderJoint2D), GetRegisterInfo_UnityEngine_SliderJoint2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.TargetJoint2D), GetRegisterInfo_UnityEngine_TargetJoint2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.FixedJoint2D), GetRegisterInfo_UnityEngine_FixedJoint2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.WheelJoint2D), GetRegisterInfo_UnityEngine_WheelJoint2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Effector2D), GetRegisterInfo_UnityEngine_Effector2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.AreaEffector2D), GetRegisterInfo_UnityEngine_AreaEffector2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.BuoyancyEffector2D), GetRegisterInfo_UnityEngine_BuoyancyEffector2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.PointEffector2D), GetRegisterInfo_UnityEngine_PointEffector2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.PlatformEffector2D), GetRegisterInfo_UnityEngine_PlatformEffector2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SurfaceEffector2D), GetRegisterInfo_UnityEngine_SurfaceEffector2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.PhysicsUpdateBehaviour2D), GetRegisterInfo_UnityEngine_PhysicsUpdateBehaviour2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ConstantForce2D), GetRegisterInfo_UnityEngine_ConstantForce2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.PhysicsMaterial2D), GetRegisterInfo_UnityEngine_PhysicsMaterial2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ScreenCapture), GetRegisterInfo_UnityEngine_ScreenCapture_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SpriteMask), GetRegisterInfo_UnityEngine_SpriteMask_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.StreamingController), GetRegisterInfo_UnityEngine_StreamingController_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.IntegratedSubsystem), GetRegisterInfo_UnityEngine_IntegratedSubsystem_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.IntegratedSubsystemDescriptor), GetRegisterInfo_UnityEngine_IntegratedSubsystemDescriptor_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ISubsystem), GetRegisterInfo_UnityEngine_ISubsystem_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ISubsystemDescriptor), GetRegisterInfo_UnityEngine_ISubsystemDescriptor_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Subsystem), GetRegisterInfo_UnityEngine_Subsystem_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SubsystemDescriptor), GetRegisterInfo_UnityEngine_SubsystemDescriptor_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SubsystemManager), GetRegisterInfo_UnityEngine_SubsystemManager_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Terrain), GetRegisterInfo_UnityEngine_Terrain_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.TerrainExtensions), GetRegisterInfo_UnityEngine_TerrainExtensions_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Tree), GetRegisterInfo_UnityEngine_Tree_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.TreePrototype), GetRegisterInfo_UnityEngine_TreePrototype_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.DetailPrototype), GetRegisterInfo_UnityEngine_DetailPrototype_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.SplatPrototype), GetRegisterInfo_UnityEngine_SplatPrototype_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.TreeInstance), GetRegisterInfo_UnityEngine_TreeInstance_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.PatchExtents), GetRegisterInfo_UnityEngine_PatchExtents_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.TerrainLayer), GetRegisterInfo_UnityEngine_TerrainLayer_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.TerrainCollider), GetRegisterInfo_UnityEngine_TerrainCollider_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.TextGenerationSettings), GetRegisterInfo_UnityEngine_TextGenerationSettings_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.TextGenerator), GetRegisterInfo_UnityEngine_TextGenerator_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.TextMesh), GetRegisterInfo_UnityEngine_TextMesh_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CharacterInfo), GetRegisterInfo_UnityEngine_CharacterInfo_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UICharInfo), GetRegisterInfo_UnityEngine_UICharInfo_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UILineInfo), GetRegisterInfo_UnityEngine_UILineInfo_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UIVertex), GetRegisterInfo_UnityEngine_UIVertex_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.Font), GetRegisterInfo_UnityEngine_Font_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CustomGridBrushAttribute), GetRegisterInfo_UnityEngine_CustomGridBrushAttribute_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.GridBrushBase), GetRegisterInfo_UnityEngine_GridBrushBase_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.ICanvasRaycastFilter), GetRegisterInfo_UnityEngine_ICanvasRaycastFilter_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CanvasGroup), GetRegisterInfo_UnityEngine_CanvasGroup_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.CanvasRenderer), GetRegisterInfo_UnityEngine_CanvasRenderer_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RectTransformUtility), GetRegisterInfo_UnityEngine_RectTransformUtility_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UISystemProfilerApi), GetRegisterInfo_UnityEngine_UISystemProfilerApi_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UIWidgetsInternal), GetRegisterInfo_UnityEngine_UIWidgetsInternal_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RemoteSettings), GetRegisterInfo_UnityEngine_RemoteSettings_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.RemoteConfigSettings), GetRegisterInfo_UnityEngine_RemoteConfigSettings_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.WWWForm), GetRegisterInfo_UnityEngine_WWWForm_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.WWWAudioExtensions), GetRegisterInfo_UnityEngine_WWWAudioExtensions_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.WheelHit), GetRegisterInfo_UnityEngine_WheelHit_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.WheelCollider), GetRegisterInfo_UnityEngine_WheelCollider_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.WindZone), GetRegisterInfo_UnityEngine_WindZone_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(System.Threading.Tasks.TaskExtensions), GetRegisterInfo_System_Threading_Tasks_TaskExtensions_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.AnimationTriggers), GetRegisterInfo_UnityEngine_UI_AnimationTriggers_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.ICanvasElement), GetRegisterInfo_UnityEngine_UI_ICanvasElement_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.CanvasUpdateRegistry), GetRegisterInfo_UnityEngine_UI_CanvasUpdateRegistry_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.ColorBlock), GetRegisterInfo_UnityEngine_UI_ColorBlock_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.ClipperRegistry), GetRegisterInfo_UnityEngine_UI_ClipperRegistry_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.Clipping), GetRegisterInfo_UnityEngine_UI_Clipping_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.IClipper), GetRegisterInfo_UnityEngine_UI_IClipper_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.IClippable), GetRegisterInfo_UnityEngine_UI_IClippable_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.Dropdown), GetRegisterInfo_UnityEngine_UI_Dropdown_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.FontData), GetRegisterInfo_UnityEngine_UI_FontData_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.FontUpdateTracker), GetRegisterInfo_UnityEngine_UI_FontUpdateTracker_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.Graphic), GetRegisterInfo_UnityEngine_UI_Graphic_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.GraphicRaycaster), GetRegisterInfo_UnityEngine_UI_GraphicRaycaster_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.GraphicRegistry), GetRegisterInfo_UnityEngine_UI_GraphicRegistry_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.IMaskable), GetRegisterInfo_UnityEngine_UI_IMaskable_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.Image), GetRegisterInfo_UnityEngine_UI_Image_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.AspectRatioFitter), GetRegisterInfo_UnityEngine_UI_AspectRatioFitter_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.CanvasScaler), GetRegisterInfo_UnityEngine_UI_CanvasScaler_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.ContentSizeFitter), GetRegisterInfo_UnityEngine_UI_ContentSizeFitter_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.GridLayoutGroup), GetRegisterInfo_UnityEngine_UI_GridLayoutGroup_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.HorizontalLayoutGroup), GetRegisterInfo_UnityEngine_UI_HorizontalLayoutGroup_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.HorizontalOrVerticalLayoutGroup), GetRegisterInfo_UnityEngine_UI_HorizontalOrVerticalLayoutGroup_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.ILayoutElement), GetRegisterInfo_UnityEngine_UI_ILayoutElement_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.ILayoutController), GetRegisterInfo_UnityEngine_UI_ILayoutController_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.ILayoutGroup), GetRegisterInfo_UnityEngine_UI_ILayoutGroup_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.ILayoutSelfController), GetRegisterInfo_UnityEngine_UI_ILayoutSelfController_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.ILayoutIgnorer), GetRegisterInfo_UnityEngine_UI_ILayoutIgnorer_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.LayoutElement), GetRegisterInfo_UnityEngine_UI_LayoutElement_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.LayoutGroup), GetRegisterInfo_UnityEngine_UI_LayoutGroup_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.LayoutRebuilder), GetRegisterInfo_UnityEngine_UI_LayoutRebuilder_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.LayoutUtility), GetRegisterInfo_UnityEngine_UI_LayoutUtility_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.VerticalLayoutGroup), GetRegisterInfo_UnityEngine_UI_VerticalLayoutGroup_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.Mask), GetRegisterInfo_UnityEngine_UI_Mask_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.MaskUtilities), GetRegisterInfo_UnityEngine_UI_MaskUtilities_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.MaskableGraphic), GetRegisterInfo_UnityEngine_UI_MaskableGraphic_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.IMaterialModifier), GetRegisterInfo_UnityEngine_UI_IMaterialModifier_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.Navigation), GetRegisterInfo_UnityEngine_UI_Navigation_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.RawImage), GetRegisterInfo_UnityEngine_UI_RawImage_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.RectMask2D), GetRegisterInfo_UnityEngine_UI_RectMask2D_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.ScrollRect), GetRegisterInfo_UnityEngine_UI_ScrollRect_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.Scrollbar), GetRegisterInfo_UnityEngine_UI_Scrollbar_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.Slider), GetRegisterInfo_UnityEngine_UI_Slider_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.SpriteState), GetRegisterInfo_UnityEngine_UI_SpriteState_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.StencilMaterial), GetRegisterInfo_UnityEngine_UI_StencilMaterial_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.Text), GetRegisterInfo_UnityEngine_UI_Text_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.ToggleGroup), GetRegisterInfo_UnityEngine_UI_ToggleGroup_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.VertexHelper), GetRegisterInfo_UnityEngine_UI_VertexHelper_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.BaseMeshEffect), GetRegisterInfo_UnityEngine_UI_BaseMeshEffect_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.IMeshModifier), GetRegisterInfo_UnityEngine_UI_IMeshModifier_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.Outline), GetRegisterInfo_UnityEngine_UI_Outline_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.PositionAsUV1), GetRegisterInfo_UnityEngine_UI_PositionAsUV1_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.Shadow), GetRegisterInfo_UnityEngine_UI_Shadow_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.DefaultControls.IFactoryControls), GetRegisterInfo_UnityEngine_UI_DefaultControls_IFactoryControls_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.DefaultControls.Resources), GetRegisterInfo_UnityEngine_UI_DefaultControls_Resources_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.Dropdown.OptionData), GetRegisterInfo_UnityEngine_UI_Dropdown_OptionData_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.Dropdown.OptionDataList), GetRegisterInfo_UnityEngine_UI_Dropdown_OptionDataList_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.Dropdown.DropdownEvent), GetRegisterInfo_UnityEngine_UI_Dropdown_DropdownEvent_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.InputField.SubmitEvent), GetRegisterInfo_UnityEngine_UI_InputField_SubmitEvent_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.InputField.OnChangeEvent), GetRegisterInfo_UnityEngine_UI_InputField_OnChangeEvent_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.MaskableGraphic.CullStateChangedEvent), GetRegisterInfo_UnityEngine_UI_MaskableGraphic_CullStateChangedEvent_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.ScrollRect.ScrollRectEvent), GetRegisterInfo_UnityEngine_UI_ScrollRect_ScrollRectEvent_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.Scrollbar.ScrollEvent), GetRegisterInfo_UnityEngine_UI_Scrollbar_ScrollEvent_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(UnityEngine.UI.Slider.SliderEvent), GetRegisterInfo_UnityEngine_UI_Slider_SliderEvent_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(TsSamples.Example2), GetRegisterInfo_TsSamples_Example2_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(TsSamples.Example3), GetRegisterInfo_TsSamples_Example3_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(TsSamples.Example4), GetRegisterInfo_TsSamples_Example4_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(TsSamples.Example5), GetRegisterInfo_TsSamples_Example5_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(Puerts.JsEnv), GetRegisterInfo_Puerts_JsEnv_Wrap);
                jsEnv.AddRegisterInfoGetter(typeof(Puerts.ILoader), GetRegisterInfo_Puerts_ILoader_Wrap);
        }
    }
}